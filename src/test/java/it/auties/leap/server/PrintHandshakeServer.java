package it.auties.leap.server;

import java.io.IOException;
import java.net.ServerSocket;

// curl -X GET --resolve api.ipify.org:8080:127.0.0.1 https://api.ipify.org:8080

public class PrintHandshakeServer {
    private static final int PORT = 8080;

    public static void main(String[] args) throws IOException {
        try (ServerSocket serverSocket = new ServerSocket(PORT)) {
            System.out.println("Server listening on port " + PORT);
            while (!serverSocket.isClosed()) {
                try (
                        var socket = serverSocket.accept();
                        var inputStream = socket.getInputStream()
                ) {
                    System.out.println("Connected to client: " + socket.getRemoteSocketAddress());
                    int data;
                    while ((data = inputStream.read()) != -1) {
                        System.out.printf("%02X", data);
                    }
                    System.out.println("\nConnection closed.");
                }
            }
        }
    }
}
