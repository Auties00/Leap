package it.auties.leap.tls.cipher;

import it.auties.leap.tls.cipher.auth.TlsAuth;
import it.auties.leap.tls.cipher.exchange.TlsKeyExchangeType;
import it.auties.leap.tls.config.TlsVersion;
import it.auties.leap.tls.cipher.engine.TlsCipherEngineType;
import it.auties.leap.tls.cipher.mode.TlsCipherModeType;
import it.auties.leap.tls.hash.TlsHashType;

import java.util.List;
import java.util.Objects;

// Most of the code here is autogenerated using GenerateCiphers
public final class TlsCipher {
    //<editor-fold desc="Ciphers">
    private static final TlsCipher TLS_AES_128_CCM_8_SHA256 = new TlsCipher(0x1305, TlsCipherEngineType.aes128(), TlsCipherModeType.ccm8(), TlsKeyExchangeType.none(), TlsAuth.none(), TlsHashType.sha256(), List.of(TlsVersion.TLS13), true);
    private static final TlsCipher TLS_AES_128_CCM_SHA256 = new TlsCipher(0x1304, TlsCipherEngineType.aes128(), TlsCipherModeType.ccm(), TlsKeyExchangeType.none(), TlsAuth.none(), TlsHashType.sha256(), List.of(TlsVersion.TLS13), true);
    private static final TlsCipher TLS_AES_128_GCM_SHA256 = new TlsCipher(0x1301, TlsCipherEngineType.aes128(), TlsCipherModeType.gcm(), TlsKeyExchangeType.none(), TlsAuth.none(), TlsHashType.sha256(), List.of(TlsVersion.TLS13), false);
    private static final TlsCipher TLS_AES_256_GCM_SHA384 = new TlsCipher(0x1302, TlsCipherEngineType.aes256(), TlsCipherModeType.gcm(), TlsKeyExchangeType.none(), TlsAuth.none(), TlsHashType.sha384(), List.of(TlsVersion.TLS13), false);
    private static final TlsCipher TLS_CHACHA20_POLY1305_SHA256 = new TlsCipher(0x1303, TlsCipherEngineType.chacha20(), TlsCipherModeType.poly1305(), TlsKeyExchangeType.none(), TlsAuth.none(), TlsHashType.sha256(), List.of(TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DH_ANON_EXPORT_WITH_DES40_CBC_SHA = new TlsCipher(0x0019, TlsCipherEngineType.des40(), TlsCipherModeType.cbc(), TlsKeyExchangeType.dh(), TlsAuth.anon(), TlsHashType.sha1(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DH_ANON_EXPORT_WITH_RC4_40_MD5 = new TlsCipher(0x0017, TlsCipherEngineType.rc4(), TlsCipherModeType.none(), TlsKeyExchangeType.dh(), TlsAuth.anon(), TlsHashType.md5(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DH_ANON_WITH_3DES_EDE_CBC_SHA = new TlsCipher(0x001B, TlsCipherEngineType.desEde(), TlsCipherModeType.cbc(), TlsKeyExchangeType.dh(), TlsAuth.anon(), TlsHashType.sha1(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DH_ANON_WITH_AES_128_CBC_SHA = new TlsCipher(0x0034, TlsCipherEngineType.aes128(), TlsCipherModeType.cbc(), TlsKeyExchangeType.dh(), TlsAuth.anon(), TlsHashType.sha1(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DH_ANON_WITH_AES_128_CBC_SHA256 = new TlsCipher(0x006C, TlsCipherEngineType.aes128(), TlsCipherModeType.cbc(), TlsKeyExchangeType.dh(), TlsAuth.anon(), TlsHashType.sha256(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DH_ANON_WITH_AES_128_GCM_SHA256 = new TlsCipher(0x00A6, TlsCipherEngineType.aes128(), TlsCipherModeType.gcm(), TlsKeyExchangeType.dh(), TlsAuth.anon(), TlsHashType.sha256(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DH_ANON_WITH_AES_256_CBC_SHA = new TlsCipher(0x003A, TlsCipherEngineType.aes256(), TlsCipherModeType.cbc(), TlsKeyExchangeType.dh(), TlsAuth.anon(), TlsHashType.sha1(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DH_ANON_WITH_AES_256_CBC_SHA256 = new TlsCipher(0x006D, TlsCipherEngineType.aes256(), TlsCipherModeType.cbc(), TlsKeyExchangeType.dh(), TlsAuth.anon(), TlsHashType.sha256(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DH_ANON_WITH_AES_256_GCM_SHA384 = new TlsCipher(0x00A7, TlsCipherEngineType.aes256(), TlsCipherModeType.gcm(), TlsKeyExchangeType.dh(), TlsAuth.anon(), TlsHashType.sha384(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DH_ANON_WITH_ARIA_128_CBC_SHA256 = new TlsCipher(0xC046, TlsCipherEngineType.aria128(), TlsCipherModeType.cbc(), TlsKeyExchangeType.dh(), TlsAuth.anon(), TlsHashType.sha256(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DH_ANON_WITH_ARIA_128_GCM_SHA256 = new TlsCipher(0xC05A, TlsCipherEngineType.aria128(), TlsCipherModeType.gcm(), TlsKeyExchangeType.dh(), TlsAuth.anon(), TlsHashType.sha256(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DH_ANON_WITH_ARIA_256_CBC_SHA384 = new TlsCipher(0xC047, TlsCipherEngineType.aria256(), TlsCipherModeType.cbc(), TlsKeyExchangeType.dh(), TlsAuth.anon(), TlsHashType.sha384(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DH_ANON_WITH_ARIA_256_GCM_SHA384 = new TlsCipher(0xC05B, TlsCipherEngineType.aria256(), TlsCipherModeType.gcm(), TlsKeyExchangeType.dh(), TlsAuth.anon(), TlsHashType.sha384(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DH_ANON_WITH_CAMELLIA_128_CBC_SHA = new TlsCipher(0x0046, TlsCipherEngineType.camellia128(), TlsCipherModeType.cbc(), TlsKeyExchangeType.dh(), TlsAuth.anon(), TlsHashType.sha1(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DH_ANON_WITH_CAMELLIA_128_CBC_SHA256 = new TlsCipher(0x00BF, TlsCipherEngineType.camellia128(), TlsCipherModeType.cbc(), TlsKeyExchangeType.dh(), TlsAuth.anon(), TlsHashType.sha256(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DH_ANON_WITH_CAMELLIA_128_GCM_SHA256 = new TlsCipher(0xC084, TlsCipherEngineType.camellia128(), TlsCipherModeType.gcm(), TlsKeyExchangeType.dh(), TlsAuth.anon(), TlsHashType.sha256(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DH_ANON_WITH_CAMELLIA_256_CBC_SHA = new TlsCipher(0x0089, TlsCipherEngineType.camellia256(), TlsCipherModeType.cbc(), TlsKeyExchangeType.dh(), TlsAuth.anon(), TlsHashType.sha1(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DH_ANON_WITH_CAMELLIA_256_CBC_SHA256 = new TlsCipher(0x00C5, TlsCipherEngineType.camellia256(), TlsCipherModeType.cbc(), TlsKeyExchangeType.dh(), TlsAuth.anon(), TlsHashType.sha256(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DH_ANON_WITH_CAMELLIA_256_GCM_SHA384 = new TlsCipher(0xC085, TlsCipherEngineType.camellia256(), TlsCipherModeType.gcm(), TlsKeyExchangeType.dh(), TlsAuth.anon(), TlsHashType.sha384(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DH_ANON_WITH_DES_CBC_SHA = new TlsCipher(0x001A, TlsCipherEngineType.des(), TlsCipherModeType.cbc(), TlsKeyExchangeType.dh(), TlsAuth.anon(), TlsHashType.sha1(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DH_ANON_WITH_RC4_128_MD5 = new TlsCipher(0x0018, TlsCipherEngineType.rc4(), TlsCipherModeType.none(), TlsKeyExchangeType.dh(), TlsAuth.anon(), TlsHashType.md5(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DH_ANON_WITH_SEED_CBC_SHA = new TlsCipher(0x009B, TlsCipherEngineType.seed(), TlsCipherModeType.cbc(), TlsKeyExchangeType.dh(), TlsAuth.anon(), TlsHashType.sha1(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DH_DSS_EXPORT_WITH_DES40_CBC_SHA = new TlsCipher(0x000B, TlsCipherEngineType.des40(), TlsCipherModeType.cbc(), TlsKeyExchangeType.dh(), TlsAuth.dss(), TlsHashType.sha1(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DH_DSS_WITH_3DES_EDE_CBC_SHA = new TlsCipher(0x000D, TlsCipherEngineType.desEde(), TlsCipherModeType.cbc(), TlsKeyExchangeType.dh(), TlsAuth.dss(), TlsHashType.sha1(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DH_DSS_WITH_AES_128_CBC_SHA = new TlsCipher(0x0030, TlsCipherEngineType.aes128(), TlsCipherModeType.cbc(), TlsKeyExchangeType.dh(), TlsAuth.dss(), TlsHashType.sha1(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DH_DSS_WITH_AES_128_CBC_SHA256 = new TlsCipher(0x003E, TlsCipherEngineType.aes128(), TlsCipherModeType.cbc(), TlsKeyExchangeType.dh(), TlsAuth.dss(), TlsHashType.sha256(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DH_DSS_WITH_AES_128_GCM_SHA256 = new TlsCipher(0x00A4, TlsCipherEngineType.aes128(), TlsCipherModeType.gcm(), TlsKeyExchangeType.dh(), TlsAuth.dss(), TlsHashType.sha256(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DH_DSS_WITH_AES_256_CBC_SHA = new TlsCipher(0x0036, TlsCipherEngineType.aes256(), TlsCipherModeType.cbc(), TlsKeyExchangeType.dh(), TlsAuth.dss(), TlsHashType.sha1(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DH_DSS_WITH_AES_256_CBC_SHA256 = new TlsCipher(0x0068, TlsCipherEngineType.aes256(), TlsCipherModeType.cbc(), TlsKeyExchangeType.dh(), TlsAuth.dss(), TlsHashType.sha256(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DH_DSS_WITH_AES_256_GCM_SHA384 = new TlsCipher(0x00A5, TlsCipherEngineType.aes256(), TlsCipherModeType.gcm(), TlsKeyExchangeType.dh(), TlsAuth.dss(), TlsHashType.sha384(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DH_DSS_WITH_ARIA_128_CBC_SHA256 = new TlsCipher(0xC03E, TlsCipherEngineType.aria128(), TlsCipherModeType.cbc(), TlsKeyExchangeType.dh(), TlsAuth.dss(), TlsHashType.sha256(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DH_DSS_WITH_ARIA_128_GCM_SHA256 = new TlsCipher(0xC058, TlsCipherEngineType.aria128(), TlsCipherModeType.gcm(), TlsKeyExchangeType.dh(), TlsAuth.dss(), TlsHashType.sha256(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DH_DSS_WITH_ARIA_256_CBC_SHA384 = new TlsCipher(0xC03F, TlsCipherEngineType.aria256(), TlsCipherModeType.cbc(), TlsKeyExchangeType.dh(), TlsAuth.dss(), TlsHashType.sha384(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DH_DSS_WITH_ARIA_256_GCM_SHA384 = new TlsCipher(0xC059, TlsCipherEngineType.aria256(), TlsCipherModeType.gcm(), TlsKeyExchangeType.dh(), TlsAuth.dss(), TlsHashType.sha384(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DH_DSS_WITH_CAMELLIA_128_CBC_SHA = new TlsCipher(0x0042, TlsCipherEngineType.camellia128(), TlsCipherModeType.cbc(), TlsKeyExchangeType.dh(), TlsAuth.dss(), TlsHashType.sha1(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DH_DSS_WITH_CAMELLIA_128_CBC_SHA256 = new TlsCipher(0x00BB, TlsCipherEngineType.camellia128(), TlsCipherModeType.cbc(), TlsKeyExchangeType.dh(), TlsAuth.dss(), TlsHashType.sha256(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DH_DSS_WITH_CAMELLIA_128_GCM_SHA256 = new TlsCipher(0xC082, TlsCipherEngineType.camellia128(), TlsCipherModeType.gcm(), TlsKeyExchangeType.dh(), TlsAuth.dss(), TlsHashType.sha256(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DH_DSS_WITH_CAMELLIA_256_CBC_SHA = new TlsCipher(0x0085, TlsCipherEngineType.camellia256(), TlsCipherModeType.cbc(), TlsKeyExchangeType.dh(), TlsAuth.dss(), TlsHashType.sha1(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DH_DSS_WITH_CAMELLIA_256_CBC_SHA256 = new TlsCipher(0x00C1, TlsCipherEngineType.camellia256(), TlsCipherModeType.cbc(), TlsKeyExchangeType.dh(), TlsAuth.dss(), TlsHashType.sha256(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DH_DSS_WITH_CAMELLIA_256_GCM_SHA384 = new TlsCipher(0xC083, TlsCipherEngineType.camellia256(), TlsCipherModeType.gcm(), TlsKeyExchangeType.dh(), TlsAuth.dss(), TlsHashType.sha384(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DH_DSS_WITH_DES_CBC_SHA = new TlsCipher(0x000C, TlsCipherEngineType.des(), TlsCipherModeType.cbc(), TlsKeyExchangeType.dh(), TlsAuth.dss(), TlsHashType.sha1(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DH_DSS_WITH_SEED_CBC_SHA = new TlsCipher(0x0097, TlsCipherEngineType.seed(), TlsCipherModeType.cbc(), TlsKeyExchangeType.dh(), TlsAuth.dss(), TlsHashType.sha1(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA = new TlsCipher(0x0011, TlsCipherEngineType.des40(), TlsCipherModeType.cbc(), TlsKeyExchangeType.dhe(), TlsAuth.dss(), TlsHashType.sha1(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA = new TlsCipher(0x0013, TlsCipherEngineType.desEde(), TlsCipherModeType.cbc(), TlsKeyExchangeType.dhe(), TlsAuth.dss(), TlsHashType.sha1(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DHE_DSS_WITH_AES_128_CBC_SHA = new TlsCipher(0x0032, TlsCipherEngineType.aes128(), TlsCipherModeType.cbc(), TlsKeyExchangeType.dhe(), TlsAuth.dss(), TlsHashType.sha1(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DHE_DSS_WITH_AES_128_CBC_SHA256 = new TlsCipher(0x0040, TlsCipherEngineType.aes128(), TlsCipherModeType.cbc(), TlsKeyExchangeType.dhe(), TlsAuth.dss(), TlsHashType.sha256(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DHE_DSS_WITH_AES_128_GCM_SHA256 = new TlsCipher(0x00A2, TlsCipherEngineType.aes128(), TlsCipherModeType.gcm(), TlsKeyExchangeType.dhe(), TlsAuth.dss(), TlsHashType.sha256(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DHE_DSS_WITH_AES_256_CBC_SHA = new TlsCipher(0x0038, TlsCipherEngineType.aes256(), TlsCipherModeType.cbc(), TlsKeyExchangeType.dhe(), TlsAuth.dss(), TlsHashType.sha1(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DHE_DSS_WITH_AES_256_CBC_SHA256 = new TlsCipher(0x006A, TlsCipherEngineType.aes256(), TlsCipherModeType.cbc(), TlsKeyExchangeType.dhe(), TlsAuth.dss(), TlsHashType.sha256(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DHE_DSS_WITH_AES_256_GCM_SHA384 = new TlsCipher(0x00A3, TlsCipherEngineType.aes256(), TlsCipherModeType.gcm(), TlsKeyExchangeType.dhe(), TlsAuth.dss(), TlsHashType.sha384(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DHE_DSS_WITH_ARIA_128_CBC_SHA256 = new TlsCipher(0xC042, TlsCipherEngineType.aria128(), TlsCipherModeType.cbc(), TlsKeyExchangeType.dhe(), TlsAuth.dss(), TlsHashType.sha256(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DHE_DSS_WITH_ARIA_128_GCM_SHA256 = new TlsCipher(0xC056, TlsCipherEngineType.aria128(), TlsCipherModeType.gcm(), TlsKeyExchangeType.dhe(), TlsAuth.dss(), TlsHashType.sha256(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DHE_DSS_WITH_ARIA_256_CBC_SHA384 = new TlsCipher(0xC043, TlsCipherEngineType.aria256(), TlsCipherModeType.cbc(), TlsKeyExchangeType.dhe(), TlsAuth.dss(), TlsHashType.sha384(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DHE_DSS_WITH_ARIA_256_GCM_SHA384 = new TlsCipher(0xC057, TlsCipherEngineType.aria256(), TlsCipherModeType.gcm(), TlsKeyExchangeType.dhe(), TlsAuth.dss(), TlsHashType.sha384(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA = new TlsCipher(0x0044, TlsCipherEngineType.camellia128(), TlsCipherModeType.cbc(), TlsKeyExchangeType.dhe(), TlsAuth.dss(), TlsHashType.sha1(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA256 = new TlsCipher(0x00BD, TlsCipherEngineType.camellia128(), TlsCipherModeType.cbc(), TlsKeyExchangeType.dhe(), TlsAuth.dss(), TlsHashType.sha256(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DHE_DSS_WITH_CAMELLIA_128_GCM_SHA256 = new TlsCipher(0xC080, TlsCipherEngineType.camellia128(), TlsCipherModeType.gcm(), TlsKeyExchangeType.dhe(), TlsAuth.dss(), TlsHashType.sha256(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA = new TlsCipher(0x0087, TlsCipherEngineType.camellia256(), TlsCipherModeType.cbc(), TlsKeyExchangeType.dhe(), TlsAuth.dss(), TlsHashType.sha1(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA256 = new TlsCipher(0x00C3, TlsCipherEngineType.camellia256(), TlsCipherModeType.cbc(), TlsKeyExchangeType.dhe(), TlsAuth.dss(), TlsHashType.sha256(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DHE_DSS_WITH_CAMELLIA_256_GCM_SHA384 = new TlsCipher(0xC081, TlsCipherEngineType.camellia256(), TlsCipherModeType.gcm(), TlsKeyExchangeType.dhe(), TlsAuth.dss(), TlsHashType.sha384(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DHE_DSS_WITH_DES_CBC_SHA = new TlsCipher(0x0012, TlsCipherEngineType.des(), TlsCipherModeType.cbc(), TlsKeyExchangeType.dhe(), TlsAuth.dss(), TlsHashType.sha1(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DHE_DSS_WITH_SEED_CBC_SHA = new TlsCipher(0x0099, TlsCipherEngineType.seed(), TlsCipherModeType.cbc(), TlsKeyExchangeType.dhe(), TlsAuth.dss(), TlsHashType.sha1(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DHE_PSK_WITH_3DES_EDE_CBC_SHA = new TlsCipher(0x008F, TlsCipherEngineType.desEde(), TlsCipherModeType.cbc(), TlsKeyExchangeType.dhe(), TlsAuth.psk(), TlsHashType.sha1(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DHE_PSK_WITH_AES_128_CBC_SHA = new TlsCipher(0x0090, TlsCipherEngineType.aes128(), TlsCipherModeType.cbc(), TlsKeyExchangeType.dhe(), TlsAuth.psk(), TlsHashType.sha1(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DHE_PSK_WITH_AES_128_CBC_SHA256 = new TlsCipher(0x00B2, TlsCipherEngineType.aes128(), TlsCipherModeType.cbc(), TlsKeyExchangeType.dhe(), TlsAuth.psk(), TlsHashType.sha256(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DHE_PSK_WITH_AES_128_CCM = new TlsCipher(0xC0A6, TlsCipherEngineType.aes128(), TlsCipherModeType.ccm(), TlsKeyExchangeType.dhe(), TlsAuth.psk(), TlsHashType.sha256(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DHE_PSK_WITH_AES_128_GCM_SHA256 = new TlsCipher(0x00AA, TlsCipherEngineType.aes128(), TlsCipherModeType.gcm(), TlsKeyExchangeType.dhe(), TlsAuth.psk(), TlsHashType.sha256(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DHE_PSK_WITH_AES_256_CBC_SHA = new TlsCipher(0x0091, TlsCipherEngineType.aes256(), TlsCipherModeType.cbc(), TlsKeyExchangeType.dhe(), TlsAuth.psk(), TlsHashType.sha1(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DHE_PSK_WITH_AES_256_CBC_SHA384 = new TlsCipher(0x00B3, TlsCipherEngineType.aes256(), TlsCipherModeType.cbc(), TlsKeyExchangeType.dhe(), TlsAuth.psk(), TlsHashType.sha384(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DHE_PSK_WITH_AES_256_CCM = new TlsCipher(0xC0A7, TlsCipherEngineType.aes256(), TlsCipherModeType.ccm(), TlsKeyExchangeType.dhe(), TlsAuth.psk(), TlsHashType.sha256(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DHE_PSK_WITH_AES_256_GCM_SHA384 = new TlsCipher(0x00AB, TlsCipherEngineType.aes256(), TlsCipherModeType.gcm(), TlsKeyExchangeType.dhe(), TlsAuth.psk(), TlsHashType.sha384(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DHE_PSK_WITH_ARIA_128_CBC_SHA256 = new TlsCipher(0xC066, TlsCipherEngineType.aria128(), TlsCipherModeType.cbc(), TlsKeyExchangeType.dhe(), TlsAuth.psk(), TlsHashType.sha256(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DHE_PSK_WITH_ARIA_128_GCM_SHA256 = new TlsCipher(0xC06C, TlsCipherEngineType.aria128(), TlsCipherModeType.gcm(), TlsKeyExchangeType.dhe(), TlsAuth.psk(), TlsHashType.sha256(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DHE_PSK_WITH_ARIA_256_CBC_SHA384 = new TlsCipher(0xC067, TlsCipherEngineType.aria256(), TlsCipherModeType.cbc(), TlsKeyExchangeType.dhe(), TlsAuth.psk(), TlsHashType.sha384(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DHE_PSK_WITH_ARIA_256_GCM_SHA384 = new TlsCipher(0xC06D, TlsCipherEngineType.aria256(), TlsCipherModeType.gcm(), TlsKeyExchangeType.dhe(), TlsAuth.psk(), TlsHashType.sha384(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DHE_PSK_WITH_CAMELLIA_128_CBC_SHA256 = new TlsCipher(0xC096, TlsCipherEngineType.camellia128(), TlsCipherModeType.cbc(), TlsKeyExchangeType.dhe(), TlsAuth.psk(), TlsHashType.sha256(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DHE_PSK_WITH_CAMELLIA_128_GCM_SHA256 = new TlsCipher(0xC090, TlsCipherEngineType.camellia128(), TlsCipherModeType.gcm(), TlsKeyExchangeType.dhe(), TlsAuth.psk(), TlsHashType.sha256(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DHE_PSK_WITH_CAMELLIA_256_CBC_SHA384 = new TlsCipher(0xC097, TlsCipherEngineType.camellia256(), TlsCipherModeType.cbc(), TlsKeyExchangeType.dhe(), TlsAuth.psk(), TlsHashType.sha384(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DHE_PSK_WITH_CAMELLIA_256_GCM_SHA384 = new TlsCipher(0xC091, TlsCipherEngineType.camellia256(), TlsCipherModeType.gcm(), TlsKeyExchangeType.dhe(), TlsAuth.psk(), TlsHashType.sha384(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DHE_PSK_WITH_CHACHA20_POLY1305_SHA256 = new TlsCipher(0xCCAD, TlsCipherEngineType.chacha20(), TlsCipherModeType.poly1305(), TlsKeyExchangeType.dhe(), TlsAuth.psk(), TlsHashType.sha256(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DHE_PSK_WITH_NULL_SHA = new TlsCipher(0x002D, TlsCipherEngineType.none(), TlsCipherModeType.none(), TlsKeyExchangeType.dhe(), TlsAuth.psk(), TlsHashType.sha1(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DHE_PSK_WITH_NULL_SHA256 = new TlsCipher(0x00B4, TlsCipherEngineType.none(), TlsCipherModeType.none(), TlsKeyExchangeType.dhe(), TlsAuth.psk(), TlsHashType.sha256(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DHE_PSK_WITH_NULL_SHA384 = new TlsCipher(0x00B5, TlsCipherEngineType.none(), TlsCipherModeType.none(), TlsKeyExchangeType.dhe(), TlsAuth.psk(), TlsHashType.sha384(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DHE_PSK_WITH_RC4_128_SHA = new TlsCipher(0x008E, TlsCipherEngineType.rc4(), TlsCipherModeType.none(), TlsKeyExchangeType.dhe(), TlsAuth.psk(), TlsHashType.sha1(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA = new TlsCipher(0x0014, TlsCipherEngineType.des40(), TlsCipherModeType.cbc(), TlsKeyExchangeType.dhe(), TlsAuth.rsa(), TlsHashType.sha1(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA = new TlsCipher(0x0016, TlsCipherEngineType.desEde(), TlsCipherModeType.cbc(), TlsKeyExchangeType.dhe(), TlsAuth.rsa(), TlsHashType.sha1(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DHE_RSA_WITH_AES_128_CBC_SHA = new TlsCipher(0x0033, TlsCipherEngineType.aes128(), TlsCipherModeType.cbc(), TlsKeyExchangeType.dhe(), TlsAuth.rsa(), TlsHashType.sha1(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DHE_RSA_WITH_AES_128_CBC_SHA256 = new TlsCipher(0x0067, TlsCipherEngineType.aes128(), TlsCipherModeType.cbc(), TlsKeyExchangeType.dhe(), TlsAuth.rsa(), TlsHashType.sha256(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DHE_RSA_WITH_AES_128_CCM = new TlsCipher(0xC09E, TlsCipherEngineType.aes128(), TlsCipherModeType.ccm(), TlsKeyExchangeType.dhe(), TlsAuth.rsa(), TlsHashType.sha256(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DHE_RSA_WITH_AES_128_CCM_8 = new TlsCipher(0xC0A2, TlsCipherEngineType.aes128(), TlsCipherModeType.ccm8(), TlsKeyExchangeType.dhe(), TlsAuth.rsa(), TlsHashType.sha256(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DHE_RSA_WITH_AES_128_GCM_SHA256 = new TlsCipher(0x009E, TlsCipherEngineType.aes128(), TlsCipherModeType.gcm(), TlsKeyExchangeType.dhe(), TlsAuth.rsa(), TlsHashType.sha256(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DHE_RSA_WITH_AES_256_CBC_SHA = new TlsCipher(0x0039, TlsCipherEngineType.aes256(), TlsCipherModeType.cbc(), TlsKeyExchangeType.dhe(), TlsAuth.rsa(), TlsHashType.sha1(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DHE_RSA_WITH_AES_256_CBC_SHA256 = new TlsCipher(0x006B, TlsCipherEngineType.aes256(), TlsCipherModeType.cbc(), TlsKeyExchangeType.dhe(), TlsAuth.rsa(), TlsHashType.sha256(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DHE_RSA_WITH_AES_256_CCM = new TlsCipher(0xC09F, TlsCipherEngineType.aes256(), TlsCipherModeType.ccm(), TlsKeyExchangeType.dhe(), TlsAuth.rsa(), TlsHashType.sha256(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DHE_RSA_WITH_AES_256_CCM_8 = new TlsCipher(0xC0A3, TlsCipherEngineType.aes256(), TlsCipherModeType.ccm8(), TlsKeyExchangeType.dhe(), TlsAuth.rsa(), TlsHashType.sha256(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DHE_RSA_WITH_AES_256_GCM_SHA384 = new TlsCipher(0x009F, TlsCipherEngineType.aes256(), TlsCipherModeType.gcm(), TlsKeyExchangeType.dhe(), TlsAuth.rsa(), TlsHashType.sha384(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DHE_RSA_WITH_ARIA_128_CBC_SHA256 = new TlsCipher(0xC044, TlsCipherEngineType.aria128(), TlsCipherModeType.cbc(), TlsKeyExchangeType.dhe(), TlsAuth.rsa(), TlsHashType.sha256(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DHE_RSA_WITH_ARIA_128_GCM_SHA256 = new TlsCipher(0xC052, TlsCipherEngineType.aria128(), TlsCipherModeType.gcm(), TlsKeyExchangeType.dhe(), TlsAuth.rsa(), TlsHashType.sha256(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DHE_RSA_WITH_ARIA_256_CBC_SHA384 = new TlsCipher(0xC045, TlsCipherEngineType.aria256(), TlsCipherModeType.cbc(), TlsKeyExchangeType.dhe(), TlsAuth.rsa(), TlsHashType.sha384(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DHE_RSA_WITH_ARIA_256_GCM_SHA384 = new TlsCipher(0xC053, TlsCipherEngineType.aria256(), TlsCipherModeType.gcm(), TlsKeyExchangeType.dhe(), TlsAuth.rsa(), TlsHashType.sha384(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA = new TlsCipher(0x0045, TlsCipherEngineType.camellia128(), TlsCipherModeType.cbc(), TlsKeyExchangeType.dhe(), TlsAuth.rsa(), TlsHashType.sha1(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA256 = new TlsCipher(0x00BE, TlsCipherEngineType.camellia128(), TlsCipherModeType.cbc(), TlsKeyExchangeType.dhe(), TlsAuth.rsa(), TlsHashType.sha256(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DHE_RSA_WITH_CAMELLIA_128_GCM_SHA256 = new TlsCipher(0xC07C, TlsCipherEngineType.camellia128(), TlsCipherModeType.gcm(), TlsKeyExchangeType.dhe(), TlsAuth.rsa(), TlsHashType.sha256(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA = new TlsCipher(0x0088, TlsCipherEngineType.camellia256(), TlsCipherModeType.cbc(), TlsKeyExchangeType.dhe(), TlsAuth.rsa(), TlsHashType.sha1(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA256 = new TlsCipher(0x00C4, TlsCipherEngineType.camellia256(), TlsCipherModeType.cbc(), TlsKeyExchangeType.dhe(), TlsAuth.rsa(), TlsHashType.sha256(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DHE_RSA_WITH_CAMELLIA_256_GCM_SHA384 = new TlsCipher(0xC07D, TlsCipherEngineType.camellia256(), TlsCipherModeType.gcm(), TlsKeyExchangeType.dhe(), TlsAuth.rsa(), TlsHashType.sha384(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DHE_RSA_WITH_CHACHA20_POLY1305_SHA256 = new TlsCipher(0xCCAA, TlsCipherEngineType.chacha20(), TlsCipherModeType.poly1305(), TlsKeyExchangeType.dhe(), TlsAuth.rsa(), TlsHashType.sha256(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DHE_RSA_WITH_DES_CBC_SHA = new TlsCipher(0x0015, TlsCipherEngineType.des(), TlsCipherModeType.cbc(), TlsKeyExchangeType.dhe(), TlsAuth.rsa(), TlsHashType.sha1(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DHE_RSA_WITH_SEED_CBC_SHA = new TlsCipher(0x009A, TlsCipherEngineType.seed(), TlsCipherModeType.cbc(), TlsKeyExchangeType.dhe(), TlsAuth.rsa(), TlsHashType.sha1(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DH_RSA_EXPORT_WITH_DES40_CBC_SHA = new TlsCipher(0x000E, TlsCipherEngineType.des40(), TlsCipherModeType.cbc(), TlsKeyExchangeType.dh(), TlsAuth.rsa(), TlsHashType.sha1(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DH_RSA_WITH_3DES_EDE_CBC_SHA = new TlsCipher(0x0010, TlsCipherEngineType.desEde(), TlsCipherModeType.cbc(), TlsKeyExchangeType.dh(), TlsAuth.rsa(), TlsHashType.sha1(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DH_RSA_WITH_AES_128_CBC_SHA = new TlsCipher(0x0031, TlsCipherEngineType.aes128(), TlsCipherModeType.cbc(), TlsKeyExchangeType.dh(), TlsAuth.rsa(), TlsHashType.sha1(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DH_RSA_WITH_AES_128_CBC_SHA256 = new TlsCipher(0x003F, TlsCipherEngineType.aes128(), TlsCipherModeType.cbc(), TlsKeyExchangeType.dh(), TlsAuth.rsa(), TlsHashType.sha256(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DH_RSA_WITH_AES_128_GCM_SHA256 = new TlsCipher(0x00A0, TlsCipherEngineType.aes128(), TlsCipherModeType.gcm(), TlsKeyExchangeType.dh(), TlsAuth.rsa(), TlsHashType.sha256(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DH_RSA_WITH_AES_256_CBC_SHA = new TlsCipher(0x0037, TlsCipherEngineType.aes256(), TlsCipherModeType.cbc(), TlsKeyExchangeType.dh(), TlsAuth.rsa(), TlsHashType.sha1(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DH_RSA_WITH_AES_256_CBC_SHA256 = new TlsCipher(0x0069, TlsCipherEngineType.aes256(), TlsCipherModeType.cbc(), TlsKeyExchangeType.dh(), TlsAuth.rsa(), TlsHashType.sha256(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DH_RSA_WITH_AES_256_GCM_SHA384 = new TlsCipher(0x00A1, TlsCipherEngineType.aes256(), TlsCipherModeType.gcm(), TlsKeyExchangeType.dh(), TlsAuth.rsa(), TlsHashType.sha384(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DH_RSA_WITH_ARIA_128_CBC_SHA256 = new TlsCipher(0xC040, TlsCipherEngineType.aria128(), TlsCipherModeType.cbc(), TlsKeyExchangeType.dh(), TlsAuth.rsa(), TlsHashType.sha256(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DH_RSA_WITH_ARIA_128_GCM_SHA256 = new TlsCipher(0xC054, TlsCipherEngineType.aria128(), TlsCipherModeType.gcm(), TlsKeyExchangeType.dh(), TlsAuth.rsa(), TlsHashType.sha256(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DH_RSA_WITH_ARIA_256_CBC_SHA384 = new TlsCipher(0xC041, TlsCipherEngineType.aria256(), TlsCipherModeType.cbc(), TlsKeyExchangeType.dh(), TlsAuth.rsa(), TlsHashType.sha384(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DH_RSA_WITH_ARIA_256_GCM_SHA384 = new TlsCipher(0xC055, TlsCipherEngineType.aria256(), TlsCipherModeType.gcm(), TlsKeyExchangeType.dh(), TlsAuth.rsa(), TlsHashType.sha384(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DH_RSA_WITH_CAMELLIA_128_CBC_SHA = new TlsCipher(0x0043, TlsCipherEngineType.camellia128(), TlsCipherModeType.cbc(), TlsKeyExchangeType.dh(), TlsAuth.rsa(), TlsHashType.sha1(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DH_RSA_WITH_CAMELLIA_128_CBC_SHA256 = new TlsCipher(0x00BC, TlsCipherEngineType.camellia128(), TlsCipherModeType.cbc(), TlsKeyExchangeType.dh(), TlsAuth.rsa(), TlsHashType.sha256(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DH_RSA_WITH_CAMELLIA_128_GCM_SHA256 = new TlsCipher(0xC07E, TlsCipherEngineType.camellia128(), TlsCipherModeType.gcm(), TlsKeyExchangeType.dh(), TlsAuth.rsa(), TlsHashType.sha256(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DH_RSA_WITH_CAMELLIA_256_CBC_SHA = new TlsCipher(0x0086, TlsCipherEngineType.camellia256(), TlsCipherModeType.cbc(), TlsKeyExchangeType.dh(), TlsAuth.rsa(), TlsHashType.sha1(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DH_RSA_WITH_CAMELLIA_256_CBC_SHA256 = new TlsCipher(0x00C2, TlsCipherEngineType.camellia256(), TlsCipherModeType.cbc(), TlsKeyExchangeType.dh(), TlsAuth.rsa(), TlsHashType.sha256(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DH_RSA_WITH_CAMELLIA_256_GCM_SHA384 = new TlsCipher(0xC07F, TlsCipherEngineType.camellia256(), TlsCipherModeType.gcm(), TlsKeyExchangeType.dh(), TlsAuth.rsa(), TlsHashType.sha384(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DH_RSA_WITH_DES_CBC_SHA = new TlsCipher(0x000F, TlsCipherEngineType.des(), TlsCipherModeType.cbc(), TlsKeyExchangeType.dh(), TlsAuth.rsa(), TlsHashType.sha1(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_DH_RSA_WITH_SEED_CBC_SHA = new TlsCipher(0x0098, TlsCipherEngineType.seed(), TlsCipherModeType.cbc(), TlsKeyExchangeType.dh(), TlsAuth.rsa(), TlsHashType.sha1(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_ECCPWD_WITH_AES_128_CCM_SHA256 = new TlsCipher(0xC0B2, TlsCipherEngineType.aes128(), TlsCipherModeType.ccm(), TlsKeyExchangeType.eccPwd(), TlsAuth.eccpwd(), TlsHashType.sha256(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), true);
    private static final TlsCipher TLS_ECCPWD_WITH_AES_128_GCM_SHA256 = new TlsCipher(0xC0B0, TlsCipherEngineType.aes128(), TlsCipherModeType.gcm(), TlsKeyExchangeType.eccPwd(), TlsAuth.eccpwd(), TlsHashType.sha256(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_ECCPWD_WITH_AES_256_CCM_SHA384 = new TlsCipher(0xC0B3, TlsCipherEngineType.aes256(), TlsCipherModeType.ccm(), TlsKeyExchangeType.eccPwd(), TlsAuth.eccpwd(), TlsHashType.sha384(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), true);
    private static final TlsCipher TLS_ECCPWD_WITH_AES_256_GCM_SHA384 = new TlsCipher(0xC0B1, TlsCipherEngineType.aes256(), TlsCipherModeType.gcm(), TlsKeyExchangeType.eccPwd(), TlsAuth.eccpwd(), TlsHashType.sha384(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_ECDH_ANON_WITH_3DES_EDE_CBC_SHA = new TlsCipher(0xC017, TlsCipherEngineType.desEde(), TlsCipherModeType.cbc(), TlsKeyExchangeType.ecdh(), TlsAuth.anon(), TlsHashType.sha1(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_ECDH_ANON_WITH_AES_128_CBC_SHA = new TlsCipher(0xC018, TlsCipherEngineType.aes128(), TlsCipherModeType.cbc(), TlsKeyExchangeType.ecdh(), TlsAuth.anon(), TlsHashType.sha1(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_ECDH_ANON_WITH_AES_256_CBC_SHA = new TlsCipher(0xC019, TlsCipherEngineType.aes256(), TlsCipherModeType.cbc(), TlsKeyExchangeType.ecdh(), TlsAuth.anon(), TlsHashType.sha1(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_ECDH_ANON_WITH_NULL_SHA = new TlsCipher(0xC015, TlsCipherEngineType.none(), TlsCipherModeType.none(), TlsKeyExchangeType.ecdh(), TlsAuth.anon(), TlsHashType.sha1(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_ECDH_ANON_WITH_RC4_128_SHA = new TlsCipher(0xC016, TlsCipherEngineType.rc4(), TlsCipherModeType.none(), TlsKeyExchangeType.ecdh(), TlsAuth.anon(), TlsHashType.sha1(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA = new TlsCipher(0xC003, TlsCipherEngineType.desEde(), TlsCipherModeType.cbc(), TlsKeyExchangeType.ecdh(), TlsAuth.ecdsa(), TlsHashType.sha1(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA = new TlsCipher(0xC004, TlsCipherEngineType.aes128(), TlsCipherModeType.cbc(), TlsKeyExchangeType.ecdh(), TlsAuth.ecdsa(), TlsHashType.sha1(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256 = new TlsCipher(0xC025, TlsCipherEngineType.aes128(), TlsCipherModeType.cbc(), TlsKeyExchangeType.ecdh(), TlsAuth.ecdsa(), TlsHashType.sha256(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256 = new TlsCipher(0xC02D, TlsCipherEngineType.aes128(), TlsCipherModeType.gcm(), TlsKeyExchangeType.ecdh(), TlsAuth.ecdsa(), TlsHashType.sha256(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA = new TlsCipher(0xC005, TlsCipherEngineType.aes256(), TlsCipherModeType.cbc(), TlsKeyExchangeType.ecdh(), TlsAuth.ecdsa(), TlsHashType.sha1(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384 = new TlsCipher(0xC026, TlsCipherEngineType.aes256(), TlsCipherModeType.cbc(), TlsKeyExchangeType.ecdh(), TlsAuth.ecdsa(), TlsHashType.sha384(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384 = new TlsCipher(0xC02E, TlsCipherEngineType.aes256(), TlsCipherModeType.gcm(), TlsKeyExchangeType.ecdh(), TlsAuth.ecdsa(), TlsHashType.sha384(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_ECDH_ECDSA_WITH_ARIA_128_CBC_SHA256 = new TlsCipher(0xC04A, TlsCipherEngineType.aria128(), TlsCipherModeType.cbc(), TlsKeyExchangeType.ecdh(), TlsAuth.ecdsa(), TlsHashType.sha256(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_ECDH_ECDSA_WITH_ARIA_128_GCM_SHA256 = new TlsCipher(0xC05E, TlsCipherEngineType.aria128(), TlsCipherModeType.gcm(), TlsKeyExchangeType.ecdh(), TlsAuth.ecdsa(), TlsHashType.sha256(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_ECDH_ECDSA_WITH_ARIA_256_CBC_SHA384 = new TlsCipher(0xC04B, TlsCipherEngineType.aria256(), TlsCipherModeType.cbc(), TlsKeyExchangeType.ecdh(), TlsAuth.ecdsa(), TlsHashType.sha384(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_ECDH_ECDSA_WITH_ARIA_256_GCM_SHA384 = new TlsCipher(0xC05F, TlsCipherEngineType.aria256(), TlsCipherModeType.gcm(), TlsKeyExchangeType.ecdh(), TlsAuth.ecdsa(), TlsHashType.sha384(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_ECDH_ECDSA_WITH_CAMELLIA_128_CBC_SHA256 = new TlsCipher(0xC074, TlsCipherEngineType.camellia128(), TlsCipherModeType.cbc(), TlsKeyExchangeType.ecdh(), TlsAuth.ecdsa(), TlsHashType.sha256(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_ECDH_ECDSA_WITH_CAMELLIA_128_GCM_SHA256 = new TlsCipher(0xC088, TlsCipherEngineType.camellia128(), TlsCipherModeType.gcm(), TlsKeyExchangeType.ecdh(), TlsAuth.ecdsa(), TlsHashType.sha256(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_ECDH_ECDSA_WITH_CAMELLIA_256_CBC_SHA384 = new TlsCipher(0xC075, TlsCipherEngineType.camellia256(), TlsCipherModeType.cbc(), TlsKeyExchangeType.ecdh(), TlsAuth.ecdsa(), TlsHashType.sha384(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_ECDH_ECDSA_WITH_CAMELLIA_256_GCM_SHA384 = new TlsCipher(0xC089, TlsCipherEngineType.camellia256(), TlsCipherModeType.gcm(), TlsKeyExchangeType.ecdh(), TlsAuth.ecdsa(), TlsHashType.sha384(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_ECDH_ECDSA_WITH_NULL_SHA = new TlsCipher(0xC001, TlsCipherEngineType.none(), TlsCipherModeType.none(), TlsKeyExchangeType.ecdh(), TlsAuth.ecdsa(), TlsHashType.sha1(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_ECDH_ECDSA_WITH_RC4_128_SHA = new TlsCipher(0xC002, TlsCipherEngineType.rc4(), TlsCipherModeType.none(), TlsKeyExchangeType.ecdh(), TlsAuth.ecdsa(), TlsHashType.sha1(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA = new TlsCipher(0xC008, TlsCipherEngineType.desEde(), TlsCipherModeType.cbc(), TlsKeyExchangeType.ecdhe(), TlsAuth.ecdsa(), TlsHashType.sha1(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA = new TlsCipher(0xC009, TlsCipherEngineType.aes128(), TlsCipherModeType.cbc(), TlsKeyExchangeType.ecdhe(), TlsAuth.ecdsa(), TlsHashType.sha1(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256 = new TlsCipher(0xC023, TlsCipherEngineType.aes128(), TlsCipherModeType.cbc(), TlsKeyExchangeType.ecdhe(), TlsAuth.ecdsa(), TlsHashType.sha256(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_ECDHE_ECDSA_WITH_AES_128_CCM = new TlsCipher(0xC0AC, TlsCipherEngineType.aes128(), TlsCipherModeType.ccm(), TlsKeyExchangeType.ecdhe(), TlsAuth.ecdsa(), TlsHashType.sha256(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), true);
    private static final TlsCipher TLS_ECDHE_ECDSA_WITH_AES_128_CCM_8 = new TlsCipher(0xC0AE, TlsCipherEngineType.aes128(), TlsCipherModeType.ccm8(), TlsKeyExchangeType.ecdhe(), TlsAuth.ecdsa(), TlsHashType.sha256(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), true);
    private static final TlsCipher TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256 = new TlsCipher(0xC02B, TlsCipherEngineType.aes128(), TlsCipherModeType.gcm(), TlsKeyExchangeType.ecdhe(), TlsAuth.ecdsa(), TlsHashType.sha256(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA = new TlsCipher(0xC00A, TlsCipherEngineType.aes256(), TlsCipherModeType.cbc(), TlsKeyExchangeType.ecdhe(), TlsAuth.ecdsa(), TlsHashType.sha1(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384 = new TlsCipher(0xC024, TlsCipherEngineType.aes256(), TlsCipherModeType.cbc(), TlsKeyExchangeType.ecdhe(), TlsAuth.ecdsa(), TlsHashType.sha384(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_ECDHE_ECDSA_WITH_AES_256_CCM = new TlsCipher(0xC0AD, TlsCipherEngineType.aes256(), TlsCipherModeType.ccm(), TlsKeyExchangeType.ecdhe(), TlsAuth.ecdsa(), TlsHashType.sha256(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), true);
    private static final TlsCipher TLS_ECDHE_ECDSA_WITH_AES_256_CCM_8 = new TlsCipher(0xC0AF, TlsCipherEngineType.aes256(), TlsCipherModeType.ccm8(), TlsKeyExchangeType.ecdhe(), TlsAuth.ecdsa(), TlsHashType.sha256(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), true);
    private static final TlsCipher TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384 = new TlsCipher(0xC02C, TlsCipherEngineType.aes256(), TlsCipherModeType.gcm(), TlsKeyExchangeType.ecdhe(), TlsAuth.ecdsa(), TlsHashType.sha384(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_ECDHE_ECDSA_WITH_ARIA_128_CBC_SHA256 = new TlsCipher(0xC048, TlsCipherEngineType.aria128(), TlsCipherModeType.cbc(), TlsKeyExchangeType.ecdhe(), TlsAuth.ecdsa(), TlsHashType.sha256(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_ECDHE_ECDSA_WITH_ARIA_128_GCM_SHA256 = new TlsCipher(0xC05C, TlsCipherEngineType.aria128(), TlsCipherModeType.gcm(), TlsKeyExchangeType.ecdhe(), TlsAuth.ecdsa(), TlsHashType.sha256(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_ECDHE_ECDSA_WITH_ARIA_256_CBC_SHA384 = new TlsCipher(0xC049, TlsCipherEngineType.aria256(), TlsCipherModeType.cbc(), TlsKeyExchangeType.ecdhe(), TlsAuth.ecdsa(), TlsHashType.sha384(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_ECDHE_ECDSA_WITH_ARIA_256_GCM_SHA384 = new TlsCipher(0xC05D, TlsCipherEngineType.aria256(), TlsCipherModeType.gcm(), TlsKeyExchangeType.ecdhe(), TlsAuth.ecdsa(), TlsHashType.sha384(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_CBC_SHA256 = new TlsCipher(0xC072, TlsCipherEngineType.camellia128(), TlsCipherModeType.cbc(), TlsKeyExchangeType.ecdhe(), TlsAuth.ecdsa(), TlsHashType.sha256(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_GCM_SHA256 = new TlsCipher(0xC086, TlsCipherEngineType.camellia128(), TlsCipherModeType.gcm(), TlsKeyExchangeType.ecdhe(), TlsAuth.ecdsa(), TlsHashType.sha256(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_CBC_SHA384 = new TlsCipher(0xC073, TlsCipherEngineType.camellia256(), TlsCipherModeType.cbc(), TlsKeyExchangeType.ecdhe(), TlsAuth.ecdsa(), TlsHashType.sha384(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_GCM_SHA384 = new TlsCipher(0xC087, TlsCipherEngineType.camellia256(), TlsCipherModeType.gcm(), TlsKeyExchangeType.ecdhe(), TlsAuth.ecdsa(), TlsHashType.sha384(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256 = new TlsCipher(0xCCA9, TlsCipherEngineType.chacha20(), TlsCipherModeType.poly1305(), TlsKeyExchangeType.ecdhe(), TlsAuth.ecdsa(), TlsHashType.sha256(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_ECDHE_ECDSA_WITH_NULL_SHA = new TlsCipher(0xC006, TlsCipherEngineType.none(), TlsCipherModeType.none(), TlsKeyExchangeType.ecdhe(), TlsAuth.ecdsa(), TlsHashType.sha1(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_ECDHE_ECDSA_WITH_RC4_128_SHA = new TlsCipher(0xC007, TlsCipherEngineType.rc4(), TlsCipherModeType.none(), TlsKeyExchangeType.ecdhe(), TlsAuth.ecdsa(), TlsHashType.sha1(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_ECDHE_PSK_WITH_3DES_EDE_CBC_SHA = new TlsCipher(0xC034, TlsCipherEngineType.desEde(), TlsCipherModeType.cbc(), TlsKeyExchangeType.ecdhe(), TlsAuth.psk(), TlsHashType.sha1(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA = new TlsCipher(0xC035, TlsCipherEngineType.aes128(), TlsCipherModeType.cbc(), TlsKeyExchangeType.ecdhe(), TlsAuth.psk(), TlsHashType.sha1(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA256 = new TlsCipher(0xC037, TlsCipherEngineType.aes128(), TlsCipherModeType.cbc(), TlsKeyExchangeType.ecdhe(), TlsAuth.psk(), TlsHashType.sha256(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_ECDHE_PSK_WITH_AES_128_CCM_8_SHA256 = new TlsCipher(0xD003, TlsCipherEngineType.aes128(), TlsCipherModeType.ccm8(), TlsKeyExchangeType.ecdhe(), TlsAuth.psk(), TlsHashType.sha256(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), true);
    private static final TlsCipher TLS_ECDHE_PSK_WITH_AES_128_CCM_SHA256 = new TlsCipher(0xD005, TlsCipherEngineType.aes128(), TlsCipherModeType.ccm(), TlsKeyExchangeType.ecdhe(), TlsAuth.psk(), TlsHashType.sha256(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), true);
    private static final TlsCipher TLS_ECDHE_PSK_WITH_AES_128_GCM_SHA256 = new TlsCipher(0xD001, TlsCipherEngineType.aes128(), TlsCipherModeType.gcm(), TlsKeyExchangeType.ecdhe(), TlsAuth.psk(), TlsHashType.sha256(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA = new TlsCipher(0xC036, TlsCipherEngineType.aes256(), TlsCipherModeType.cbc(), TlsKeyExchangeType.ecdhe(), TlsAuth.psk(), TlsHashType.sha1(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA384 = new TlsCipher(0xC038, TlsCipherEngineType.aes256(), TlsCipherModeType.cbc(), TlsKeyExchangeType.ecdhe(), TlsAuth.psk(), TlsHashType.sha384(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_ECDHE_PSK_WITH_AES_256_GCM_SHA384 = new TlsCipher(0xD002, TlsCipherEngineType.aes256(), TlsCipherModeType.gcm(), TlsKeyExchangeType.ecdhe(), TlsAuth.psk(), TlsHashType.sha384(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_ECDHE_PSK_WITH_ARIA_128_CBC_SHA256 = new TlsCipher(0xC070, TlsCipherEngineType.aria128(), TlsCipherModeType.cbc(), TlsKeyExchangeType.ecdhe(), TlsAuth.psk(), TlsHashType.sha256(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_ECDHE_PSK_WITH_ARIA_256_CBC_SHA384 = new TlsCipher(0xC071, TlsCipherEngineType.aria256(), TlsCipherModeType.cbc(), TlsKeyExchangeType.ecdhe(), TlsAuth.psk(), TlsHashType.sha384(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_ECDHE_PSK_WITH_CAMELLIA_128_CBC_SHA256 = new TlsCipher(0xC09A, TlsCipherEngineType.camellia128(), TlsCipherModeType.cbc(), TlsKeyExchangeType.ecdhe(), TlsAuth.psk(), TlsHashType.sha256(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_ECDHE_PSK_WITH_CAMELLIA_256_CBC_SHA384 = new TlsCipher(0xC09B, TlsCipherEngineType.camellia256(), TlsCipherModeType.cbc(), TlsKeyExchangeType.ecdhe(), TlsAuth.psk(), TlsHashType.sha384(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_ECDHE_PSK_WITH_CHACHA20_POLY1305_SHA256 = new TlsCipher(0xCCAC, TlsCipherEngineType.chacha20(), TlsCipherModeType.poly1305(), TlsKeyExchangeType.ecdhe(), TlsAuth.psk(), TlsHashType.sha256(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_ECDHE_PSK_WITH_NULL_SHA = new TlsCipher(0xC039, TlsCipherEngineType.none(), TlsCipherModeType.none(), TlsKeyExchangeType.ecdhe(), TlsAuth.psk(), TlsHashType.sha1(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_ECDHE_PSK_WITH_NULL_SHA256 = new TlsCipher(0xC03A, TlsCipherEngineType.none(), TlsCipherModeType.none(), TlsKeyExchangeType.ecdhe(), TlsAuth.psk(), TlsHashType.sha256(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_ECDHE_PSK_WITH_NULL_SHA384 = new TlsCipher(0xC03B, TlsCipherEngineType.none(), TlsCipherModeType.none(), TlsKeyExchangeType.ecdhe(), TlsAuth.psk(), TlsHashType.sha384(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_ECDHE_PSK_WITH_RC4_128_SHA = new TlsCipher(0xC033, TlsCipherEngineType.rc4(), TlsCipherModeType.none(), TlsKeyExchangeType.ecdhe(), TlsAuth.psk(), TlsHashType.sha1(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA = new TlsCipher(0xC012, TlsCipherEngineType.desEde(), TlsCipherModeType.cbc(), TlsKeyExchangeType.ecdhe(), TlsAuth.rsa(), TlsHashType.sha1(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA = new TlsCipher(0xC013, TlsCipherEngineType.aes128(), TlsCipherModeType.cbc(), TlsKeyExchangeType.ecdhe(), TlsAuth.rsa(), TlsHashType.sha1(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256 = new TlsCipher(0xC027, TlsCipherEngineType.aes128(), TlsCipherModeType.cbc(), TlsKeyExchangeType.ecdhe(), TlsAuth.rsa(), TlsHashType.sha256(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 = new TlsCipher(0xC02F, TlsCipherEngineType.aes128(), TlsCipherModeType.gcm(), TlsKeyExchangeType.ecdhe(), TlsAuth.rsa(), TlsHashType.sha256(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), true);
    private static final TlsCipher TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA = new TlsCipher(0xC014, TlsCipherEngineType.aes256(), TlsCipherModeType.cbc(), TlsKeyExchangeType.ecdhe(), TlsAuth.rsa(), TlsHashType.sha1(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384 = new TlsCipher(0xC028, TlsCipherEngineType.aes256(), TlsCipherModeType.cbc(), TlsKeyExchangeType.ecdhe(), TlsAuth.rsa(), TlsHashType.sha384(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384 = new TlsCipher(0xC030, TlsCipherEngineType.aes256(), TlsCipherModeType.gcm(), TlsKeyExchangeType.ecdhe(), TlsAuth.rsa(), TlsHashType.sha384(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), true);
    private static final TlsCipher TLS_ECDHE_RSA_WITH_ARIA_128_CBC_SHA256 = new TlsCipher(0xC04C, TlsCipherEngineType.aria128(), TlsCipherModeType.cbc(), TlsKeyExchangeType.ecdhe(), TlsAuth.rsa(), TlsHashType.sha256(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_ECDHE_RSA_WITH_ARIA_128_GCM_SHA256 = new TlsCipher(0xC060, TlsCipherEngineType.aria128(), TlsCipherModeType.gcm(), TlsKeyExchangeType.ecdhe(), TlsAuth.rsa(), TlsHashType.sha256(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), true);
    private static final TlsCipher TLS_ECDHE_RSA_WITH_ARIA_256_CBC_SHA384 = new TlsCipher(0xC04D, TlsCipherEngineType.aria256(), TlsCipherModeType.cbc(), TlsKeyExchangeType.ecdhe(), TlsAuth.rsa(), TlsHashType.sha384(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_ECDHE_RSA_WITH_ARIA_256_GCM_SHA384 = new TlsCipher(0xC061, TlsCipherEngineType.aria256(), TlsCipherModeType.gcm(), TlsKeyExchangeType.ecdhe(), TlsAuth.rsa(), TlsHashType.sha384(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), true);
    private static final TlsCipher TLS_ECDHE_RSA_WITH_CAMELLIA_128_CBC_SHA256 = new TlsCipher(0xC076, TlsCipherEngineType.camellia128(), TlsCipherModeType.cbc(), TlsKeyExchangeType.ecdhe(), TlsAuth.rsa(), TlsHashType.sha256(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_ECDHE_RSA_WITH_CAMELLIA_128_GCM_SHA256 = new TlsCipher(0xC08A, TlsCipherEngineType.camellia128(), TlsCipherModeType.gcm(), TlsKeyExchangeType.ecdhe(), TlsAuth.rsa(), TlsHashType.sha256(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), true);
    private static final TlsCipher TLS_ECDHE_RSA_WITH_CAMELLIA_256_CBC_SHA384 = new TlsCipher(0xC077, TlsCipherEngineType.camellia256(), TlsCipherModeType.cbc(), TlsKeyExchangeType.ecdhe(), TlsAuth.rsa(), TlsHashType.sha384(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_ECDHE_RSA_WITH_CAMELLIA_256_GCM_SHA384 = new TlsCipher(0xC08B, TlsCipherEngineType.camellia256(), TlsCipherModeType.gcm(), TlsKeyExchangeType.ecdhe(), TlsAuth.rsa(), TlsHashType.sha384(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), true);
    private static final TlsCipher TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256 = new TlsCipher(0xCCA8, TlsCipherEngineType.chacha20(), TlsCipherModeType.poly1305(), TlsKeyExchangeType.ecdhe(), TlsAuth.rsa(), TlsHashType.sha256(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), true);
    private static final TlsCipher TLS_ECDHE_RSA_WITH_NULL_SHA = new TlsCipher(0xC010, TlsCipherEngineType.none(), TlsCipherModeType.none(), TlsKeyExchangeType.ecdhe(), TlsAuth.rsa(), TlsHashType.sha1(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_ECDHE_RSA_WITH_RC4_128_SHA = new TlsCipher(0xC011, TlsCipherEngineType.rc4(), TlsCipherModeType.none(), TlsKeyExchangeType.ecdhe(), TlsAuth.rsa(), TlsHashType.sha1(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA = new TlsCipher(0xC00D, TlsCipherEngineType.desEde(), TlsCipherModeType.cbc(), TlsKeyExchangeType.ecdh(), TlsAuth.rsa(), TlsHashType.sha1(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_ECDH_RSA_WITH_AES_128_CBC_SHA = new TlsCipher(0xC00E, TlsCipherEngineType.aes128(), TlsCipherModeType.cbc(), TlsKeyExchangeType.ecdh(), TlsAuth.rsa(), TlsHashType.sha1(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256 = new TlsCipher(0xC029, TlsCipherEngineType.aes128(), TlsCipherModeType.cbc(), TlsKeyExchangeType.ecdh(), TlsAuth.rsa(), TlsHashType.sha256(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256 = new TlsCipher(0xC031, TlsCipherEngineType.aes128(), TlsCipherModeType.gcm(), TlsKeyExchangeType.ecdh(), TlsAuth.rsa(), TlsHashType.sha256(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_ECDH_RSA_WITH_AES_256_CBC_SHA = new TlsCipher(0xC00F, TlsCipherEngineType.aes256(), TlsCipherModeType.cbc(), TlsKeyExchangeType.ecdh(), TlsAuth.rsa(), TlsHashType.sha1(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384 = new TlsCipher(0xC02A, TlsCipherEngineType.aes256(), TlsCipherModeType.cbc(), TlsKeyExchangeType.ecdh(), TlsAuth.rsa(), TlsHashType.sha384(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384 = new TlsCipher(0xC032, TlsCipherEngineType.aes256(), TlsCipherModeType.gcm(), TlsKeyExchangeType.ecdh(), TlsAuth.rsa(), TlsHashType.sha384(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_ECDH_RSA_WITH_ARIA_128_CBC_SHA256 = new TlsCipher(0xC04E, TlsCipherEngineType.aria128(), TlsCipherModeType.cbc(), TlsKeyExchangeType.ecdh(), TlsAuth.rsa(), TlsHashType.sha256(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_ECDH_RSA_WITH_ARIA_128_GCM_SHA256 = new TlsCipher(0xC062, TlsCipherEngineType.aria128(), TlsCipherModeType.gcm(), TlsKeyExchangeType.ecdh(), TlsAuth.rsa(), TlsHashType.sha256(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_ECDH_RSA_WITH_ARIA_256_CBC_SHA384 = new TlsCipher(0xC04F, TlsCipherEngineType.aria256(), TlsCipherModeType.cbc(), TlsKeyExchangeType.ecdh(), TlsAuth.rsa(), TlsHashType.sha384(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_ECDH_RSA_WITH_ARIA_256_GCM_SHA384 = new TlsCipher(0xC063, TlsCipherEngineType.aria256(), TlsCipherModeType.gcm(), TlsKeyExchangeType.ecdh(), TlsAuth.rsa(), TlsHashType.sha384(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_ECDH_RSA_WITH_CAMELLIA_128_CBC_SHA256 = new TlsCipher(0xC078, TlsCipherEngineType.camellia128(), TlsCipherModeType.cbc(), TlsKeyExchangeType.ecdh(), TlsAuth.rsa(), TlsHashType.sha256(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_ECDH_RSA_WITH_CAMELLIA_128_GCM_SHA256 = new TlsCipher(0xC08C, TlsCipherEngineType.camellia128(), TlsCipherModeType.gcm(), TlsKeyExchangeType.ecdh(), TlsAuth.rsa(), TlsHashType.sha256(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_ECDH_RSA_WITH_CAMELLIA_256_CBC_SHA384 = new TlsCipher(0xC079, TlsCipherEngineType.camellia256(), TlsCipherModeType.cbc(), TlsKeyExchangeType.ecdh(), TlsAuth.rsa(), TlsHashType.sha384(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_ECDH_RSA_WITH_CAMELLIA_256_GCM_SHA384 = new TlsCipher(0xC08D, TlsCipherEngineType.camellia256(), TlsCipherModeType.gcm(), TlsKeyExchangeType.ecdh(), TlsAuth.rsa(), TlsHashType.sha384(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_ECDH_RSA_WITH_NULL_SHA = new TlsCipher(0xC00B, TlsCipherEngineType.none(), TlsCipherModeType.none(), TlsKeyExchangeType.ecdh(), TlsAuth.rsa(), TlsHashType.sha1(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_ECDH_RSA_WITH_RC4_128_SHA = new TlsCipher(0xC00C, TlsCipherEngineType.rc4(), TlsCipherModeType.none(), TlsKeyExchangeType.ecdh(), TlsAuth.rsa(), TlsHashType.sha1(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_GOSTR341112_256_WITH_28147_CNT_IMIT = new TlsCipher(0xC102, TlsCipherEngineType.kuznyechik(), TlsCipherModeType.ctr(), TlsKeyExchangeType.gostr341112_256(), TlsAuth.gostr341012(), TlsHashType.gostr341112_256(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_GOSTR341112_256_WITH_KUZNYECHIK_CTR_OMAC = new TlsCipher(0xC100, TlsCipherEngineType.kuznyechik(), TlsCipherModeType.ctr(), TlsKeyExchangeType.gostr341112_256(), TlsAuth.gostr341012(), TlsHashType.gostr341112_256(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_GOSTR341112_256_WITH_KUZNYECHIK_MGM_L = new TlsCipher(0xC103, TlsCipherEngineType.kuznyechik(), TlsCipherModeType.mgmLight(), TlsKeyExchangeType.ecdhe(), TlsAuth.none(), TlsHashType.none(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_GOSTR341112_256_WITH_KUZNYECHIK_MGM_S = new TlsCipher(0xC105, TlsCipherEngineType.kuznyechik(), TlsCipherModeType.mgmStrong(), TlsKeyExchangeType.ecdhe(), TlsAuth.none(), TlsHashType.none(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_GOSTR341112_256_WITH_MAGMA_CTR_OMAC = new TlsCipher(0xC101, TlsCipherEngineType.magma(), TlsCipherModeType.ctr(), TlsKeyExchangeType.gostr341112_256(), TlsAuth.gostr341012(), TlsHashType.gostr341112_256(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_GOSTR341112_256_WITH_MAGMA_MGM_L = new TlsCipher(0xC104, TlsCipherEngineType.magma(), TlsCipherModeType.mgmLight(), TlsKeyExchangeType.ecdhe(), TlsAuth.none(), TlsHashType.none(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_GOSTR341112_256_WITH_MAGMA_MGM_S = new TlsCipher(0xC106, TlsCipherEngineType.magma(), TlsCipherModeType.mgmStrong(), TlsKeyExchangeType.ecdhe(), TlsAuth.none(), TlsHashType.none(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_KRB5_EXPORT_WITH_DES_CBC_40_MD5 = new TlsCipher(0x0029, TlsCipherEngineType.des(), TlsCipherModeType.cbc40(), TlsKeyExchangeType.krb5(), TlsAuth.krb5(), TlsHashType.md5(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_KRB5_EXPORT_WITH_DES_CBC_40_SHA = new TlsCipher(0x0026, TlsCipherEngineType.des(), TlsCipherModeType.cbc40(), TlsKeyExchangeType.krb5(), TlsAuth.krb5(), TlsHashType.sha1(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_KRB5_EXPORT_WITH_RC2_CBC_40_MD5 = new TlsCipher(0x002A, TlsCipherEngineType.rc2(), TlsCipherModeType.cbc40(), TlsKeyExchangeType.krb5(), TlsAuth.krb5(), TlsHashType.md5(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_KRB5_EXPORT_WITH_RC2_CBC_40_SHA = new TlsCipher(0x0027, TlsCipherEngineType.rc2(), TlsCipherModeType.cbc40(), TlsKeyExchangeType.krb5(), TlsAuth.krb5(), TlsHashType.sha1(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_KRB5_EXPORT_WITH_RC4_40_MD5 = new TlsCipher(0x002B, TlsCipherEngineType.rc4(), TlsCipherModeType.none(), TlsKeyExchangeType.krb5(), TlsAuth.krb5(), TlsHashType.md5(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_KRB5_EXPORT_WITH_RC4_40_SHA = new TlsCipher(0x0028, TlsCipherEngineType.rc4(), TlsCipherModeType.none(), TlsKeyExchangeType.krb5(), TlsAuth.krb5(), TlsHashType.sha1(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_KRB5_WITH_3DES_EDE_CBC_MD5 = new TlsCipher(0x0023, TlsCipherEngineType.desEde(), TlsCipherModeType.cbc(), TlsKeyExchangeType.krb5(), TlsAuth.krb5(), TlsHashType.md5(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_KRB5_WITH_3DES_EDE_CBC_SHA = new TlsCipher(0x001F, TlsCipherEngineType.desEde(), TlsCipherModeType.cbc(), TlsKeyExchangeType.krb5(), TlsAuth.krb5(), TlsHashType.sha1(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_KRB5_WITH_DES_CBC_MD5 = new TlsCipher(0x0022, TlsCipherEngineType.des(), TlsCipherModeType.cbc(), TlsKeyExchangeType.krb5(), TlsAuth.krb5(), TlsHashType.md5(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_KRB5_WITH_DES_CBC_SHA = new TlsCipher(0x001E, TlsCipherEngineType.des(), TlsCipherModeType.cbc(), TlsKeyExchangeType.krb5(), TlsAuth.krb5(), TlsHashType.sha1(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_KRB5_WITH_IDEA_CBC_MD5 = new TlsCipher(0x0025, TlsCipherEngineType.idea(), TlsCipherModeType.cbc(), TlsKeyExchangeType.krb5(), TlsAuth.krb5(), TlsHashType.md5(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_KRB5_WITH_IDEA_CBC_SHA = new TlsCipher(0x0021, TlsCipherEngineType.idea(), TlsCipherModeType.cbc(), TlsKeyExchangeType.krb5(), TlsAuth.krb5(), TlsHashType.sha1(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_KRB5_WITH_RC4_128_MD5 = new TlsCipher(0x0024, TlsCipherEngineType.rc4(), TlsCipherModeType.none(), TlsKeyExchangeType.krb5(), TlsAuth.krb5(), TlsHashType.md5(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_KRB5_WITH_RC4_128_SHA = new TlsCipher(0x0020, TlsCipherEngineType.rc4(), TlsCipherModeType.none(), TlsKeyExchangeType.krb5(), TlsAuth.krb5(), TlsHashType.sha1(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_NULL_WITH_NULL_NULL = new TlsCipher(0x0000, TlsCipherEngineType.none(), TlsCipherModeType.none(), TlsKeyExchangeType.none(), TlsAuth.none(), TlsHashType.none(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_PSK_DHE_WITH_AES_128_CCM_8 = new TlsCipher(0xC0AA, TlsCipherEngineType.aes128(), TlsCipherModeType.ccm8(), TlsKeyExchangeType.dhe(), TlsAuth.psk(), TlsHashType.sha256(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_PSK_DHE_WITH_AES_256_CCM_8 = new TlsCipher(0xC0AB, TlsCipherEngineType.aes256(), TlsCipherModeType.ccm8(), TlsKeyExchangeType.dhe(), TlsAuth.psk(), TlsHashType.sha256(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_PSK_WITH_3DES_EDE_CBC_SHA = new TlsCipher(0x008B, TlsCipherEngineType.desEde(), TlsCipherModeType.cbc(), TlsKeyExchangeType.psk(), TlsAuth.psk(), TlsHashType.sha1(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_PSK_WITH_AES_128_CBC_SHA = new TlsCipher(0x008C, TlsCipherEngineType.aes128(), TlsCipherModeType.cbc(), TlsKeyExchangeType.psk(), TlsAuth.psk(), TlsHashType.sha1(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_PSK_WITH_AES_128_CBC_SHA256 = new TlsCipher(0x00AE, TlsCipherEngineType.aes128(), TlsCipherModeType.cbc(), TlsKeyExchangeType.psk(), TlsAuth.psk(), TlsHashType.sha256(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_PSK_WITH_AES_128_CCM = new TlsCipher(0xC0A4, TlsCipherEngineType.aes128(), TlsCipherModeType.ccm(), TlsKeyExchangeType.psk(), TlsAuth.psk(), TlsHashType.sha256(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_PSK_WITH_AES_128_CCM_8 = new TlsCipher(0xC0A8, TlsCipherEngineType.aes128(), TlsCipherModeType.ccm8(), TlsKeyExchangeType.psk(), TlsAuth.psk(), TlsHashType.sha256(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_PSK_WITH_AES_128_GCM_SHA256 = new TlsCipher(0x00A8, TlsCipherEngineType.aes128(), TlsCipherModeType.gcm(), TlsKeyExchangeType.psk(), TlsAuth.psk(), TlsHashType.sha256(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_PSK_WITH_AES_256_CBC_SHA = new TlsCipher(0x008D, TlsCipherEngineType.aes256(), TlsCipherModeType.cbc(), TlsKeyExchangeType.psk(), TlsAuth.psk(), TlsHashType.sha1(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_PSK_WITH_AES_256_CBC_SHA384 = new TlsCipher(0x00AF, TlsCipherEngineType.aes256(), TlsCipherModeType.cbc(), TlsKeyExchangeType.psk(), TlsAuth.psk(), TlsHashType.sha384(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_PSK_WITH_AES_256_CCM = new TlsCipher(0xC0A5, TlsCipherEngineType.aes256(), TlsCipherModeType.ccm(), TlsKeyExchangeType.psk(), TlsAuth.psk(), TlsHashType.sha256(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_PSK_WITH_AES_256_CCM_8 = new TlsCipher(0xC0A9, TlsCipherEngineType.aes256(), TlsCipherModeType.ccm8(), TlsKeyExchangeType.psk(), TlsAuth.psk(), TlsHashType.sha256(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_PSK_WITH_AES_256_GCM_SHA384 = new TlsCipher(0x00A9, TlsCipherEngineType.aes256(), TlsCipherModeType.gcm(), TlsKeyExchangeType.psk(), TlsAuth.psk(), TlsHashType.sha384(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_PSK_WITH_ARIA_128_CBC_SHA256 = new TlsCipher(0xC064, TlsCipherEngineType.aria128(), TlsCipherModeType.cbc(), TlsKeyExchangeType.psk(), TlsAuth.psk(), TlsHashType.sha256(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_PSK_WITH_ARIA_128_GCM_SHA256 = new TlsCipher(0xC06A, TlsCipherEngineType.aria128(), TlsCipherModeType.gcm(), TlsKeyExchangeType.psk(), TlsAuth.psk(), TlsHashType.sha256(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_PSK_WITH_ARIA_256_CBC_SHA384 = new TlsCipher(0xC065, TlsCipherEngineType.aria256(), TlsCipherModeType.cbc(), TlsKeyExchangeType.psk(), TlsAuth.psk(), TlsHashType.sha384(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_PSK_WITH_ARIA_256_GCM_SHA384 = new TlsCipher(0xC06B, TlsCipherEngineType.aria256(), TlsCipherModeType.gcm(), TlsKeyExchangeType.psk(), TlsAuth.psk(), TlsHashType.sha384(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_PSK_WITH_CAMELLIA_128_CBC_SHA256 = new TlsCipher(0xC094, TlsCipherEngineType.camellia128(), TlsCipherModeType.cbc(), TlsKeyExchangeType.psk(), TlsAuth.psk(), TlsHashType.sha256(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_PSK_WITH_CAMELLIA_128_GCM_SHA256 = new TlsCipher(0xC08E, TlsCipherEngineType.camellia128(), TlsCipherModeType.gcm(), TlsKeyExchangeType.psk(), TlsAuth.psk(), TlsHashType.sha256(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_PSK_WITH_CAMELLIA_256_CBC_SHA384 = new TlsCipher(0xC095, TlsCipherEngineType.camellia256(), TlsCipherModeType.cbc(), TlsKeyExchangeType.psk(), TlsAuth.psk(), TlsHashType.sha384(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_PSK_WITH_CAMELLIA_256_GCM_SHA384 = new TlsCipher(0xC08F, TlsCipherEngineType.camellia256(), TlsCipherModeType.gcm(), TlsKeyExchangeType.psk(), TlsAuth.psk(), TlsHashType.sha384(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_PSK_WITH_CHACHA20_POLY1305_SHA256 = new TlsCipher(0xCCAB, TlsCipherEngineType.chacha20(), TlsCipherModeType.poly1305(), TlsKeyExchangeType.psk(), TlsAuth.psk(), TlsHashType.sha256(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_PSK_WITH_NULL_SHA = new TlsCipher(0x002C, TlsCipherEngineType.none(), TlsCipherModeType.none(), TlsKeyExchangeType.psk(), TlsAuth.psk(), TlsHashType.sha1(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_PSK_WITH_NULL_SHA256 = new TlsCipher(0x00B0, TlsCipherEngineType.none(), TlsCipherModeType.none(), TlsKeyExchangeType.psk(), TlsAuth.psk(), TlsHashType.sha256(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_PSK_WITH_NULL_SHA384 = new TlsCipher(0x00B1, TlsCipherEngineType.none(), TlsCipherModeType.none(), TlsKeyExchangeType.psk(), TlsAuth.psk(), TlsHashType.sha384(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_PSK_WITH_RC4_128_SHA = new TlsCipher(0x008A, TlsCipherEngineType.rc4(), TlsCipherModeType.none(), TlsKeyExchangeType.psk(), TlsAuth.psk(), TlsHashType.sha1(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_RSA_EXPORT_WITH_DES40_CBC_SHA = new TlsCipher(0x0008, TlsCipherEngineType.des40(), TlsCipherModeType.cbc(), TlsKeyExchangeType.rsa(), TlsAuth.rsa(), TlsHashType.sha1(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_RSA_EXPORT_WITH_RC2_CBC_40_MD5 = new TlsCipher(0x0006, TlsCipherEngineType.rc2(), TlsCipherModeType.cbc40(), TlsKeyExchangeType.rsa(), TlsAuth.rsa(), TlsHashType.md5(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_RSA_EXPORT_WITH_RC4_40_MD5 = new TlsCipher(0x0003, TlsCipherEngineType.rc4(), TlsCipherModeType.none(), TlsKeyExchangeType.rsa(), TlsAuth.rsa(), TlsHashType.md5(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_RSA_PSK_WITH_3DES_EDE_CBC_SHA = new TlsCipher(0x0093, TlsCipherEngineType.desEde(), TlsCipherModeType.cbc(), TlsKeyExchangeType.rsa(), TlsAuth.psk(), TlsHashType.sha1(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_RSA_PSK_WITH_AES_128_CBC_SHA = new TlsCipher(0x0094, TlsCipherEngineType.aes128(), TlsCipherModeType.cbc(), TlsKeyExchangeType.rsa(), TlsAuth.psk(), TlsHashType.sha1(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_RSA_PSK_WITH_AES_128_CBC_SHA256 = new TlsCipher(0x00B6, TlsCipherEngineType.aes128(), TlsCipherModeType.cbc(), TlsKeyExchangeType.rsa(), TlsAuth.psk(), TlsHashType.sha256(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_RSA_PSK_WITH_AES_128_GCM_SHA256 = new TlsCipher(0x00AC, TlsCipherEngineType.aes128(), TlsCipherModeType.gcm(), TlsKeyExchangeType.rsa(), TlsAuth.psk(), TlsHashType.sha256(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_RSA_PSK_WITH_AES_256_CBC_SHA = new TlsCipher(0x0095, TlsCipherEngineType.aes256(), TlsCipherModeType.cbc(), TlsKeyExchangeType.rsa(), TlsAuth.psk(), TlsHashType.sha1(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_RSA_PSK_WITH_AES_256_CBC_SHA384 = new TlsCipher(0x00B7, TlsCipherEngineType.aes256(), TlsCipherModeType.cbc(), TlsKeyExchangeType.rsa(), TlsAuth.psk(), TlsHashType.sha384(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_RSA_PSK_WITH_AES_256_GCM_SHA384 = new TlsCipher(0x00AD, TlsCipherEngineType.aes256(), TlsCipherModeType.gcm(), TlsKeyExchangeType.rsa(), TlsAuth.psk(), TlsHashType.sha384(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_RSA_PSK_WITH_ARIA_128_CBC_SHA256 = new TlsCipher(0xC068, TlsCipherEngineType.aria128(), TlsCipherModeType.cbc(), TlsKeyExchangeType.rsa(), TlsAuth.psk(), TlsHashType.sha256(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_RSA_PSK_WITH_ARIA_128_GCM_SHA256 = new TlsCipher(0xC06E, TlsCipherEngineType.aria128(), TlsCipherModeType.gcm(), TlsKeyExchangeType.rsa(), TlsAuth.psk(), TlsHashType.sha256(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_RSA_PSK_WITH_ARIA_256_CBC_SHA384 = new TlsCipher(0xC069, TlsCipherEngineType.aria256(), TlsCipherModeType.cbc(), TlsKeyExchangeType.rsa(), TlsAuth.psk(), TlsHashType.sha384(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_RSA_PSK_WITH_ARIA_256_GCM_SHA384 = new TlsCipher(0xC06F, TlsCipherEngineType.aria256(), TlsCipherModeType.gcm(), TlsKeyExchangeType.rsa(), TlsAuth.psk(), TlsHashType.sha384(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_RSA_PSK_WITH_CAMELLIA_128_CBC_SHA256 = new TlsCipher(0xC098, TlsCipherEngineType.camellia128(), TlsCipherModeType.cbc(), TlsKeyExchangeType.rsa(), TlsAuth.psk(), TlsHashType.sha256(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_RSA_PSK_WITH_CAMELLIA_128_GCM_SHA256 = new TlsCipher(0xC092, TlsCipherEngineType.camellia128(), TlsCipherModeType.gcm(), TlsKeyExchangeType.rsa(), TlsAuth.psk(), TlsHashType.sha256(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_RSA_PSK_WITH_CAMELLIA_256_CBC_SHA384 = new TlsCipher(0xC099, TlsCipherEngineType.camellia256(), TlsCipherModeType.cbc(), TlsKeyExchangeType.rsa(), TlsAuth.psk(), TlsHashType.sha384(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_RSA_PSK_WITH_CAMELLIA_256_GCM_SHA384 = new TlsCipher(0xC093, TlsCipherEngineType.camellia256(), TlsCipherModeType.gcm(), TlsKeyExchangeType.rsa(), TlsAuth.psk(), TlsHashType.sha384(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_RSA_PSK_WITH_CHACHA20_POLY1305_SHA256 = new TlsCipher(0xCCAE, TlsCipherEngineType.chacha20(), TlsCipherModeType.poly1305(), TlsKeyExchangeType.rsa(), TlsAuth.psk(), TlsHashType.sha256(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_RSA_PSK_WITH_NULL_SHA = new TlsCipher(0x002E, TlsCipherEngineType.none(), TlsCipherModeType.none(), TlsKeyExchangeType.rsa(), TlsAuth.psk(), TlsHashType.sha1(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_RSA_PSK_WITH_NULL_SHA256 = new TlsCipher(0x00B8, TlsCipherEngineType.none(), TlsCipherModeType.none(), TlsKeyExchangeType.rsa(), TlsAuth.psk(), TlsHashType.sha256(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_RSA_PSK_WITH_NULL_SHA384 = new TlsCipher(0x00B9, TlsCipherEngineType.none(), TlsCipherModeType.none(), TlsKeyExchangeType.rsa(), TlsAuth.psk(), TlsHashType.sha384(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_RSA_PSK_WITH_RC4_128_SHA = new TlsCipher(0x0092, TlsCipherEngineType.rc4(), TlsCipherModeType.none(), TlsKeyExchangeType.rsa(), TlsAuth.psk(), TlsHashType.sha1(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_RSA_WITH_3DES_EDE_CBC_SHA = new TlsCipher(0x000A, TlsCipherEngineType.desEde(), TlsCipherModeType.cbc(), TlsKeyExchangeType.rsa(), TlsAuth.rsa(), TlsHashType.sha1(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_RSA_WITH_AES_128_CBC_SHA = new TlsCipher(0x002F, TlsCipherEngineType.aes128(), TlsCipherModeType.cbc(), TlsKeyExchangeType.rsa(), TlsAuth.rsa(), TlsHashType.sha1(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_RSA_WITH_AES_128_CBC_SHA256 = new TlsCipher(0x003C, TlsCipherEngineType.aes128(), TlsCipherModeType.cbc(), TlsKeyExchangeType.rsa(), TlsAuth.rsa(), TlsHashType.sha256(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_RSA_WITH_AES_128_CCM = new TlsCipher(0xC09C, TlsCipherEngineType.aes128(), TlsCipherModeType.ccm(), TlsKeyExchangeType.rsa(), TlsAuth.rsa(), TlsHashType.sha256(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_RSA_WITH_AES_128_CCM_8 = new TlsCipher(0xC0A0, TlsCipherEngineType.aes128(), TlsCipherModeType.ccm8(), TlsKeyExchangeType.rsa(), TlsAuth.rsa(), TlsHashType.sha256(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_RSA_WITH_AES_128_GCM_SHA256 = new TlsCipher(0x009C, TlsCipherEngineType.aes128(), TlsCipherModeType.gcm(), TlsKeyExchangeType.rsa(), TlsAuth.rsa(), TlsHashType.sha256(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_RSA_WITH_AES_256_CBC_SHA = new TlsCipher(0x0035, TlsCipherEngineType.aes256(), TlsCipherModeType.cbc(), TlsKeyExchangeType.rsa(), TlsAuth.rsa(), TlsHashType.sha1(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_RSA_WITH_AES_256_CBC_SHA256 = new TlsCipher(0x003D, TlsCipherEngineType.aes256(), TlsCipherModeType.cbc(), TlsKeyExchangeType.rsa(), TlsAuth.rsa(), TlsHashType.sha256(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_RSA_WITH_AES_256_CCM = new TlsCipher(0xC09D, TlsCipherEngineType.aes256(), TlsCipherModeType.ccm(), TlsKeyExchangeType.rsa(), TlsAuth.rsa(), TlsHashType.sha256(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_RSA_WITH_AES_256_CCM_8 = new TlsCipher(0xC0A1, TlsCipherEngineType.aes256(), TlsCipherModeType.ccm8(), TlsKeyExchangeType.rsa(), TlsAuth.rsa(), TlsHashType.sha256(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_RSA_WITH_AES_256_GCM_SHA384 = new TlsCipher(0x009D, TlsCipherEngineType.aes256(), TlsCipherModeType.gcm(), TlsKeyExchangeType.rsa(), TlsAuth.rsa(), TlsHashType.sha384(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_RSA_WITH_ARIA_128_CBC_SHA256 = new TlsCipher(0xC03C, TlsCipherEngineType.aria128(), TlsCipherModeType.cbc(), TlsKeyExchangeType.rsa(), TlsAuth.rsa(), TlsHashType.sha256(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_RSA_WITH_ARIA_128_GCM_SHA256 = new TlsCipher(0xC050, TlsCipherEngineType.aria128(), TlsCipherModeType.gcm(), TlsKeyExchangeType.rsa(), TlsAuth.rsa(), TlsHashType.sha256(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_RSA_WITH_ARIA_256_CBC_SHA384 = new TlsCipher(0xC03D, TlsCipherEngineType.aria256(), TlsCipherModeType.cbc(), TlsKeyExchangeType.rsa(), TlsAuth.rsa(), TlsHashType.sha384(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_RSA_WITH_ARIA_256_GCM_SHA384 = new TlsCipher(0xC051, TlsCipherEngineType.aria256(), TlsCipherModeType.gcm(), TlsKeyExchangeType.rsa(), TlsAuth.rsa(), TlsHashType.sha384(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_RSA_WITH_CAMELLIA_128_CBC_SHA = new TlsCipher(0x0041, TlsCipherEngineType.camellia128(), TlsCipherModeType.cbc(), TlsKeyExchangeType.rsa(), TlsAuth.rsa(), TlsHashType.sha1(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_RSA_WITH_CAMELLIA_128_CBC_SHA256 = new TlsCipher(0x00BA, TlsCipherEngineType.camellia128(), TlsCipherModeType.cbc(), TlsKeyExchangeType.rsa(), TlsAuth.rsa(), TlsHashType.sha256(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_RSA_WITH_CAMELLIA_128_GCM_SHA256 = new TlsCipher(0xC07A, TlsCipherEngineType.camellia128(), TlsCipherModeType.gcm(), TlsKeyExchangeType.rsa(), TlsAuth.rsa(), TlsHashType.sha256(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_RSA_WITH_CAMELLIA_256_CBC_SHA = new TlsCipher(0x0084, TlsCipherEngineType.camellia256(), TlsCipherModeType.cbc(), TlsKeyExchangeType.rsa(), TlsAuth.rsa(), TlsHashType.sha1(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_RSA_WITH_CAMELLIA_256_CBC_SHA256 = new TlsCipher(0x00C0, TlsCipherEngineType.camellia256(), TlsCipherModeType.cbc(), TlsKeyExchangeType.rsa(), TlsAuth.rsa(), TlsHashType.sha256(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_RSA_WITH_CAMELLIA_256_GCM_SHA384 = new TlsCipher(0xC07B, TlsCipherEngineType.camellia256(), TlsCipherModeType.gcm(), TlsKeyExchangeType.rsa(), TlsAuth.rsa(), TlsHashType.sha384(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_RSA_WITH_DES_CBC_SHA = new TlsCipher(0x0009, TlsCipherEngineType.des(), TlsCipherModeType.cbc(), TlsKeyExchangeType.rsa(), TlsAuth.rsa(), TlsHashType.sha1(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_RSA_WITH_IDEA_CBC_SHA = new TlsCipher(0x0007, TlsCipherEngineType.idea(), TlsCipherModeType.cbc(), TlsKeyExchangeType.rsa(), TlsAuth.rsa(), TlsHashType.sha1(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_RSA_WITH_NULL_MD5 = new TlsCipher(0x0001, TlsCipherEngineType.none(), TlsCipherModeType.none(), TlsKeyExchangeType.rsa(), TlsAuth.rsa(), TlsHashType.md5(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_RSA_WITH_NULL_SHA = new TlsCipher(0x0002, TlsCipherEngineType.none(), TlsCipherModeType.none(), TlsKeyExchangeType.rsa(), TlsAuth.rsa(), TlsHashType.sha1(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_RSA_WITH_NULL_SHA256 = new TlsCipher(0x003B, TlsCipherEngineType.none(), TlsCipherModeType.none(), TlsKeyExchangeType.rsa(), TlsAuth.rsa(), TlsHashType.sha256(), List.of(TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_RSA_WITH_RC4_128_MD5 = new TlsCipher(0x0004, TlsCipherEngineType.rc4(), TlsCipherModeType.none(), TlsKeyExchangeType.rsa(), TlsAuth.rsa(), TlsHashType.md5(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_RSA_WITH_RC4_128_SHA = new TlsCipher(0x0005, TlsCipherEngineType.rc4(), TlsCipherModeType.none(), TlsKeyExchangeType.rsa(), TlsAuth.rsa(), TlsHashType.sha1(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_RSA_WITH_SEED_CBC_SHA = new TlsCipher(0x0096, TlsCipherEngineType.seed(), TlsCipherModeType.cbc(), TlsKeyExchangeType.rsa(), TlsAuth.rsa(), TlsHashType.sha1(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_SHA256_SHA256 = new TlsCipher(0xC0B4, TlsCipherEngineType.none(), TlsCipherModeType.none(), TlsKeyExchangeType.none(), TlsAuth.sha256(), TlsHashType.sha256(), List.of(TlsVersion.TLS13), false);
    private static final TlsCipher TLS_SHA384_SHA384 = new TlsCipher(0xC0B5, TlsCipherEngineType.none(), TlsCipherModeType.none(), TlsKeyExchangeType.none(), TlsAuth.sha384(), TlsHashType.sha384(), List.of(TlsVersion.TLS13), false);
    private static final TlsCipher TLS_SM4_CCM_SM3 = new TlsCipher(0x00C7, TlsCipherEngineType.sm4(), TlsCipherModeType.ccm(), TlsKeyExchangeType.none(), TlsAuth.none(), TlsHashType.sm3(), List.of(TlsVersion.TLS13), false);
    private static final TlsCipher TLS_SM4_GCM_SM3 = new TlsCipher(0x00C6, TlsCipherEngineType.sm4(), TlsCipherModeType.gcm(), TlsKeyExchangeType.none(), TlsAuth.none(), TlsHashType.sm3(), List.of(TlsVersion.TLS13), false);
    private static final TlsCipher TLS_SRP_SHA_DSS_WITH_3DES_EDE_CBC_SHA = new TlsCipher(0xC01C, TlsCipherEngineType.desEde(), TlsCipherModeType.cbc(), TlsKeyExchangeType.srp(), TlsAuth.shaDss(), TlsHashType.sha1(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_SRP_SHA_DSS_WITH_AES_128_CBC_SHA = new TlsCipher(0xC01F, TlsCipherEngineType.aes128(), TlsCipherModeType.cbc(), TlsKeyExchangeType.srp(), TlsAuth.shaDss(), TlsHashType.sha1(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_SRP_SHA_DSS_WITH_AES_256_CBC_SHA = new TlsCipher(0xC022, TlsCipherEngineType.aes256(), TlsCipherModeType.cbc(), TlsKeyExchangeType.srp(), TlsAuth.shaDss(), TlsHashType.sha1(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_SRP_SHA_RSA_WITH_3DES_EDE_CBC_SHA = new TlsCipher(0xC01B, TlsCipherEngineType.desEde(), TlsCipherModeType.cbc(), TlsKeyExchangeType.srp(), TlsAuth.shaRsa(), TlsHashType.sha1(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_SRP_SHA_RSA_WITH_AES_128_CBC_SHA = new TlsCipher(0xC01E, TlsCipherEngineType.aes128(), TlsCipherModeType.cbc(), TlsKeyExchangeType.srp(), TlsAuth.shaRsa(), TlsHashType.sha1(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_SRP_SHA_RSA_WITH_AES_256_CBC_SHA = new TlsCipher(0xC021, TlsCipherEngineType.aes256(), TlsCipherModeType.cbc(), TlsKeyExchangeType.srp(), TlsAuth.shaRsa(), TlsHashType.sha1(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_SRP_SHA_WITH_3DES_EDE_CBC_SHA = new TlsCipher(0xC01A, TlsCipherEngineType.desEde(), TlsCipherModeType.cbc(), TlsKeyExchangeType.srp(), TlsAuth.sha(), TlsHashType.sha1(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_SRP_SHA_WITH_AES_128_CBC_SHA = new TlsCipher(0xC01D, TlsCipherEngineType.aes128(), TlsCipherModeType.cbc(), TlsKeyExchangeType.srp(), TlsAuth.sha(), TlsHashType.sha1(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_SRP_SHA_WITH_AES_256_CBC_SHA = new TlsCipher(0xC020, TlsCipherEngineType.aes256(), TlsCipherModeType.cbc(), TlsKeyExchangeType.srp(), TlsAuth.sha(), TlsHashType.sha1(), List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13), false);
    private static final TlsCipher TLS_GREASE_0A = new TlsCipher(0x0A0A, TlsCipherEngineType.none(), TlsCipherModeType.none(), TlsKeyExchangeType.none(), TlsAuth.none(), TlsHashType.none(), List.of(TlsVersion.TLS13), true);
    private static final TlsCipher TLS_GREASE_1A = new TlsCipher(0x1A1A, TlsCipherEngineType.none(), TlsCipherModeType.none(), TlsKeyExchangeType.none(), TlsAuth.none(), TlsHashType.none(), List.of(TlsVersion.TLS13), true);
    private static final TlsCipher TLS_GREASE_2A = new TlsCipher(0x2A2A, TlsCipherEngineType.none(), TlsCipherModeType.none(), TlsKeyExchangeType.none(), TlsAuth.none(), TlsHashType.none(), List.of(TlsVersion.TLS13), true);
    private static final TlsCipher TLS_GREASE_3A = new TlsCipher(0x3A3A, TlsCipherEngineType.none(), TlsCipherModeType.none(), TlsKeyExchangeType.none(), TlsAuth.none(), TlsHashType.none(), List.of(TlsVersion.TLS13), true);
    private static final TlsCipher TLS_GREASE_4A = new TlsCipher(0x4A4A, TlsCipherEngineType.none(), TlsCipherModeType.none(), TlsKeyExchangeType.none(), TlsAuth.none(), TlsHashType.none(), List.of(TlsVersion.TLS13), true);
    private static final TlsCipher TLS_GREASE_5A = new TlsCipher(0x5A5A, TlsCipherEngineType.none(), TlsCipherModeType.none(), TlsKeyExchangeType.none(), TlsAuth.none(), TlsHashType.none(), List.of(TlsVersion.TLS13), true);
    private static final TlsCipher TLS_GREASE_6A = new TlsCipher(0x6A6A, TlsCipherEngineType.none(), TlsCipherModeType.none(), TlsKeyExchangeType.none(), TlsAuth.none(), TlsHashType.none(), List.of(TlsVersion.TLS13), true);
    private static final TlsCipher TLS_GREASE_7A = new TlsCipher(0x7A7A, TlsCipherEngineType.none(), TlsCipherModeType.none(), TlsKeyExchangeType.none(), TlsAuth.none(), TlsHashType.none(), List.of(TlsVersion.TLS13), true);
    private static final TlsCipher TLS_GREASE_8A = new TlsCipher(0x8A8A, TlsCipherEngineType.none(), TlsCipherModeType.none(), TlsKeyExchangeType.none(), TlsAuth.none(), TlsHashType.none(), List.of(TlsVersion.TLS13), true);
    private static final TlsCipher TLS_GREASE_9A = new TlsCipher(0x9A9A, TlsCipherEngineType.none(), TlsCipherModeType.none(), TlsKeyExchangeType.none(), TlsAuth.none(), TlsHashType.none(), List.of(TlsVersion.TLS13), true);
    private static final TlsCipher TLS_GREASE_AA = new TlsCipher(0xAAAA, TlsCipherEngineType.none(), TlsCipherModeType.none(), TlsKeyExchangeType.none(), TlsAuth.none(), TlsHashType.none(), List.of(TlsVersion.TLS13), true);
    private static final TlsCipher TLS_GREASE_BA = new TlsCipher(0xBABA, TlsCipherEngineType.none(), TlsCipherModeType.none(), TlsKeyExchangeType.none(), TlsAuth.none(), TlsHashType.none(), List.of(TlsVersion.TLS13), true);
    private static final TlsCipher TLS_GREASE_CA = new TlsCipher(0xCACA, TlsCipherEngineType.none(), TlsCipherModeType.none(), TlsKeyExchangeType.none(), TlsAuth.none(), TlsHashType.none(), List.of(TlsVersion.TLS13), true);
    private static final TlsCipher TLS_GREASE_DA = new TlsCipher(0xDADA, TlsCipherEngineType.none(), TlsCipherModeType.none(), TlsKeyExchangeType.none(), TlsAuth.none(), TlsHashType.none(), List.of(TlsVersion.TLS13), true);
    private static final TlsCipher TLS_GREASE_EA = new TlsCipher(0xEAEA, TlsCipherEngineType.none(), TlsCipherModeType.none(), TlsKeyExchangeType.none(), TlsAuth.none(), TlsHashType.none(), List.of(TlsVersion.TLS13), true);
    private static final TlsCipher TLS_GREASE_FA = new TlsCipher(0xFAFA, TlsCipherEngineType.none(), TlsCipherModeType.none(), TlsKeyExchangeType.none(), TlsAuth.none(), TlsHashType.none(), List.of(TlsVersion.TLS13), true);
    private static final List<TlsCipher> TLS_GREASE = List.of(TLS_GREASE_0A, TLS_GREASE_1A, TLS_GREASE_2A, TLS_GREASE_3A, TLS_GREASE_4A, TLS_GREASE_5A, TLS_GREASE_6A, TLS_GREASE_7A, TLS_GREASE_8A, TLS_GREASE_9A, TLS_GREASE_AA, TLS_GREASE_BA, TLS_GREASE_CA, TLS_GREASE_DA, TLS_GREASE_EA, TLS_GREASE_FA);
    //</editor-fold>

    //<editor-fold desc="Static Accessors">
    public static TlsCipher aes128Ccm8Sha256() {
        return TLS_AES_128_CCM_8_SHA256;
    }

    public static TlsCipher aes128CcmSha256() {
        return TLS_AES_128_CCM_SHA256;
    }

    public static TlsCipher aes128GcmSha256() {
        return TLS_AES_128_GCM_SHA256;
    }

    public static TlsCipher aes256GcmSha384() {
        return TLS_AES_256_GCM_SHA384;
    }

    public static TlsCipher chacha20Poly1305Sha256() {
        return TLS_CHACHA20_POLY1305_SHA256;
    }

    public static TlsCipher dhAnonExportWithDes40CbcSha() {
        return TLS_DH_ANON_EXPORT_WITH_DES40_CBC_SHA;
    }

    public static TlsCipher dhAnonExportWithRc440Md5() {
        return TLS_DH_ANON_EXPORT_WITH_RC4_40_MD5;
    }

    public static TlsCipher dhAnonWith3desEdeCbcSha() {
        return TLS_DH_ANON_WITH_3DES_EDE_CBC_SHA;
    }

    public static TlsCipher dhAnonWithAes128CbcSha() {
        return TLS_DH_ANON_WITH_AES_128_CBC_SHA;
    }

    public static TlsCipher dhAnonWithAes128CbcSha256() {
        return TLS_DH_ANON_WITH_AES_128_CBC_SHA256;
    }

    public static TlsCipher dhAnonWithAes128GcmSha256() {
        return TLS_DH_ANON_WITH_AES_128_GCM_SHA256;
    }

    public static TlsCipher dhAnonWithAes256CbcSha() {
        return TLS_DH_ANON_WITH_AES_256_CBC_SHA;
    }

    public static TlsCipher dhAnonWithAes256CbcSha256() {
        return TLS_DH_ANON_WITH_AES_256_CBC_SHA256;
    }

    public static TlsCipher dhAnonWithAes256GcmSha384() {
        return TLS_DH_ANON_WITH_AES_256_GCM_SHA384;
    }

    public static TlsCipher dhAnonWithAria128CbcSha256() {
        return TLS_DH_ANON_WITH_ARIA_128_CBC_SHA256;
    }

    public static TlsCipher dhAnonWithAria128GcmSha256() {
        return TLS_DH_ANON_WITH_ARIA_128_GCM_SHA256;
    }

    public static TlsCipher dhAnonWithAria256CbcSha384() {
        return TLS_DH_ANON_WITH_ARIA_256_CBC_SHA384;
    }

    public static TlsCipher dhAnonWithAria256GcmSha384() {
        return TLS_DH_ANON_WITH_ARIA_256_GCM_SHA384;
    }

    public static TlsCipher dhAnonWithCamellia128CbcSha() {
        return TLS_DH_ANON_WITH_CAMELLIA_128_CBC_SHA;
    }

    public static TlsCipher dhAnonWithCamellia128CbcSha256() {
        return TLS_DH_ANON_WITH_CAMELLIA_128_CBC_SHA256;
    }

    public static TlsCipher dhAnonWithCamellia128GcmSha256() {
        return TLS_DH_ANON_WITH_CAMELLIA_128_GCM_SHA256;
    }

    public static TlsCipher dhAnonWithCamellia256CbcSha() {
        return TLS_DH_ANON_WITH_CAMELLIA_256_CBC_SHA;
    }

    public static TlsCipher dhAnonWithCamellia256CbcSha256() {
        return TLS_DH_ANON_WITH_CAMELLIA_256_CBC_SHA256;
    }

    public static TlsCipher dhAnonWithCamellia256GcmSha384() {
        return TLS_DH_ANON_WITH_CAMELLIA_256_GCM_SHA384;
    }

    public static TlsCipher dhAnonWithDesCbcSha() {
        return TLS_DH_ANON_WITH_DES_CBC_SHA;
    }

    public static TlsCipher dhAnonWithRc4128Md5() {
        return TLS_DH_ANON_WITH_RC4_128_MD5;
    }

    public static TlsCipher dhAnonWithSeedCbcSha() {
        return TLS_DH_ANON_WITH_SEED_CBC_SHA;
    }

    public static TlsCipher dhDssExportWithDes40CbcSha() {
        return TLS_DH_DSS_EXPORT_WITH_DES40_CBC_SHA;
    }

    public static TlsCipher dhDssWith3desEdeCbcSha() {
        return TLS_DH_DSS_WITH_3DES_EDE_CBC_SHA;
    }

    public static TlsCipher dhDssWithAes128CbcSha() {
        return TLS_DH_DSS_WITH_AES_128_CBC_SHA;
    }

    public static TlsCipher dhDssWithAes128CbcSha256() {
        return TLS_DH_DSS_WITH_AES_128_CBC_SHA256;
    }

    public static TlsCipher dhDssWithAes128GcmSha256() {
        return TLS_DH_DSS_WITH_AES_128_GCM_SHA256;
    }

    public static TlsCipher dhDssWithAes256CbcSha() {
        return TLS_DH_DSS_WITH_AES_256_CBC_SHA;
    }

    public static TlsCipher dhDssWithAes256CbcSha256() {
        return TLS_DH_DSS_WITH_AES_256_CBC_SHA256;
    }

    public static TlsCipher dhDssWithAes256GcmSha384() {
        return TLS_DH_DSS_WITH_AES_256_GCM_SHA384;
    }

    public static TlsCipher dhDssWithAria128CbcSha256() {
        return TLS_DH_DSS_WITH_ARIA_128_CBC_SHA256;
    }

    public static TlsCipher dhDssWithAria128GcmSha256() {
        return TLS_DH_DSS_WITH_ARIA_128_GCM_SHA256;
    }

    public static TlsCipher dhDssWithAria256CbcSha384() {
        return TLS_DH_DSS_WITH_ARIA_256_CBC_SHA384;
    }

    public static TlsCipher dhDssWithAria256GcmSha384() {
        return TLS_DH_DSS_WITH_ARIA_256_GCM_SHA384;
    }

    public static TlsCipher dhDssWithCamellia128CbcSha() {
        return TLS_DH_DSS_WITH_CAMELLIA_128_CBC_SHA;
    }

    public static TlsCipher dhDssWithCamellia128CbcSha256() {
        return TLS_DH_DSS_WITH_CAMELLIA_128_CBC_SHA256;
    }

    public static TlsCipher dhDssWithCamellia128GcmSha256() {
        return TLS_DH_DSS_WITH_CAMELLIA_128_GCM_SHA256;
    }

    public static TlsCipher dhDssWithCamellia256CbcSha() {
        return TLS_DH_DSS_WITH_CAMELLIA_256_CBC_SHA;
    }

    public static TlsCipher dhDssWithCamellia256CbcSha256() {
        return TLS_DH_DSS_WITH_CAMELLIA_256_CBC_SHA256;
    }

    public static TlsCipher dhDssWithCamellia256GcmSha384() {
        return TLS_DH_DSS_WITH_CAMELLIA_256_GCM_SHA384;
    }

    public static TlsCipher dhDssWithDesCbcSha() {
        return TLS_DH_DSS_WITH_DES_CBC_SHA;
    }

    public static TlsCipher dhDssWithSeedCbcSha() {
        return TLS_DH_DSS_WITH_SEED_CBC_SHA;
    }

    public static TlsCipher dheDssExportWithDes40CbcSha() {
        return TLS_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA;
    }

    public static TlsCipher dheDssWith3desEdeCbcSha() {
        return TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA;
    }

    public static TlsCipher dheDssWithAes128CbcSha() {
        return TLS_DHE_DSS_WITH_AES_128_CBC_SHA;
    }

    public static TlsCipher dheDssWithAes128CbcSha256() {
        return TLS_DHE_DSS_WITH_AES_128_CBC_SHA256;
    }

    public static TlsCipher dheDssWithAes128GcmSha256() {
        return TLS_DHE_DSS_WITH_AES_128_GCM_SHA256;
    }

    public static TlsCipher dheDssWithAes256CbcSha() {
        return TLS_DHE_DSS_WITH_AES_256_CBC_SHA;
    }

    public static TlsCipher dheDssWithAes256CbcSha256() {
        return TLS_DHE_DSS_WITH_AES_256_CBC_SHA256;
    }

    public static TlsCipher dheDssWithAes256GcmSha384() {
        return TLS_DHE_DSS_WITH_AES_256_GCM_SHA384;
    }

    public static TlsCipher dheDssWithAria128CbcSha256() {
        return TLS_DHE_DSS_WITH_ARIA_128_CBC_SHA256;
    }

    public static TlsCipher dheDssWithAria128GcmSha256() {
        return TLS_DHE_DSS_WITH_ARIA_128_GCM_SHA256;
    }

    public static TlsCipher dheDssWithAria256CbcSha384() {
        return TLS_DHE_DSS_WITH_ARIA_256_CBC_SHA384;
    }

    public static TlsCipher dheDssWithAria256GcmSha384() {
        return TLS_DHE_DSS_WITH_ARIA_256_GCM_SHA384;
    }

    public static TlsCipher dheDssWithCamellia128CbcSha() {
        return TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA;
    }

    public static TlsCipher dheDssWithCamellia128CbcSha256() {
        return TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA256;
    }

    public static TlsCipher dheDssWithCamellia128GcmSha256() {
        return TLS_DHE_DSS_WITH_CAMELLIA_128_GCM_SHA256;
    }

    public static TlsCipher dheDssWithCamellia256CbcSha() {
        return TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA;
    }

    public static TlsCipher dheDssWithCamellia256CbcSha256() {
        return TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA256;
    }

    public static TlsCipher dheDssWithCamellia256GcmSha384() {
        return TLS_DHE_DSS_WITH_CAMELLIA_256_GCM_SHA384;
    }

    public static TlsCipher dheDssWithDesCbcSha() {
        return TLS_DHE_DSS_WITH_DES_CBC_SHA;
    }

    public static TlsCipher dheDssWithSeedCbcSha() {
        return TLS_DHE_DSS_WITH_SEED_CBC_SHA;
    }

    public static TlsCipher dhePskWith3desEdeCbcSha() {
        return TLS_DHE_PSK_WITH_3DES_EDE_CBC_SHA;
    }

    public static TlsCipher dhePskWithAes128CbcSha() {
        return TLS_DHE_PSK_WITH_AES_128_CBC_SHA;
    }

    public static TlsCipher dhePskWithAes128CbcSha256() {
        return TLS_DHE_PSK_WITH_AES_128_CBC_SHA256;
    }

    public static TlsCipher dhePskWithAes128Ccm() {
        return TLS_DHE_PSK_WITH_AES_128_CCM;
    }

    public static TlsCipher dhePskWithAes128GcmSha256() {
        return TLS_DHE_PSK_WITH_AES_128_GCM_SHA256;
    }

    public static TlsCipher dhePskWithAes256CbcSha() {
        return TLS_DHE_PSK_WITH_AES_256_CBC_SHA;
    }

    public static TlsCipher dhePskWithAes256CbcSha384() {
        return TLS_DHE_PSK_WITH_AES_256_CBC_SHA384;
    }

    public static TlsCipher dhePskWithAes256Ccm() {
        return TLS_DHE_PSK_WITH_AES_256_CCM;
    }

    public static TlsCipher dhePskWithAes256GcmSha384() {
        return TLS_DHE_PSK_WITH_AES_256_GCM_SHA384;
    }

    public static TlsCipher dhePskWithAria128CbcSha256() {
        return TLS_DHE_PSK_WITH_ARIA_128_CBC_SHA256;
    }

    public static TlsCipher dhePskWithAria128GcmSha256() {
        return TLS_DHE_PSK_WITH_ARIA_128_GCM_SHA256;
    }

    public static TlsCipher dhePskWithAria256CbcSha384() {
        return TLS_DHE_PSK_WITH_ARIA_256_CBC_SHA384;
    }

    public static TlsCipher dhePskWithAria256GcmSha384() {
        return TLS_DHE_PSK_WITH_ARIA_256_GCM_SHA384;
    }

    public static TlsCipher dhePskWithCamellia128CbcSha256() {
        return TLS_DHE_PSK_WITH_CAMELLIA_128_CBC_SHA256;
    }

    public static TlsCipher dhePskWithCamellia128GcmSha256() {
        return TLS_DHE_PSK_WITH_CAMELLIA_128_GCM_SHA256;
    }

    public static TlsCipher dhePskWithCamellia256CbcSha384() {
        return TLS_DHE_PSK_WITH_CAMELLIA_256_CBC_SHA384;
    }

    public static TlsCipher dhePskWithCamellia256GcmSha384() {
        return TLS_DHE_PSK_WITH_CAMELLIA_256_GCM_SHA384;
    }

    public static TlsCipher dhePskWithChacha20Poly1305Sha256() {
        return TLS_DHE_PSK_WITH_CHACHA20_POLY1305_SHA256;
    }

    public static TlsCipher dhePskWithNullSha() {
        return TLS_DHE_PSK_WITH_NULL_SHA;
    }

    public static TlsCipher dhePskWithNullSha256() {
        return TLS_DHE_PSK_WITH_NULL_SHA256;
    }

    public static TlsCipher dhePskWithNullSha384() {
        return TLS_DHE_PSK_WITH_NULL_SHA384;
    }

    public static TlsCipher dhePskWithRc4128Sha() {
        return TLS_DHE_PSK_WITH_RC4_128_SHA;
    }

    public static TlsCipher dheRsaExportWithDes40CbcSha() {
        return TLS_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA;
    }

    public static TlsCipher dheRsaWith3desEdeCbcSha() {
        return TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA;
    }

    public static TlsCipher dheRsaWithAes128CbcSha() {
        return TLS_DHE_RSA_WITH_AES_128_CBC_SHA;
    }

    public static TlsCipher dheRsaWithAes128CbcSha256() {
        return TLS_DHE_RSA_WITH_AES_128_CBC_SHA256;
    }

    public static TlsCipher dheRsaWithAes128Ccm() {
        return TLS_DHE_RSA_WITH_AES_128_CCM;
    }

    public static TlsCipher dheRsaWithAes128Ccm8() {
        return TLS_DHE_RSA_WITH_AES_128_CCM_8;
    }

    public static TlsCipher dheRsaWithAes128GcmSha256() {
        return TLS_DHE_RSA_WITH_AES_128_GCM_SHA256;
    }

    public static TlsCipher dheRsaWithAes256CbcSha() {
        return TLS_DHE_RSA_WITH_AES_256_CBC_SHA;
    }

    public static TlsCipher dheRsaWithAes256CbcSha256() {
        return TLS_DHE_RSA_WITH_AES_256_CBC_SHA256;
    }

    public static TlsCipher dheRsaWithAes256Ccm() {
        return TLS_DHE_RSA_WITH_AES_256_CCM;
    }

    public static TlsCipher dheRsaWithAes256Ccm8() {
        return TLS_DHE_RSA_WITH_AES_256_CCM_8;
    }

    public static TlsCipher dheRsaWithAes256GcmSha384() {
        return TLS_DHE_RSA_WITH_AES_256_GCM_SHA384;
    }

    public static TlsCipher dheRsaWithAria128CbcSha256() {
        return TLS_DHE_RSA_WITH_ARIA_128_CBC_SHA256;
    }

    public static TlsCipher dheRsaWithAria128GcmSha256() {
        return TLS_DHE_RSA_WITH_ARIA_128_GCM_SHA256;
    }

    public static TlsCipher dheRsaWithAria256CbcSha384() {
        return TLS_DHE_RSA_WITH_ARIA_256_CBC_SHA384;
    }

    public static TlsCipher dheRsaWithAria256GcmSha384() {
        return TLS_DHE_RSA_WITH_ARIA_256_GCM_SHA384;
    }

    public static TlsCipher dheRsaWithCamellia128CbcSha() {
        return TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA;
    }

    public static TlsCipher dheRsaWithCamellia128CbcSha256() {
        return TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA256;
    }

    public static TlsCipher dheRsaWithCamellia128GcmSha256() {
        return TLS_DHE_RSA_WITH_CAMELLIA_128_GCM_SHA256;
    }

    public static TlsCipher dheRsaWithCamellia256CbcSha() {
        return TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA;
    }

    public static TlsCipher dheRsaWithCamellia256CbcSha256() {
        return TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA256;
    }

    public static TlsCipher dheRsaWithCamellia256GcmSha384() {
        return TLS_DHE_RSA_WITH_CAMELLIA_256_GCM_SHA384;
    }

    public static TlsCipher dheRsaWithChacha20Poly1305Sha256() {
        return TLS_DHE_RSA_WITH_CHACHA20_POLY1305_SHA256;
    }

    public static TlsCipher dheRsaWithDesCbcSha() {
        return TLS_DHE_RSA_WITH_DES_CBC_SHA;
    }

    public static TlsCipher dheRsaWithSeedCbcSha() {
        return TLS_DHE_RSA_WITH_SEED_CBC_SHA;
    }

    public static TlsCipher dhRsaExportWithDes40CbcSha() {
        return TLS_DH_RSA_EXPORT_WITH_DES40_CBC_SHA;
    }

    public static TlsCipher dhRsaWith3desEdeCbcSha() {
        return TLS_DH_RSA_WITH_3DES_EDE_CBC_SHA;
    }

    public static TlsCipher dhRsaWithAes128CbcSha() {
        return TLS_DH_RSA_WITH_AES_128_CBC_SHA;
    }

    public static TlsCipher dhRsaWithAes128CbcSha256() {
        return TLS_DH_RSA_WITH_AES_128_CBC_SHA256;
    }

    public static TlsCipher dhRsaWithAes128GcmSha256() {
        return TLS_DH_RSA_WITH_AES_128_GCM_SHA256;
    }

    public static TlsCipher dhRsaWithAes256CbcSha() {
        return TLS_DH_RSA_WITH_AES_256_CBC_SHA;
    }

    public static TlsCipher dhRsaWithAes256CbcSha256() {
        return TLS_DH_RSA_WITH_AES_256_CBC_SHA256;
    }

    public static TlsCipher dhRsaWithAes256GcmSha384() {
        return TLS_DH_RSA_WITH_AES_256_GCM_SHA384;
    }

    public static TlsCipher dhRsaWithAria128CbcSha256() {
        return TLS_DH_RSA_WITH_ARIA_128_CBC_SHA256;
    }

    public static TlsCipher dhRsaWithAria128GcmSha256() {
        return TLS_DH_RSA_WITH_ARIA_128_GCM_SHA256;
    }

    public static TlsCipher dhRsaWithAria256CbcSha384() {
        return TLS_DH_RSA_WITH_ARIA_256_CBC_SHA384;
    }

    public static TlsCipher dhRsaWithAria256GcmSha384() {
        return TLS_DH_RSA_WITH_ARIA_256_GCM_SHA384;
    }

    public static TlsCipher dhRsaWithCamellia128CbcSha() {
        return TLS_DH_RSA_WITH_CAMELLIA_128_CBC_SHA;
    }

    public static TlsCipher dhRsaWithCamellia128CbcSha256() {
        return TLS_DH_RSA_WITH_CAMELLIA_128_CBC_SHA256;
    }

    public static TlsCipher dhRsaWithCamellia128GcmSha256() {
        return TLS_DH_RSA_WITH_CAMELLIA_128_GCM_SHA256;
    }

    public static TlsCipher dhRsaWithCamellia256CbcSha() {
        return TLS_DH_RSA_WITH_CAMELLIA_256_CBC_SHA;
    }

    public static TlsCipher dhRsaWithCamellia256CbcSha256() {
        return TLS_DH_RSA_WITH_CAMELLIA_256_CBC_SHA256;
    }

    public static TlsCipher dhRsaWithCamellia256GcmSha384() {
        return TLS_DH_RSA_WITH_CAMELLIA_256_GCM_SHA384;
    }

    public static TlsCipher dhRsaWithDesCbcSha() {
        return TLS_DH_RSA_WITH_DES_CBC_SHA;
    }

    public static TlsCipher dhRsaWithSeedCbcSha() {
        return TLS_DH_RSA_WITH_SEED_CBC_SHA;
    }

    public static TlsCipher eccpwdWithAes128CcmSha256() {
        return TLS_ECCPWD_WITH_AES_128_CCM_SHA256;
    }

    public static TlsCipher eccpwdWithAes128GcmSha256() {
        return TLS_ECCPWD_WITH_AES_128_GCM_SHA256;
    }

    public static TlsCipher eccpwdWithAes256CcmSha384() {
        return TLS_ECCPWD_WITH_AES_256_CCM_SHA384;
    }

    public static TlsCipher eccpwdWithAes256GcmSha384() {
        return TLS_ECCPWD_WITH_AES_256_GCM_SHA384;
    }

    public static TlsCipher ecdhAnonWith3desEdeCbcSha() {
        return TLS_ECDH_ANON_WITH_3DES_EDE_CBC_SHA;
    }

    public static TlsCipher ecdhAnonWithAes128CbcSha() {
        return TLS_ECDH_ANON_WITH_AES_128_CBC_SHA;
    }

    public static TlsCipher ecdhAnonWithAes256CbcSha() {
        return TLS_ECDH_ANON_WITH_AES_256_CBC_SHA;
    }

    public static TlsCipher ecdhAnonWithNullSha() {
        return TLS_ECDH_ANON_WITH_NULL_SHA;
    }

    public static TlsCipher ecdhAnonWithRc4128Sha() {
        return TLS_ECDH_ANON_WITH_RC4_128_SHA;
    }

    public static TlsCipher ecdhEcdsaWith3desEdeCbcSha() {
        return TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA;
    }

    public static TlsCipher ecdhEcdsaWithAes128CbcSha() {
        return TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA;
    }

    public static TlsCipher ecdhEcdsaWithAes128CbcSha256() {
        return TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256;
    }

    public static TlsCipher ecdhEcdsaWithAes128GcmSha256() {
        return TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256;
    }

    public static TlsCipher ecdhEcdsaWithAes256CbcSha() {
        return TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA;
    }

    public static TlsCipher ecdhEcdsaWithAes256CbcSha384() {
        return TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384;
    }

    public static TlsCipher ecdhEcdsaWithAes256GcmSha384() {
        return TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384;
    }

    public static TlsCipher ecdhEcdsaWithAria128CbcSha256() {
        return TLS_ECDH_ECDSA_WITH_ARIA_128_CBC_SHA256;
    }

    public static TlsCipher ecdhEcdsaWithAria128GcmSha256() {
        return TLS_ECDH_ECDSA_WITH_ARIA_128_GCM_SHA256;
    }

    public static TlsCipher ecdhEcdsaWithAria256CbcSha384() {
        return TLS_ECDH_ECDSA_WITH_ARIA_256_CBC_SHA384;
    }

    public static TlsCipher ecdhEcdsaWithAria256GcmSha384() {
        return TLS_ECDH_ECDSA_WITH_ARIA_256_GCM_SHA384;
    }

    public static TlsCipher ecdhEcdsaWithCamellia128CbcSha256() {
        return TLS_ECDH_ECDSA_WITH_CAMELLIA_128_CBC_SHA256;
    }

    public static TlsCipher ecdhEcdsaWithCamellia128GcmSha256() {
        return TLS_ECDH_ECDSA_WITH_CAMELLIA_128_GCM_SHA256;
    }

    public static TlsCipher ecdhEcdsaWithCamellia256CbcSha384() {
        return TLS_ECDH_ECDSA_WITH_CAMELLIA_256_CBC_SHA384;
    }

    public static TlsCipher ecdhEcdsaWithCamellia256GcmSha384() {
        return TLS_ECDH_ECDSA_WITH_CAMELLIA_256_GCM_SHA384;
    }

    public static TlsCipher ecdhEcdsaWithNullSha() {
        return TLS_ECDH_ECDSA_WITH_NULL_SHA;
    }

    public static TlsCipher ecdhEcdsaWithRc4128Sha() {
        return TLS_ECDH_ECDSA_WITH_RC4_128_SHA;
    }

    public static TlsCipher ecdheEcdsaWith3desEdeCbcSha() {
        return TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA;
    }

    public static TlsCipher ecdheEcdsaWithAes128CbcSha() {
        return TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA;
    }

    public static TlsCipher ecdheEcdsaWithAes128CbcSha256() {
        return TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256;
    }

    public static TlsCipher ecdheEcdsaWithAes128Ccm() {
        return TLS_ECDHE_ECDSA_WITH_AES_128_CCM;
    }

    public static TlsCipher ecdheEcdsaWithAes128Ccm8() {
        return TLS_ECDHE_ECDSA_WITH_AES_128_CCM_8;
    }

    public static TlsCipher ecdheEcdsaWithAes128GcmSha256() {
        return TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256;
    }

    public static TlsCipher ecdheEcdsaWithAes256CbcSha() {
        return TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA;
    }

    public static TlsCipher ecdheEcdsaWithAes256CbcSha384() {
        return TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384;
    }

    public static TlsCipher ecdheEcdsaWithAes256Ccm() {
        return TLS_ECDHE_ECDSA_WITH_AES_256_CCM;
    }

    public static TlsCipher ecdheEcdsaWithAes256Ccm8() {
        return TLS_ECDHE_ECDSA_WITH_AES_256_CCM_8;
    }

    public static TlsCipher ecdheEcdsaWithAes256GcmSha384() {
        return TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384;
    }

    public static TlsCipher ecdheEcdsaWithAria128CbcSha256() {
        return TLS_ECDHE_ECDSA_WITH_ARIA_128_CBC_SHA256;
    }

    public static TlsCipher ecdheEcdsaWithAria128GcmSha256() {
        return TLS_ECDHE_ECDSA_WITH_ARIA_128_GCM_SHA256;
    }

    public static TlsCipher ecdheEcdsaWithAria256CbcSha384() {
        return TLS_ECDHE_ECDSA_WITH_ARIA_256_CBC_SHA384;
    }

    public static TlsCipher ecdheEcdsaWithAria256GcmSha384() {
        return TLS_ECDHE_ECDSA_WITH_ARIA_256_GCM_SHA384;
    }

    public static TlsCipher ecdheEcdsaWithCamellia128CbcSha256() {
        return TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_CBC_SHA256;
    }

    public static TlsCipher ecdheEcdsaWithCamellia128GcmSha256() {
        return TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_GCM_SHA256;
    }

    public static TlsCipher ecdheEcdsaWithCamellia256CbcSha384() {
        return TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_CBC_SHA384;
    }

    public static TlsCipher ecdheEcdsaWithCamellia256GcmSha384() {
        return TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_GCM_SHA384;
    }

    public static TlsCipher ecdheEcdsaWithChacha20Poly1305Sha256() {
        return TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256;
    }

    public static TlsCipher ecdheEcdsaWithNullSha() {
        return TLS_ECDHE_ECDSA_WITH_NULL_SHA;
    }

    public static TlsCipher ecdheEcdsaWithRc4128Sha() {
        return TLS_ECDHE_ECDSA_WITH_RC4_128_SHA;
    }

    public static TlsCipher ecdhePskWith3desEdeCbcSha() {
        return TLS_ECDHE_PSK_WITH_3DES_EDE_CBC_SHA;
    }

    public static TlsCipher ecdhePskWithAes128CbcSha() {
        return TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA;
    }

    public static TlsCipher ecdhePskWithAes128CbcSha256() {
        return TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA256;
    }

    public static TlsCipher ecdhePskWithAes128Ccm8Sha256() {
        return TLS_ECDHE_PSK_WITH_AES_128_CCM_8_SHA256;
    }

    public static TlsCipher ecdhePskWithAes128CcmSha256() {
        return TLS_ECDHE_PSK_WITH_AES_128_CCM_SHA256;
    }

    public static TlsCipher ecdhePskWithAes128GcmSha256() {
        return TLS_ECDHE_PSK_WITH_AES_128_GCM_SHA256;
    }

    public static TlsCipher ecdhePskWithAes256CbcSha() {
        return TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA;
    }

    public static TlsCipher ecdhePskWithAes256CbcSha384() {
        return TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA384;
    }

    public static TlsCipher ecdhePskWithAes256GcmSha384() {
        return TLS_ECDHE_PSK_WITH_AES_256_GCM_SHA384;
    }

    public static TlsCipher ecdhePskWithAria128CbcSha256() {
        return TLS_ECDHE_PSK_WITH_ARIA_128_CBC_SHA256;
    }

    public static TlsCipher ecdhePskWithAria256CbcSha384() {
        return TLS_ECDHE_PSK_WITH_ARIA_256_CBC_SHA384;
    }

    public static TlsCipher ecdhePskWithCamellia128CbcSha256() {
        return TLS_ECDHE_PSK_WITH_CAMELLIA_128_CBC_SHA256;
    }

    public static TlsCipher ecdhePskWithCamellia256CbcSha384() {
        return TLS_ECDHE_PSK_WITH_CAMELLIA_256_CBC_SHA384;
    }

    public static TlsCipher ecdhePskWithChacha20Poly1305Sha256() {
        return TLS_ECDHE_PSK_WITH_CHACHA20_POLY1305_SHA256;
    }

    public static TlsCipher ecdhePskWithNullSha() {
        return TLS_ECDHE_PSK_WITH_NULL_SHA;
    }

    public static TlsCipher ecdhePskWithNullSha256() {
        return TLS_ECDHE_PSK_WITH_NULL_SHA256;
    }

    public static TlsCipher ecdhePskWithNullSha384() {
        return TLS_ECDHE_PSK_WITH_NULL_SHA384;
    }

    public static TlsCipher ecdhePskWithRc4128Sha() {
        return TLS_ECDHE_PSK_WITH_RC4_128_SHA;
    }

    public static TlsCipher ecdheRsaWith3desEdeCbcSha() {
        return TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA;
    }

    public static TlsCipher ecdheRsaWithAes128CbcSha() {
        return TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA;
    }

    public static TlsCipher ecdheRsaWithAes128CbcSha256() {
        return TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256;
    }

    public static TlsCipher ecdheRsaWithAes128GcmSha256() {
        return TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256;
    }

    public static TlsCipher ecdheRsaWithAes256CbcSha() {
        return TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA;
    }

    public static TlsCipher ecdheRsaWithAes256CbcSha384() {
        return TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384;
    }

    public static TlsCipher ecdheRsaWithAes256GcmSha384() {
        return TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384;
    }

    public static TlsCipher ecdheRsaWithAria128CbcSha256() {
        return TLS_ECDHE_RSA_WITH_ARIA_128_CBC_SHA256;
    }

    public static TlsCipher ecdheRsaWithAria128GcmSha256() {
        return TLS_ECDHE_RSA_WITH_ARIA_128_GCM_SHA256;
    }

    public static TlsCipher ecdheRsaWithAria256CbcSha384() {
        return TLS_ECDHE_RSA_WITH_ARIA_256_CBC_SHA384;
    }

    public static TlsCipher ecdheRsaWithAria256GcmSha384() {
        return TLS_ECDHE_RSA_WITH_ARIA_256_GCM_SHA384;
    }

    public static TlsCipher ecdheRsaWithCamellia128CbcSha256() {
        return TLS_ECDHE_RSA_WITH_CAMELLIA_128_CBC_SHA256;
    }

    public static TlsCipher ecdheRsaWithCamellia128GcmSha256() {
        return TLS_ECDHE_RSA_WITH_CAMELLIA_128_GCM_SHA256;
    }

    public static TlsCipher ecdheRsaWithCamellia256CbcSha384() {
        return TLS_ECDHE_RSA_WITH_CAMELLIA_256_CBC_SHA384;
    }

    public static TlsCipher ecdheRsaWithCamellia256GcmSha384() {
        return TLS_ECDHE_RSA_WITH_CAMELLIA_256_GCM_SHA384;
    }

    public static TlsCipher ecdheRsaWithChacha20Poly1305Sha256() {
        return TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256;
    }

    public static TlsCipher ecdheRsaWithNullSha() {
        return TLS_ECDHE_RSA_WITH_NULL_SHA;
    }

    public static TlsCipher ecdheRsaWithRc4128Sha() {
        return TLS_ECDHE_RSA_WITH_RC4_128_SHA;
    }

    public static TlsCipher ecdhRsaWith3desEdeCbcSha() {
        return TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA;
    }

    public static TlsCipher ecdhRsaWithAes128CbcSha() {
        return TLS_ECDH_RSA_WITH_AES_128_CBC_SHA;
    }

    public static TlsCipher ecdhRsaWithAes128CbcSha256() {
        return TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256;
    }

    public static TlsCipher ecdhRsaWithAes128GcmSha256() {
        return TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256;
    }

    public static TlsCipher ecdhRsaWithAes256CbcSha() {
        return TLS_ECDH_RSA_WITH_AES_256_CBC_SHA;
    }

    public static TlsCipher ecdhRsaWithAes256CbcSha384() {
        return TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384;
    }

    public static TlsCipher ecdhRsaWithAes256GcmSha384() {
        return TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384;
    }

    public static TlsCipher ecdhRsaWithAria128CbcSha256() {
        return TLS_ECDH_RSA_WITH_ARIA_128_CBC_SHA256;
    }

    public static TlsCipher ecdhRsaWithAria128GcmSha256() {
        return TLS_ECDH_RSA_WITH_ARIA_128_GCM_SHA256;
    }

    public static TlsCipher ecdhRsaWithAria256CbcSha384() {
        return TLS_ECDH_RSA_WITH_ARIA_256_CBC_SHA384;
    }

    public static TlsCipher ecdhRsaWithAria256GcmSha384() {
        return TLS_ECDH_RSA_WITH_ARIA_256_GCM_SHA384;
    }

    public static TlsCipher ecdhRsaWithCamellia128CbcSha256() {
        return TLS_ECDH_RSA_WITH_CAMELLIA_128_CBC_SHA256;
    }

    public static TlsCipher ecdhRsaWithCamellia128GcmSha256() {
        return TLS_ECDH_RSA_WITH_CAMELLIA_128_GCM_SHA256;
    }

    public static TlsCipher ecdhRsaWithCamellia256CbcSha384() {
        return TLS_ECDH_RSA_WITH_CAMELLIA_256_CBC_SHA384;
    }

    public static TlsCipher ecdhRsaWithCamellia256GcmSha384() {
        return TLS_ECDH_RSA_WITH_CAMELLIA_256_GCM_SHA384;
    }

    public static TlsCipher ecdhRsaWithNullSha() {
        return TLS_ECDH_RSA_WITH_NULL_SHA;
    }

    public static TlsCipher ecdhRsaWithRc4128Sha() {
        return TLS_ECDH_RSA_WITH_RC4_128_SHA;
    }

    public static TlsCipher gostr341112256With28147CntImit() {
        return TLS_GOSTR341112_256_WITH_28147_CNT_IMIT;
    }

    public static TlsCipher gostr341112256WithKuznyechikCtrOmac() {
        return TLS_GOSTR341112_256_WITH_KUZNYECHIK_CTR_OMAC;
    }

    public static TlsCipher gostr341112256WithKuznyechikMgmL() {
        return TLS_GOSTR341112_256_WITH_KUZNYECHIK_MGM_L;
    }

    public static TlsCipher gostr341112256WithKuznyechikMgmS() {
        return TLS_GOSTR341112_256_WITH_KUZNYECHIK_MGM_S;
    }

    public static TlsCipher gostr341112256WithMagmaCtrOmac() {
        return TLS_GOSTR341112_256_WITH_MAGMA_CTR_OMAC;
    }

    public static TlsCipher gostr341112256WithMagmaMgmL() {
        return TLS_GOSTR341112_256_WITH_MAGMA_MGM_L;
    }

    public static TlsCipher gostr341112256WithMagmaMgmS() {
        return TLS_GOSTR341112_256_WITH_MAGMA_MGM_S;
    }

    public static TlsCipher krb5ExportWithDesCbc40Md5() {
        return TLS_KRB5_EXPORT_WITH_DES_CBC_40_MD5;
    }

    public static TlsCipher krb5ExportWithDesCbc40Sha() {
        return TLS_KRB5_EXPORT_WITH_DES_CBC_40_SHA;
    }

    public static TlsCipher krb5ExportWithRc2Cbc40Md5() {
        return TLS_KRB5_EXPORT_WITH_RC2_CBC_40_MD5;
    }

    public static TlsCipher krb5ExportWithRc2Cbc40Sha() {
        return TLS_KRB5_EXPORT_WITH_RC2_CBC_40_SHA;
    }

    public static TlsCipher krb5ExportWithRc440Md5() {
        return TLS_KRB5_EXPORT_WITH_RC4_40_MD5;
    }

    public static TlsCipher krb5ExportWithRc440Sha() {
        return TLS_KRB5_EXPORT_WITH_RC4_40_SHA;
    }

    public static TlsCipher krb5With3desEdeCbcMd5() {
        return TLS_KRB5_WITH_3DES_EDE_CBC_MD5;
    }

    public static TlsCipher krb5With3desEdeCbcSha() {
        return TLS_KRB5_WITH_3DES_EDE_CBC_SHA;
    }

    public static TlsCipher krb5WithDesCbcMd5() {
        return TLS_KRB5_WITH_DES_CBC_MD5;
    }

    public static TlsCipher krb5WithDesCbcSha() {
        return TLS_KRB5_WITH_DES_CBC_SHA;
    }

    public static TlsCipher krb5WithIdeaCbcMd5() {
        return TLS_KRB5_WITH_IDEA_CBC_MD5;
    }

    public static TlsCipher krb5WithIdeaCbcSha() {
        return TLS_KRB5_WITH_IDEA_CBC_SHA;
    }

    public static TlsCipher krb5WithRc4128Md5() {
        return TLS_KRB5_WITH_RC4_128_MD5;
    }

    public static TlsCipher krb5WithRc4128Sha() {
        return TLS_KRB5_WITH_RC4_128_SHA;
    }

    public static TlsCipher nullWithNullNull() {
        return TLS_NULL_WITH_NULL_NULL;
    }

    public static TlsCipher pskDheWithAes128Ccm8() {
        return TLS_PSK_DHE_WITH_AES_128_CCM_8;
    }

    public static TlsCipher pskDheWithAes256Ccm8() {
        return TLS_PSK_DHE_WITH_AES_256_CCM_8;
    }

    public static TlsCipher pskWith3desEdeCbcSha() {
        return TLS_PSK_WITH_3DES_EDE_CBC_SHA;
    }

    public static TlsCipher pskWithAes128CbcSha() {
        return TLS_PSK_WITH_AES_128_CBC_SHA;
    }

    public static TlsCipher pskWithAes128CbcSha256() {
        return TLS_PSK_WITH_AES_128_CBC_SHA256;
    }

    public static TlsCipher pskWithAes128Ccm() {
        return TLS_PSK_WITH_AES_128_CCM;
    }

    public static TlsCipher pskWithAes128Ccm8() {
        return TLS_PSK_WITH_AES_128_CCM_8;
    }

    public static TlsCipher pskWithAes128GcmSha256() {
        return TLS_PSK_WITH_AES_128_GCM_SHA256;
    }

    public static TlsCipher pskWithAes256CbcSha() {
        return TLS_PSK_WITH_AES_256_CBC_SHA;
    }

    public static TlsCipher pskWithAes256CbcSha384() {
        return TLS_PSK_WITH_AES_256_CBC_SHA384;
    }

    public static TlsCipher pskWithAes256Ccm() {
        return TLS_PSK_WITH_AES_256_CCM;
    }

    public static TlsCipher pskWithAes256Ccm8() {
        return TLS_PSK_WITH_AES_256_CCM_8;
    }

    public static TlsCipher pskWithAes256GcmSha384() {
        return TLS_PSK_WITH_AES_256_GCM_SHA384;
    }

    public static TlsCipher pskWithAria128CbcSha256() {
        return TLS_PSK_WITH_ARIA_128_CBC_SHA256;
    }

    public static TlsCipher pskWithAria128GcmSha256() {
        return TLS_PSK_WITH_ARIA_128_GCM_SHA256;
    }

    public static TlsCipher pskWithAria256CbcSha384() {
        return TLS_PSK_WITH_ARIA_256_CBC_SHA384;
    }

    public static TlsCipher pskWithAria256GcmSha384() {
        return TLS_PSK_WITH_ARIA_256_GCM_SHA384;
    }

    public static TlsCipher pskWithCamellia128CbcSha256() {
        return TLS_PSK_WITH_CAMELLIA_128_CBC_SHA256;
    }

    public static TlsCipher pskWithCamellia128GcmSha256() {
        return TLS_PSK_WITH_CAMELLIA_128_GCM_SHA256;
    }

    public static TlsCipher pskWithCamellia256CbcSha384() {
        return TLS_PSK_WITH_CAMELLIA_256_CBC_SHA384;
    }

    public static TlsCipher pskWithCamellia256GcmSha384() {
        return TLS_PSK_WITH_CAMELLIA_256_GCM_SHA384;
    }

    public static TlsCipher pskWithChacha20Poly1305Sha256() {
        return TLS_PSK_WITH_CHACHA20_POLY1305_SHA256;
    }

    public static TlsCipher pskWithNullSha() {
        return TLS_PSK_WITH_NULL_SHA;
    }

    public static TlsCipher pskWithNullSha256() {
        return TLS_PSK_WITH_NULL_SHA256;
    }

    public static TlsCipher pskWithNullSha384() {
        return TLS_PSK_WITH_NULL_SHA384;
    }

    public static TlsCipher pskWithRc4128Sha() {
        return TLS_PSK_WITH_RC4_128_SHA;
    }

    public static TlsCipher rsaExportWithDes40CbcSha() {
        return TLS_RSA_EXPORT_WITH_DES40_CBC_SHA;
    }

    public static TlsCipher rsaExportWithRc2Cbc40Md5() {
        return TLS_RSA_EXPORT_WITH_RC2_CBC_40_MD5;
    }

    public static TlsCipher rsaExportWithRc440Md5() {
        return TLS_RSA_EXPORT_WITH_RC4_40_MD5;
    }

    public static TlsCipher rsaPskWith3desEdeCbcSha() {
        return TLS_RSA_PSK_WITH_3DES_EDE_CBC_SHA;
    }

    public static TlsCipher rsaPskWithAes128CbcSha() {
        return TLS_RSA_PSK_WITH_AES_128_CBC_SHA;
    }

    public static TlsCipher rsaPskWithAes128CbcSha256() {
        return TLS_RSA_PSK_WITH_AES_128_CBC_SHA256;
    }

    public static TlsCipher rsaPskWithAes128GcmSha256() {
        return TLS_RSA_PSK_WITH_AES_128_GCM_SHA256;
    }

    public static TlsCipher rsaPskWithAes256CbcSha() {
        return TLS_RSA_PSK_WITH_AES_256_CBC_SHA;
    }

    public static TlsCipher rsaPskWithAes256CbcSha384() {
        return TLS_RSA_PSK_WITH_AES_256_CBC_SHA384;
    }

    public static TlsCipher rsaPskWithAes256GcmSha384() {
        return TLS_RSA_PSK_WITH_AES_256_GCM_SHA384;
    }

    public static TlsCipher rsaPskWithAria128CbcSha256() {
        return TLS_RSA_PSK_WITH_ARIA_128_CBC_SHA256;
    }

    public static TlsCipher rsaPskWithAria128GcmSha256() {
        return TLS_RSA_PSK_WITH_ARIA_128_GCM_SHA256;
    }

    public static TlsCipher rsaPskWithAria256CbcSha384() {
        return TLS_RSA_PSK_WITH_ARIA_256_CBC_SHA384;
    }

    public static TlsCipher rsaPskWithAria256GcmSha384() {
        return TLS_RSA_PSK_WITH_ARIA_256_GCM_SHA384;
    }

    public static TlsCipher rsaPskWithCamellia128CbcSha256() {
        return TLS_RSA_PSK_WITH_CAMELLIA_128_CBC_SHA256;
    }

    public static TlsCipher rsaPskWithCamellia128GcmSha256() {
        return TLS_RSA_PSK_WITH_CAMELLIA_128_GCM_SHA256;
    }

    public static TlsCipher rsaPskWithCamellia256CbcSha384() {
        return TLS_RSA_PSK_WITH_CAMELLIA_256_CBC_SHA384;
    }

    public static TlsCipher rsaPskWithCamellia256GcmSha384() {
        return TLS_RSA_PSK_WITH_CAMELLIA_256_GCM_SHA384;
    }

    public static TlsCipher rsaPskWithChacha20Poly1305Sha256() {
        return TLS_RSA_PSK_WITH_CHACHA20_POLY1305_SHA256;
    }

    public static TlsCipher rsaPskWithNullSha() {
        return TLS_RSA_PSK_WITH_NULL_SHA;
    }

    public static TlsCipher rsaPskWithNullSha256() {
        return TLS_RSA_PSK_WITH_NULL_SHA256;
    }

    public static TlsCipher rsaPskWithNullSha384() {
        return TLS_RSA_PSK_WITH_NULL_SHA384;
    }

    public static TlsCipher rsaPskWithRc4128Sha() {
        return TLS_RSA_PSK_WITH_RC4_128_SHA;
    }

    public static TlsCipher rsaWith3desEdeCbcSha() {
        return TLS_RSA_WITH_3DES_EDE_CBC_SHA;
    }

    public static TlsCipher rsaWithAes128CbcSha() {
        return TLS_RSA_WITH_AES_128_CBC_SHA;
    }

    public static TlsCipher rsaWithAes128CbcSha256() {
        return TLS_RSA_WITH_AES_128_CBC_SHA256;
    }

    public static TlsCipher rsaWithAes128Ccm() {
        return TLS_RSA_WITH_AES_128_CCM;
    }

    public static TlsCipher rsaWithAes128Ccm8() {
        return TLS_RSA_WITH_AES_128_CCM_8;
    }

    public static TlsCipher rsaWithAes128GcmSha256() {
        return TLS_RSA_WITH_AES_128_GCM_SHA256;
    }

    public static TlsCipher rsaWithAes256CbcSha() {
        return TLS_RSA_WITH_AES_256_CBC_SHA;
    }

    public static TlsCipher rsaWithAes256CbcSha256() {
        return TLS_RSA_WITH_AES_256_CBC_SHA256;
    }

    public static TlsCipher rsaWithAes256Ccm() {
        return TLS_RSA_WITH_AES_256_CCM;
    }

    public static TlsCipher rsaWithAes256Ccm8() {
        return TLS_RSA_WITH_AES_256_CCM_8;
    }

    public static TlsCipher rsaWithAes256GcmSha384() {
        return TLS_RSA_WITH_AES_256_GCM_SHA384;
    }

    public static TlsCipher rsaWithAria128CbcSha256() {
        return TLS_RSA_WITH_ARIA_128_CBC_SHA256;
    }

    public static TlsCipher rsaWithAria128GcmSha256() {
        return TLS_RSA_WITH_ARIA_128_GCM_SHA256;
    }

    public static TlsCipher rsaWithAria256CbcSha384() {
        return TLS_RSA_WITH_ARIA_256_CBC_SHA384;
    }

    public static TlsCipher rsaWithAria256GcmSha384() {
        return TLS_RSA_WITH_ARIA_256_GCM_SHA384;
    }

    public static TlsCipher rsaWithCamellia128CbcSha() {
        return TLS_RSA_WITH_CAMELLIA_128_CBC_SHA;
    }

    public static TlsCipher rsaWithCamellia128CbcSha256() {
        return TLS_RSA_WITH_CAMELLIA_128_CBC_SHA256;
    }

    public static TlsCipher rsaWithCamellia128GcmSha256() {
        return TLS_RSA_WITH_CAMELLIA_128_GCM_SHA256;
    }

    public static TlsCipher rsaWithCamellia256CbcSha() {
        return TLS_RSA_WITH_CAMELLIA_256_CBC_SHA;
    }

    public static TlsCipher rsaWithCamellia256CbcSha256() {
        return TLS_RSA_WITH_CAMELLIA_256_CBC_SHA256;
    }

    public static TlsCipher rsaWithCamellia256GcmSha384() {
        return TLS_RSA_WITH_CAMELLIA_256_GCM_SHA384;
    }

    public static TlsCipher rsaWithDesCbcSha() {
        return TLS_RSA_WITH_DES_CBC_SHA;
    }

    public static TlsCipher rsaWithIdeaCbcSha() {
        return TLS_RSA_WITH_IDEA_CBC_SHA;
    }

    public static TlsCipher rsaWithNullMd5() {
        return TLS_RSA_WITH_NULL_MD5;
    }

    public static TlsCipher rsaWithNullSha() {
        return TLS_RSA_WITH_NULL_SHA;
    }

    public static TlsCipher rsaWithNullSha256() {
        return TLS_RSA_WITH_NULL_SHA256;
    }

    public static TlsCipher rsaWithRc4128Md5() {
        return TLS_RSA_WITH_RC4_128_MD5;
    }

    public static TlsCipher rsaWithRc4128Sha() {
        return TLS_RSA_WITH_RC4_128_SHA;
    }

    public static TlsCipher rsaWithSeedCbcSha() {
        return TLS_RSA_WITH_SEED_CBC_SHA;
    }

    public static TlsCipher sha256Sha256() {
        return TLS_SHA256_SHA256;
    }

    public static TlsCipher sha384Sha384() {
        return TLS_SHA384_SHA384;
    }

    public static TlsCipher sm4CcmSm3() {
        return TLS_SM4_CCM_SM3;
    }

    public static TlsCipher sm4GcmSm3() {
        return TLS_SM4_GCM_SM3;
    }

    public static TlsCipher srpShaDssWith3desEdeCbcSha() {
        return TLS_SRP_SHA_DSS_WITH_3DES_EDE_CBC_SHA;
    }

    public static TlsCipher srpShaDssWithAes128CbcSha() {
        return TLS_SRP_SHA_DSS_WITH_AES_128_CBC_SHA;
    }

    public static TlsCipher srpShaDssWithAes256CbcSha() {
        return TLS_SRP_SHA_DSS_WITH_AES_256_CBC_SHA;
    }

    public static TlsCipher srpShaRsaWith3desEdeCbcSha() {
        return TLS_SRP_SHA_RSA_WITH_3DES_EDE_CBC_SHA;
    }

    public static TlsCipher srpShaRsaWithAes128CbcSha() {
        return TLS_SRP_SHA_RSA_WITH_AES_128_CBC_SHA;
    }

    public static TlsCipher srpShaRsaWithAes256CbcSha() {
        return TLS_SRP_SHA_RSA_WITH_AES_256_CBC_SHA;
    }

    public static TlsCipher srpShaWith3desEdeCbcSha() {
        return TLS_SRP_SHA_WITH_3DES_EDE_CBC_SHA;
    }

    public static TlsCipher srpShaWithAes128CbcSha() {
        return TLS_SRP_SHA_WITH_AES_128_CBC_SHA;
    }

    public static TlsCipher srpShaWithAes256CbcSha() {
        return TLS_SRP_SHA_WITH_AES_256_CBC_SHA;
    }

    public static TlsCipher grease0A() {
        return TLS_GREASE_0A;
    }

    public static TlsCipher grease1A() {
        return TLS_GREASE_1A;
    }

    public static TlsCipher grease2A() {
        return TLS_GREASE_2A;
    }

    public static TlsCipher grease3A() {
        return TLS_GREASE_3A;
    }

    public static TlsCipher grease4A() {
        return TLS_GREASE_4A;
    }

    public static TlsCipher grease5A() {
        return TLS_GREASE_5A;
    }

    public static TlsCipher grease6A() {
        return TLS_GREASE_6A;
    }

    public static TlsCipher grease7A() {
        return TLS_GREASE_7A;
    }

    public static TlsCipher grease8A() {
        return TLS_GREASE_8A;
    }

    public static TlsCipher grease9A() {
        return TLS_GREASE_9A;
    }

    public static TlsCipher greaseAA() {
        return TLS_GREASE_AA;
    }

    public static TlsCipher greaseBA() {
        return TLS_GREASE_BA;
    }

    public static TlsCipher greaseCA() {
        return TLS_GREASE_CA;
    }

    public static TlsCipher greaseDA() {
        return TLS_GREASE_DA;
    }

    public static TlsCipher greaseEA() {
        return TLS_GREASE_EA;
    }

    public static TlsCipher greaseFA() {
        return TLS_GREASE_FA;
    }

    public static List<TlsCipher> grease() {
        return TLS_GREASE;
    }
    //</editor-fold>

    private final int id;
    private final TlsKeyExchangeType keyExchange;
    private final TlsAuth auth;
    private final TlsCipherEngineType engine;
    private final TlsCipherModeType mode;
    private final TlsHashType hash;
    private final List<TlsVersion> versions;
    private final boolean secure;
    private TlsCipher(int id, TlsCipherEngineType engine, TlsCipherModeType mode, TlsKeyExchangeType keyExchange, TlsAuth auth, TlsHashType hash, List<TlsVersion> versions, boolean secure) {
        this.id = id;
        this.engine = engine;
        this.mode = mode;
        this.keyExchange = keyExchange;
        this.auth = auth;
        this.hash = hash;
        this.versions = versions;
        this.secure = secure;
    }

    public int id() {
        return id;
    }

    public TlsKeyExchangeType keyExchange() {
        return keyExchange;
    }

    public TlsAuth auth() {
        return auth;
    }

    public TlsCipherEngineType engine() {
        return engine;
    }

    public TlsCipherModeType mode() {
        return mode;
    }

    public TlsHashType hash() {
        return hash;
    }

    public List<TlsVersion> versions() {
        return versions;
    }

    public boolean secure() {
        return secure;
    }

    @Override
    public boolean equals(Object obj) {
        return obj == this || obj instanceof TlsCipher that && this.id == that.id;
    }

    @Override
    public int hashCode() {
        return Objects.hash(id);
    }

    @Override
    public String toString() {
        return "TlsCipher{" +
                "id=" + id +
                ", keyExchange=" + keyExchange +
                ", auth=" + auth +
                ", engine=" + engine +
                ", mode=" + mode +
                ", hashType=" + hash +
                ", versions=" + versions +
                ", secure=" + secure +
                '}';
    }
}
