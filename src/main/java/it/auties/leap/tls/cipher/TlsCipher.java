package it.auties.leap.tls.cipher;

import it.auties.leap.tls.cipher.auth.TlsAuthFactory;
import it.auties.leap.tls.cipher.engine.TlsCipherEngineFactory;
import it.auties.leap.tls.cipher.exchange.TlsKeyExchangeFactory;
import it.auties.leap.tls.cipher.mode.TlsCipherModeFactory;
import it.auties.leap.tls.exception.TlsException;
import it.auties.leap.tls.hash.TlsHashFactory;
import it.auties.leap.tls.TlsIdentifiable;
import it.auties.leap.tls.version.TlsVersion;

import java.net.URI;
import java.util.List;
import java.util.Objects;

// Most of the code here is autogenerated using GenerateCiphers
public final class TlsCipher implements TlsIdentifiable<Integer> {
    //<editor-fold desc="Ciphers">
    private static final List<TlsVersion> TLS_10_TO_12 = List.of(TlsVersion.TLS10, TlsVersion.TLS11, TlsVersion.TLS12, TlsVersion.TLS13);
    private static final List<TlsVersion> TLS_12 = List.of(TlsVersion.TLS12);
    private static final List<TlsVersion> TLS_13 = List.of(TlsVersion.TLS13);

    private static final TlsCipher TLS_AES_128_CCM_8_SHA256 = new TlsCipher(0x1305, TlsCipherEngineFactory.aes128(), TlsCipherModeFactory.ccm8(), TlsKeyExchangeFactory.contextual(), TlsAuthFactory.contextual(), TlsHashFactory.sha256(), TLS_13, true);
    private static final TlsCipher TLS_AES_128_CCM_SHA256 = new TlsCipher(0x1304, TlsCipherEngineFactory.aes128(), TlsCipherModeFactory.ccm(), TlsKeyExchangeFactory.contextual(), TlsAuthFactory.contextual(), TlsHashFactory.sha256(), TLS_13, true);
    private static final TlsCipher TLS_AES_128_GCM_SHA256 = new TlsCipher(0x1301, TlsCipherEngineFactory.aes128(), TlsCipherModeFactory.gcm(), TlsKeyExchangeFactory.contextual(), TlsAuthFactory.contextual(), TlsHashFactory.sha256(), TLS_13, false);
    private static final TlsCipher TLS_AES_256_GCM_SHA384 = new TlsCipher(0x1302, TlsCipherEngineFactory.aes256(), TlsCipherModeFactory.gcm(), TlsKeyExchangeFactory.contextual(), TlsAuthFactory.contextual(), TlsHashFactory.sha384(), TLS_13, false);
    private static final TlsCipher TLS_CHACHA20_POLY1305_SHA256 = new TlsCipher(0x1303, TlsCipherEngineFactory.chaCha20(), TlsCipherModeFactory.poly1305(), TlsKeyExchangeFactory.contextual(), TlsAuthFactory.contextual(), TlsHashFactory.sha256(), TLS_13, false);
    private static final TlsCipher TLS_SHA256_SHA256 = new TlsCipher(0xC0B4, TlsCipherEngineFactory.none(), TlsCipherModeFactory.none(), TlsKeyExchangeFactory.contextual(), TlsAuthFactory.sha256(), TlsHashFactory.sha256(), TLS_13, false);
    private static final TlsCipher TLS_SHA384_SHA384 = new TlsCipher(0xC0B5, TlsCipherEngineFactory.none(), TlsCipherModeFactory.none(), TlsKeyExchangeFactory.contextual(), TlsAuthFactory.sha384(), TlsHashFactory.sha384(), TLS_13, false);
    private static final TlsCipher TLS_SM4_CCM_SM3 = new TlsCipher(0x00C7, TlsCipherEngineFactory.sm4(), TlsCipherModeFactory.ccm(), TlsKeyExchangeFactory.contextual(), TlsAuthFactory.contextual(), TlsHashFactory.sm3(), TLS_13, false);
    private static final TlsCipher TLS_SM4_GCM_SM3 = new TlsCipher(0x00C6, TlsCipherEngineFactory.sm4(), TlsCipherModeFactory.gcm(), TlsKeyExchangeFactory.contextual(), TlsAuthFactory.contextual(), TlsHashFactory.sm3(), TLS_13, false);
    private static final TlsCipher TLS_DH_ANON_EXPORT_WITH_DES40_CBC_SHA = new TlsCipher(0x0019, TlsCipherEngineFactory.des40(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.dh(), TlsAuthFactory.anonymous(), TlsHashFactory.sha1(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_DH_ANON_EXPORT_WITH_RC4_40_MD5 = new TlsCipher(0x0017, TlsCipherEngineFactory.rc4_40(), TlsCipherModeFactory.ctr(), TlsKeyExchangeFactory.dh(), TlsAuthFactory.anonymous(), TlsHashFactory.md5(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_DH_ANON_WITH_3DES_EDE_CBC_SHA = new TlsCipher(0x001B, TlsCipherEngineFactory.desEde(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.dh(), TlsAuthFactory.anonymous(), TlsHashFactory.sha1(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_DH_ANON_WITH_AES_128_CBC_SHA = new TlsCipher(0x0034, TlsCipherEngineFactory.aes128(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.dh(), TlsAuthFactory.anonymous(), TlsHashFactory.sha1(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_DH_ANON_WITH_AES_128_CBC_SHA256 = new TlsCipher(0x006C, TlsCipherEngineFactory.aes128(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.dh(), TlsAuthFactory.anonymous(), TlsHashFactory.sha256(), TLS_12, false);
    private static final TlsCipher TLS_DH_ANON_WITH_AES_128_GCM_SHA256 = new TlsCipher(0x00A6, TlsCipherEngineFactory.aes128(), TlsCipherModeFactory.gcm(), TlsKeyExchangeFactory.dh(), TlsAuthFactory.anonymous(), TlsHashFactory.sha256(), TLS_12, false);
    private static final TlsCipher TLS_DH_ANON_WITH_AES_256_CBC_SHA = new TlsCipher(0x003A, TlsCipherEngineFactory.aes256(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.dh(), TlsAuthFactory.anonymous(), TlsHashFactory.sha1(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_DH_ANON_WITH_AES_256_CBC_SHA256 = new TlsCipher(0x006D, TlsCipherEngineFactory.aes256(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.dh(), TlsAuthFactory.anonymous(), TlsHashFactory.sha256(), TLS_12, false);
    private static final TlsCipher TLS_DH_ANON_WITH_AES_256_GCM_SHA384 = new TlsCipher(0x00A7, TlsCipherEngineFactory.aes256(), TlsCipherModeFactory.gcm(), TlsKeyExchangeFactory.dh(), TlsAuthFactory.anonymous(), TlsHashFactory.sha384(), TLS_12, false);
    private static final TlsCipher TLS_DH_ANON_WITH_ARIA_128_CBC_SHA256 = new TlsCipher(0xC046, TlsCipherEngineFactory.aria128(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.dh(), TlsAuthFactory.anonymous(), TlsHashFactory.sha256(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_DH_ANON_WITH_ARIA_128_GCM_SHA256 = new TlsCipher(0xC05A, TlsCipherEngineFactory.aria128(), TlsCipherModeFactory.gcm(), TlsKeyExchangeFactory.dh(), TlsAuthFactory.anonymous(), TlsHashFactory.sha256(), TLS_12, false);
    private static final TlsCipher TLS_DH_ANON_WITH_ARIA_256_CBC_SHA384 = new TlsCipher(0xC047, TlsCipherEngineFactory.aria256(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.dh(), TlsAuthFactory.anonymous(), TlsHashFactory.sha384(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_DH_ANON_WITH_ARIA_256_GCM_SHA384 = new TlsCipher(0xC05B, TlsCipherEngineFactory.aria256(), TlsCipherModeFactory.gcm(), TlsKeyExchangeFactory.dh(), TlsAuthFactory.anonymous(), TlsHashFactory.sha384(), TLS_12, false);
    private static final TlsCipher TLS_DH_ANON_WITH_CAMELLIA_128_CBC_SHA = new TlsCipher(0x0046, TlsCipherEngineFactory.camellia128(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.dh(), TlsAuthFactory.anonymous(), TlsHashFactory.sha1(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_DH_ANON_WITH_CAMELLIA_128_CBC_SHA256 = new TlsCipher(0x00BF, TlsCipherEngineFactory.camellia128(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.dh(), TlsAuthFactory.anonymous(), TlsHashFactory.sha256(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_DH_ANON_WITH_CAMELLIA_128_GCM_SHA256 = new TlsCipher(0xC084, TlsCipherEngineFactory.camellia128(), TlsCipherModeFactory.gcm(), TlsKeyExchangeFactory.dh(), TlsAuthFactory.anonymous(), TlsHashFactory.sha256(), TLS_12, false);
    private static final TlsCipher TLS_DH_ANON_WITH_CAMELLIA_256_CBC_SHA = new TlsCipher(0x0089, TlsCipherEngineFactory.camellia256(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.dh(), TlsAuthFactory.anonymous(), TlsHashFactory.sha1(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_DH_ANON_WITH_CAMELLIA_256_CBC_SHA256 = new TlsCipher(0x00C5, TlsCipherEngineFactory.camellia256(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.dh(), TlsAuthFactory.anonymous(), TlsHashFactory.sha256(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_DH_ANON_WITH_CAMELLIA_256_GCM_SHA384 = new TlsCipher(0xC085, TlsCipherEngineFactory.camellia256(), TlsCipherModeFactory.gcm(), TlsKeyExchangeFactory.dh(), TlsAuthFactory.anonymous(), TlsHashFactory.sha384(), TLS_12, false);
    private static final TlsCipher TLS_DH_ANON_WITH_DES_CBC_SHA = new TlsCipher(0x001A, TlsCipherEngineFactory.des40(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.dh(), TlsAuthFactory.anonymous(), TlsHashFactory.sha1(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_DH_ANON_WITH_RC4_128_MD5 = new TlsCipher(0x0018, TlsCipherEngineFactory.rc4_128(), TlsCipherModeFactory.ctr(), TlsKeyExchangeFactory.dh(), TlsAuthFactory.anonymous(), TlsHashFactory.md5(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_DH_ANON_WITH_SEED_CBC_SHA = new TlsCipher(0x009B, TlsCipherEngineFactory.seed(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.dh(), TlsAuthFactory.anonymous(), TlsHashFactory.sha1(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_DH_DSS_EXPORT_WITH_DES40_CBC_SHA = new TlsCipher(0x000B, TlsCipherEngineFactory.des40(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.dh(), TlsAuthFactory.dss(), TlsHashFactory.sha1(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_DH_DSS_WITH_3DES_EDE_CBC_SHA = new TlsCipher(0x000D, TlsCipherEngineFactory.desEde(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.dh(), TlsAuthFactory.dss(), TlsHashFactory.sha1(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_DH_DSS_WITH_AES_128_CBC_SHA = new TlsCipher(0x0030, TlsCipherEngineFactory.aes128(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.dh(), TlsAuthFactory.dss(), TlsHashFactory.sha1(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_DH_DSS_WITH_AES_128_CBC_SHA256 = new TlsCipher(0x003E, TlsCipherEngineFactory.aes128(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.dh(), TlsAuthFactory.dss(), TlsHashFactory.sha256(), TLS_12, false);
    private static final TlsCipher TLS_DH_DSS_WITH_AES_128_GCM_SHA256 = new TlsCipher(0x00A4, TlsCipherEngineFactory.aes128(), TlsCipherModeFactory.gcm(), TlsKeyExchangeFactory.dh(), TlsAuthFactory.dss(), TlsHashFactory.sha256(), TLS_12, false);
    private static final TlsCipher TLS_DH_DSS_WITH_AES_256_CBC_SHA = new TlsCipher(0x0036, TlsCipherEngineFactory.aes256(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.dh(), TlsAuthFactory.dss(), TlsHashFactory.sha1(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_DH_DSS_WITH_AES_256_CBC_SHA256 = new TlsCipher(0x0068, TlsCipherEngineFactory.aes256(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.dh(), TlsAuthFactory.dss(), TlsHashFactory.sha256(), TLS_12, false);
    private static final TlsCipher TLS_DH_DSS_WITH_AES_256_GCM_SHA384 = new TlsCipher(0x00A5, TlsCipherEngineFactory.aes256(), TlsCipherModeFactory.gcm(), TlsKeyExchangeFactory.dh(), TlsAuthFactory.dss(), TlsHashFactory.sha384(), TLS_12, false);
    private static final TlsCipher TLS_DH_DSS_WITH_ARIA_128_CBC_SHA256 = new TlsCipher(0xC03E, TlsCipherEngineFactory.aria128(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.dh(), TlsAuthFactory.dss(), TlsHashFactory.sha256(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_DH_DSS_WITH_ARIA_128_GCM_SHA256 = new TlsCipher(0xC058, TlsCipherEngineFactory.aria128(), TlsCipherModeFactory.gcm(), TlsKeyExchangeFactory.dh(), TlsAuthFactory.dss(), TlsHashFactory.sha256(), TLS_12, false);
    private static final TlsCipher TLS_DH_DSS_WITH_ARIA_256_CBC_SHA384 = new TlsCipher(0xC03F, TlsCipherEngineFactory.aria256(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.dh(), TlsAuthFactory.dss(), TlsHashFactory.sha384(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_DH_DSS_WITH_ARIA_256_GCM_SHA384 = new TlsCipher(0xC059, TlsCipherEngineFactory.aria256(), TlsCipherModeFactory.gcm(), TlsKeyExchangeFactory.dh(), TlsAuthFactory.dss(), TlsHashFactory.sha384(), TLS_12, false);
    private static final TlsCipher TLS_DH_DSS_WITH_CAMELLIA_128_CBC_SHA = new TlsCipher(0x0042, TlsCipherEngineFactory.camellia128(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.dh(), TlsAuthFactory.dss(), TlsHashFactory.sha1(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_DH_DSS_WITH_CAMELLIA_128_CBC_SHA256 = new TlsCipher(0x00BB, TlsCipherEngineFactory.camellia128(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.dh(), TlsAuthFactory.dss(), TlsHashFactory.sha256(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_DH_DSS_WITH_CAMELLIA_128_GCM_SHA256 = new TlsCipher(0xC082, TlsCipherEngineFactory.camellia128(), TlsCipherModeFactory.gcm(), TlsKeyExchangeFactory.dh(), TlsAuthFactory.dss(), TlsHashFactory.sha256(), TLS_12, false);
    private static final TlsCipher TLS_DH_DSS_WITH_CAMELLIA_256_CBC_SHA = new TlsCipher(0x0085, TlsCipherEngineFactory.camellia256(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.dh(), TlsAuthFactory.dss(), TlsHashFactory.sha1(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_DH_DSS_WITH_CAMELLIA_256_CBC_SHA256 = new TlsCipher(0x00C1, TlsCipherEngineFactory.camellia256(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.dh(), TlsAuthFactory.dss(), TlsHashFactory.sha256(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_DH_DSS_WITH_CAMELLIA_256_GCM_SHA384 = new TlsCipher(0xC083, TlsCipherEngineFactory.camellia256(), TlsCipherModeFactory.gcm(), TlsKeyExchangeFactory.dh(), TlsAuthFactory.dss(), TlsHashFactory.sha384(), TLS_12, false);
    private static final TlsCipher TLS_DH_DSS_WITH_DES_CBC_SHA = new TlsCipher(0x000C, TlsCipherEngineFactory.des40(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.dh(), TlsAuthFactory.dss(), TlsHashFactory.sha1(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_DH_DSS_WITH_SEED_CBC_SHA = new TlsCipher(0x0097, TlsCipherEngineFactory.seed(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.dh(), TlsAuthFactory.dss(), TlsHashFactory.sha1(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA = new TlsCipher(0x0011, TlsCipherEngineFactory.des40(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.dhe(), TlsAuthFactory.dss(), TlsHashFactory.sha1(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA = new TlsCipher(0x0013, TlsCipherEngineFactory.desEde(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.dhe(), TlsAuthFactory.dss(), TlsHashFactory.sha1(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_DHE_DSS_WITH_AES_128_CBC_SHA = new TlsCipher(0x0032, TlsCipherEngineFactory.aes128(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.dhe(), TlsAuthFactory.dss(), TlsHashFactory.sha1(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_DHE_DSS_WITH_AES_128_CBC_SHA256 = new TlsCipher(0x0040, TlsCipherEngineFactory.aes128(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.dhe(), TlsAuthFactory.dss(), TlsHashFactory.sha256(), TLS_12, false);
    private static final TlsCipher TLS_DHE_DSS_WITH_AES_128_GCM_SHA256 = new TlsCipher(0x00A2, TlsCipherEngineFactory.aes128(), TlsCipherModeFactory.gcm(), TlsKeyExchangeFactory.dhe(), TlsAuthFactory.dss(), TlsHashFactory.sha256(), TLS_12, false);
    private static final TlsCipher TLS_DHE_DSS_WITH_AES_256_CBC_SHA = new TlsCipher(0x0038, TlsCipherEngineFactory.aes256(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.dhe(), TlsAuthFactory.dss(), TlsHashFactory.sha1(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_DHE_DSS_WITH_AES_256_CBC_SHA256 = new TlsCipher(0x006A, TlsCipherEngineFactory.aes256(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.dhe(), TlsAuthFactory.dss(), TlsHashFactory.sha256(), TLS_12, false);
    private static final TlsCipher TLS_DHE_DSS_WITH_AES_256_GCM_SHA384 = new TlsCipher(0x00A3, TlsCipherEngineFactory.aes256(), TlsCipherModeFactory.gcm(), TlsKeyExchangeFactory.dhe(), TlsAuthFactory.dss(), TlsHashFactory.sha384(), TLS_12, false);
    private static final TlsCipher TLS_DHE_DSS_WITH_ARIA_128_CBC_SHA256 = new TlsCipher(0xC042, TlsCipherEngineFactory.aria128(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.dhe(), TlsAuthFactory.dss(), TlsHashFactory.sha256(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_DHE_DSS_WITH_ARIA_128_GCM_SHA256 = new TlsCipher(0xC056, TlsCipherEngineFactory.aria128(), TlsCipherModeFactory.gcm(), TlsKeyExchangeFactory.dhe(), TlsAuthFactory.dss(), TlsHashFactory.sha256(), TLS_12, false);
    private static final TlsCipher TLS_DHE_DSS_WITH_ARIA_256_CBC_SHA384 = new TlsCipher(0xC043, TlsCipherEngineFactory.aria256(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.dhe(), TlsAuthFactory.dss(), TlsHashFactory.sha384(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_DHE_DSS_WITH_ARIA_256_GCM_SHA384 = new TlsCipher(0xC057, TlsCipherEngineFactory.aria256(), TlsCipherModeFactory.gcm(), TlsKeyExchangeFactory.dhe(), TlsAuthFactory.dss(), TlsHashFactory.sha384(), TLS_12, false);
    private static final TlsCipher TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA = new TlsCipher(0x0044, TlsCipherEngineFactory.camellia128(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.dhe(), TlsAuthFactory.dss(), TlsHashFactory.sha1(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA256 = new TlsCipher(0x00BD, TlsCipherEngineFactory.camellia128(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.dhe(), TlsAuthFactory.dss(), TlsHashFactory.sha256(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_DHE_DSS_WITH_CAMELLIA_128_GCM_SHA256 = new TlsCipher(0xC080, TlsCipherEngineFactory.camellia128(), TlsCipherModeFactory.gcm(), TlsKeyExchangeFactory.dhe(), TlsAuthFactory.dss(), TlsHashFactory.sha256(), TLS_12, false);
    private static final TlsCipher TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA = new TlsCipher(0x0087, TlsCipherEngineFactory.camellia256(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.dhe(), TlsAuthFactory.dss(), TlsHashFactory.sha1(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA256 = new TlsCipher(0x00C3, TlsCipherEngineFactory.camellia256(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.dhe(), TlsAuthFactory.dss(), TlsHashFactory.sha256(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_DHE_DSS_WITH_CAMELLIA_256_GCM_SHA384 = new TlsCipher(0xC081, TlsCipherEngineFactory.camellia256(), TlsCipherModeFactory.gcm(), TlsKeyExchangeFactory.dhe(), TlsAuthFactory.dss(), TlsHashFactory.sha384(), TLS_12, false);
    private static final TlsCipher TLS_DHE_DSS_WITH_DES_CBC_SHA = new TlsCipher(0x0012, TlsCipherEngineFactory.des40(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.dhe(), TlsAuthFactory.dss(), TlsHashFactory.sha1(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_DHE_DSS_WITH_SEED_CBC_SHA = new TlsCipher(0x0099, TlsCipherEngineFactory.seed(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.dhe(), TlsAuthFactory.dss(), TlsHashFactory.sha1(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_DHE_PSK_WITH_3DES_EDE_CBC_SHA = new TlsCipher(0x008F, TlsCipherEngineFactory.desEde(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.dhe(), TlsAuthFactory.psk(), TlsHashFactory.sha1(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_DHE_PSK_WITH_AES_128_CBC_SHA = new TlsCipher(0x0090, TlsCipherEngineFactory.aes128(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.dhe(), TlsAuthFactory.psk(), TlsHashFactory.sha1(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_DHE_PSK_WITH_AES_128_CBC_SHA256 = new TlsCipher(0x00B2, TlsCipherEngineFactory.aes128(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.dhe(), TlsAuthFactory.psk(), TlsHashFactory.sha256(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_DHE_PSK_WITH_AES_128_CCM = new TlsCipher(0xC0A6, TlsCipherEngineFactory.aes128(), TlsCipherModeFactory.ccm(), TlsKeyExchangeFactory.dhe(), TlsAuthFactory.psk(), TlsHashFactory.sha256(), TLS_12, false);
    private static final TlsCipher TLS_DHE_PSK_WITH_AES_128_GCM_SHA256 = new TlsCipher(0x00AA, TlsCipherEngineFactory.aes128(), TlsCipherModeFactory.gcm(), TlsKeyExchangeFactory.dhe(), TlsAuthFactory.psk(), TlsHashFactory.sha256(), TLS_12, false);
    private static final TlsCipher TLS_DHE_PSK_WITH_AES_256_CBC_SHA = new TlsCipher(0x0091, TlsCipherEngineFactory.aes256(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.dhe(), TlsAuthFactory.psk(), TlsHashFactory.sha1(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_DHE_PSK_WITH_AES_256_CBC_SHA384 = new TlsCipher(0x00B3, TlsCipherEngineFactory.aes256(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.dhe(), TlsAuthFactory.psk(), TlsHashFactory.sha384(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_DHE_PSK_WITH_AES_256_CCM = new TlsCipher(0xC0A7, TlsCipherEngineFactory.aes256(), TlsCipherModeFactory.ccm(), TlsKeyExchangeFactory.dhe(), TlsAuthFactory.psk(), TlsHashFactory.sha256(), TLS_12, false);
    private static final TlsCipher TLS_DHE_PSK_WITH_AES_256_GCM_SHA384 = new TlsCipher(0x00AB, TlsCipherEngineFactory.aes256(), TlsCipherModeFactory.gcm(), TlsKeyExchangeFactory.dhe(), TlsAuthFactory.psk(), TlsHashFactory.sha384(), TLS_12, false);
    private static final TlsCipher TLS_DHE_PSK_WITH_ARIA_128_CBC_SHA256 = new TlsCipher(0xC066, TlsCipherEngineFactory.aria128(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.dhe(), TlsAuthFactory.psk(), TlsHashFactory.sha256(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_DHE_PSK_WITH_ARIA_128_GCM_SHA256 = new TlsCipher(0xC06C, TlsCipherEngineFactory.aria128(), TlsCipherModeFactory.gcm(), TlsKeyExchangeFactory.dhe(), TlsAuthFactory.psk(), TlsHashFactory.sha256(), TLS_12, false);
    private static final TlsCipher TLS_DHE_PSK_WITH_ARIA_256_CBC_SHA384 = new TlsCipher(0xC067, TlsCipherEngineFactory.aria256(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.dhe(), TlsAuthFactory.psk(), TlsHashFactory.sha384(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_DHE_PSK_WITH_ARIA_256_GCM_SHA384 = new TlsCipher(0xC06D, TlsCipherEngineFactory.aria256(), TlsCipherModeFactory.gcm(), TlsKeyExchangeFactory.dhe(), TlsAuthFactory.psk(), TlsHashFactory.sha384(), TLS_12, false);
    private static final TlsCipher TLS_DHE_PSK_WITH_CAMELLIA_128_CBC_SHA256 = new TlsCipher(0xC096, TlsCipherEngineFactory.camellia128(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.dhe(), TlsAuthFactory.psk(), TlsHashFactory.sha256(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_DHE_PSK_WITH_CAMELLIA_128_GCM_SHA256 = new TlsCipher(0xC090, TlsCipherEngineFactory.camellia128(), TlsCipherModeFactory.gcm(), TlsKeyExchangeFactory.dhe(), TlsAuthFactory.psk(), TlsHashFactory.sha256(), TLS_12, false);
    private static final TlsCipher TLS_DHE_PSK_WITH_CAMELLIA_256_CBC_SHA384 = new TlsCipher(0xC097, TlsCipherEngineFactory.camellia256(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.dhe(), TlsAuthFactory.psk(), TlsHashFactory.sha384(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_DHE_PSK_WITH_CAMELLIA_256_GCM_SHA384 = new TlsCipher(0xC091, TlsCipherEngineFactory.camellia256(), TlsCipherModeFactory.gcm(), TlsKeyExchangeFactory.dhe(), TlsAuthFactory.psk(), TlsHashFactory.sha384(), TLS_12, false);
    private static final TlsCipher TLS_DHE_PSK_WITH_CHACHA20_POLY1305_SHA256 = new TlsCipher(0xCCAD, TlsCipherEngineFactory.chaCha20(), TlsCipherModeFactory.poly1305(), TlsKeyExchangeFactory.dhe(), TlsAuthFactory.psk(), TlsHashFactory.sha256(), TLS_12, false);
    private static final TlsCipher TLS_DHE_PSK_WITH_NULL_SHA = new TlsCipher(0x002D, TlsCipherEngineFactory.none(), TlsCipherModeFactory.none(), TlsKeyExchangeFactory.dhe(), TlsAuthFactory.psk(), TlsHashFactory.sha1(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_DHE_PSK_WITH_NULL_SHA256 = new TlsCipher(0x00B4, TlsCipherEngineFactory.none(), TlsCipherModeFactory.none(), TlsKeyExchangeFactory.dhe(), TlsAuthFactory.psk(), TlsHashFactory.sha256(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_DHE_PSK_WITH_NULL_SHA384 = new TlsCipher(0x00B5, TlsCipherEngineFactory.none(), TlsCipherModeFactory.none(), TlsKeyExchangeFactory.dhe(), TlsAuthFactory.psk(), TlsHashFactory.sha384(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_DHE_PSK_WITH_RC4_128_SHA = new TlsCipher(0x008E, TlsCipherEngineFactory.rc4_128(), TlsCipherModeFactory.ctr(), TlsKeyExchangeFactory.dhe(), TlsAuthFactory.psk(), TlsHashFactory.sha1(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA = new TlsCipher(0x0014, TlsCipherEngineFactory.des40(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.dhe(), TlsAuthFactory.rsa(), TlsHashFactory.sha1(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA = new TlsCipher(0x0016, TlsCipherEngineFactory.desEde(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.dhe(), TlsAuthFactory.rsa(), TlsHashFactory.sha1(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_DHE_RSA_WITH_AES_128_CBC_SHA = new TlsCipher(0x0033, TlsCipherEngineFactory.aes128(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.dhe(), TlsAuthFactory.rsa(), TlsHashFactory.sha1(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_DHE_RSA_WITH_AES_128_CBC_SHA256 = new TlsCipher(0x0067, TlsCipherEngineFactory.aes128(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.dhe(), TlsAuthFactory.rsa(), TlsHashFactory.sha256(), TLS_12, false);
    private static final TlsCipher TLS_DHE_RSA_WITH_AES_128_CCM = new TlsCipher(0xC09E, TlsCipherEngineFactory.aes128(), TlsCipherModeFactory.ccm(), TlsKeyExchangeFactory.dhe(), TlsAuthFactory.rsa(), TlsHashFactory.sha256(), TLS_12, false);
    private static final TlsCipher TLS_DHE_RSA_WITH_AES_128_CCM_8 = new TlsCipher(0xC0A2, TlsCipherEngineFactory.aes128(), TlsCipherModeFactory.ccm8(), TlsKeyExchangeFactory.dhe(), TlsAuthFactory.rsa(), TlsHashFactory.sha256(), TLS_12, false);
    private static final TlsCipher TLS_DHE_RSA_WITH_AES_128_GCM_SHA256 = new TlsCipher(0x009E, TlsCipherEngineFactory.aes128(), TlsCipherModeFactory.gcm(), TlsKeyExchangeFactory.dhe(), TlsAuthFactory.rsa(), TlsHashFactory.sha256(), TLS_12, false);
    private static final TlsCipher TLS_DHE_RSA_WITH_AES_256_CBC_SHA = new TlsCipher(0x0039, TlsCipherEngineFactory.aes256(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.dhe(), TlsAuthFactory.rsa(), TlsHashFactory.sha1(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_DHE_RSA_WITH_AES_256_CBC_SHA256 = new TlsCipher(0x006B, TlsCipherEngineFactory.aes256(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.dhe(), TlsAuthFactory.rsa(), TlsHashFactory.sha256(), TLS_12, false);
    private static final TlsCipher TLS_DHE_RSA_WITH_AES_256_CCM = new TlsCipher(0xC09F, TlsCipherEngineFactory.aes256(), TlsCipherModeFactory.ccm(), TlsKeyExchangeFactory.dhe(), TlsAuthFactory.rsa(), TlsHashFactory.sha256(), TLS_12, false);
    private static final TlsCipher TLS_DHE_RSA_WITH_AES_256_CCM_8 = new TlsCipher(0xC0A3, TlsCipherEngineFactory.aes256(), TlsCipherModeFactory.ccm8(), TlsKeyExchangeFactory.dhe(), TlsAuthFactory.rsa(), TlsHashFactory.sha256(), TLS_12, false);
    private static final TlsCipher TLS_DHE_RSA_WITH_AES_256_GCM_SHA384 = new TlsCipher(0x009F, TlsCipherEngineFactory.aes256(), TlsCipherModeFactory.gcm(), TlsKeyExchangeFactory.dhe(), TlsAuthFactory.rsa(), TlsHashFactory.sha384(), TLS_12, false);
    private static final TlsCipher TLS_DHE_RSA_WITH_ARIA_128_CBC_SHA256 = new TlsCipher(0xC044, TlsCipherEngineFactory.aria128(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.dhe(), TlsAuthFactory.rsa(), TlsHashFactory.sha256(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_DHE_RSA_WITH_ARIA_128_GCM_SHA256 = new TlsCipher(0xC052, TlsCipherEngineFactory.aria128(), TlsCipherModeFactory.gcm(), TlsKeyExchangeFactory.dhe(), TlsAuthFactory.rsa(), TlsHashFactory.sha256(), TLS_12, false);
    private static final TlsCipher TLS_DHE_RSA_WITH_ARIA_256_CBC_SHA384 = new TlsCipher(0xC045, TlsCipherEngineFactory.aria256(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.dhe(), TlsAuthFactory.rsa(), TlsHashFactory.sha384(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_DHE_RSA_WITH_ARIA_256_GCM_SHA384 = new TlsCipher(0xC053, TlsCipherEngineFactory.aria256(), TlsCipherModeFactory.gcm(), TlsKeyExchangeFactory.dhe(), TlsAuthFactory.rsa(), TlsHashFactory.sha384(), TLS_12, false);
    private static final TlsCipher TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA = new TlsCipher(0x0045, TlsCipherEngineFactory.camellia128(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.dhe(), TlsAuthFactory.rsa(), TlsHashFactory.sha1(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA256 = new TlsCipher(0x00BE, TlsCipherEngineFactory.camellia128(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.dhe(), TlsAuthFactory.rsa(), TlsHashFactory.sha256(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_DHE_RSA_WITH_CAMELLIA_128_GCM_SHA256 = new TlsCipher(0xC07C, TlsCipherEngineFactory.camellia128(), TlsCipherModeFactory.gcm(), TlsKeyExchangeFactory.dhe(), TlsAuthFactory.rsa(), TlsHashFactory.sha256(), TLS_12, false);
    private static final TlsCipher TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA = new TlsCipher(0x0088, TlsCipherEngineFactory.camellia256(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.dhe(), TlsAuthFactory.rsa(), TlsHashFactory.sha1(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA256 = new TlsCipher(0x00C4, TlsCipherEngineFactory.camellia256(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.dhe(), TlsAuthFactory.rsa(), TlsHashFactory.sha256(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_DHE_RSA_WITH_CAMELLIA_256_GCM_SHA384 = new TlsCipher(0xC07D, TlsCipherEngineFactory.camellia256(), TlsCipherModeFactory.gcm(), TlsKeyExchangeFactory.dhe(), TlsAuthFactory.rsa(), TlsHashFactory.sha384(), TLS_12, false);
    private static final TlsCipher TLS_DHE_RSA_WITH_CHACHA20_POLY1305_SHA256 = new TlsCipher(0xCCAA, TlsCipherEngineFactory.chaCha20(), TlsCipherModeFactory.poly1305(), TlsKeyExchangeFactory.dhe(), TlsAuthFactory.rsa(), TlsHashFactory.sha256(), TLS_12, false);
    private static final TlsCipher TLS_DHE_RSA_WITH_DES_CBC_SHA = new TlsCipher(0x0015, TlsCipherEngineFactory.des40(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.dhe(), TlsAuthFactory.rsa(), TlsHashFactory.sha1(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_DHE_RSA_WITH_SEED_CBC_SHA = new TlsCipher(0x009A, TlsCipherEngineFactory.seed(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.dhe(), TlsAuthFactory.rsa(), TlsHashFactory.sha1(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_DH_RSA_EXPORT_WITH_DES40_CBC_SHA = new TlsCipher(0x000E, TlsCipherEngineFactory.des40(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.dh(), TlsAuthFactory.rsa(), TlsHashFactory.sha1(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_DH_RSA_WITH_3DES_EDE_CBC_SHA = new TlsCipher(0x0010, TlsCipherEngineFactory.desEde(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.dh(), TlsAuthFactory.rsa(), TlsHashFactory.sha1(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_DH_RSA_WITH_AES_128_CBC_SHA = new TlsCipher(0x0031, TlsCipherEngineFactory.aes128(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.dh(), TlsAuthFactory.rsa(), TlsHashFactory.sha1(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_DH_RSA_WITH_AES_128_CBC_SHA256 = new TlsCipher(0x003F, TlsCipherEngineFactory.aes128(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.dh(), TlsAuthFactory.rsa(), TlsHashFactory.sha256(), TLS_12, false);
    private static final TlsCipher TLS_DH_RSA_WITH_AES_128_GCM_SHA256 = new TlsCipher(0x00A0, TlsCipherEngineFactory.aes128(), TlsCipherModeFactory.gcm(), TlsKeyExchangeFactory.dh(), TlsAuthFactory.rsa(), TlsHashFactory.sha256(), TLS_12, false);
    private static final TlsCipher TLS_DH_RSA_WITH_AES_256_CBC_SHA = new TlsCipher(0x0037, TlsCipherEngineFactory.aes256(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.dh(), TlsAuthFactory.rsa(), TlsHashFactory.sha1(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_DH_RSA_WITH_AES_256_CBC_SHA256 = new TlsCipher(0x0069, TlsCipherEngineFactory.aes256(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.dh(), TlsAuthFactory.rsa(), TlsHashFactory.sha256(), TLS_12, false);
    private static final TlsCipher TLS_DH_RSA_WITH_AES_256_GCM_SHA384 = new TlsCipher(0x00A1, TlsCipherEngineFactory.aes256(), TlsCipherModeFactory.gcm(), TlsKeyExchangeFactory.dh(), TlsAuthFactory.rsa(), TlsHashFactory.sha384(), TLS_12, false);
    private static final TlsCipher TLS_DH_RSA_WITH_ARIA_128_CBC_SHA256 = new TlsCipher(0xC040, TlsCipherEngineFactory.aria128(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.dh(), TlsAuthFactory.rsa(), TlsHashFactory.sha256(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_DH_RSA_WITH_ARIA_128_GCM_SHA256 = new TlsCipher(0xC054, TlsCipherEngineFactory.aria128(), TlsCipherModeFactory.gcm(), TlsKeyExchangeFactory.dh(), TlsAuthFactory.rsa(), TlsHashFactory.sha256(), TLS_12, false);
    private static final TlsCipher TLS_DH_RSA_WITH_ARIA_256_CBC_SHA384 = new TlsCipher(0xC041, TlsCipherEngineFactory.aria256(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.dh(), TlsAuthFactory.rsa(), TlsHashFactory.sha384(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_DH_RSA_WITH_ARIA_256_GCM_SHA384 = new TlsCipher(0xC055, TlsCipherEngineFactory.aria256(), TlsCipherModeFactory.gcm(), TlsKeyExchangeFactory.dh(), TlsAuthFactory.rsa(), TlsHashFactory.sha384(), TLS_12, false);
    private static final TlsCipher TLS_DH_RSA_WITH_CAMELLIA_128_CBC_SHA = new TlsCipher(0x0043, TlsCipherEngineFactory.camellia128(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.dh(), TlsAuthFactory.rsa(), TlsHashFactory.sha1(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_DH_RSA_WITH_CAMELLIA_128_CBC_SHA256 = new TlsCipher(0x00BC, TlsCipherEngineFactory.camellia128(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.dh(), TlsAuthFactory.rsa(), TlsHashFactory.sha256(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_DH_RSA_WITH_CAMELLIA_128_GCM_SHA256 = new TlsCipher(0xC07E, TlsCipherEngineFactory.camellia128(), TlsCipherModeFactory.gcm(), TlsKeyExchangeFactory.dh(), TlsAuthFactory.rsa(), TlsHashFactory.sha256(), TLS_12, false);
    private static final TlsCipher TLS_DH_RSA_WITH_CAMELLIA_256_CBC_SHA = new TlsCipher(0x0086, TlsCipherEngineFactory.camellia256(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.dh(), TlsAuthFactory.rsa(), TlsHashFactory.sha1(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_DH_RSA_WITH_CAMELLIA_256_CBC_SHA256 = new TlsCipher(0x00C2, TlsCipherEngineFactory.camellia256(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.dh(), TlsAuthFactory.rsa(), TlsHashFactory.sha256(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_DH_RSA_WITH_CAMELLIA_256_GCM_SHA384 = new TlsCipher(0xC07F, TlsCipherEngineFactory.camellia256(), TlsCipherModeFactory.gcm(), TlsKeyExchangeFactory.dh(), TlsAuthFactory.rsa(), TlsHashFactory.sha384(), TLS_12, false);
    private static final TlsCipher TLS_DH_RSA_WITH_DES_CBC_SHA = new TlsCipher(0x000F, TlsCipherEngineFactory.des40(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.dh(), TlsAuthFactory.rsa(), TlsHashFactory.sha1(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_DH_RSA_WITH_SEED_CBC_SHA = new TlsCipher(0x0098, TlsCipherEngineFactory.seed(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.dh(), TlsAuthFactory.rsa(), TlsHashFactory.sha1(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_ECCPWD_WITH_AES_128_CCM_SHA256 = new TlsCipher(0xC0B2, TlsCipherEngineFactory.aes128(), TlsCipherModeFactory.ccm(), TlsKeyExchangeFactory.eccpwd(), TlsAuthFactory.eccpwd(), TlsHashFactory.sha256(), TLS_12, true);
    private static final TlsCipher TLS_ECCPWD_WITH_AES_128_GCM_SHA256 = new TlsCipher(0xC0B0, TlsCipherEngineFactory.aes128(), TlsCipherModeFactory.gcm(), TlsKeyExchangeFactory.eccpwd(), TlsAuthFactory.eccpwd(), TlsHashFactory.sha256(), TLS_12, false);
    private static final TlsCipher TLS_ECCPWD_WITH_AES_256_CCM_SHA384 = new TlsCipher(0xC0B3, TlsCipherEngineFactory.aes256(), TlsCipherModeFactory.ccm(), TlsKeyExchangeFactory.eccpwd(), TlsAuthFactory.eccpwd(), TlsHashFactory.sha384(), TLS_12, true);
    private static final TlsCipher TLS_ECCPWD_WITH_AES_256_GCM_SHA384 = new TlsCipher(0xC0B1, TlsCipherEngineFactory.aes256(), TlsCipherModeFactory.gcm(), TlsKeyExchangeFactory.eccpwd(), TlsAuthFactory.eccpwd(), TlsHashFactory.sha384(), TLS_12, false);
    private static final TlsCipher TLS_ECDH_ANON_WITH_3DES_EDE_CBC_SHA = new TlsCipher(0xC017, TlsCipherEngineFactory.desEde(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.ecdh(), TlsAuthFactory.anonymous(), TlsHashFactory.sha1(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_ECDH_ANON_WITH_AES_128_CBC_SHA = new TlsCipher(0xC018, TlsCipherEngineFactory.aes128(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.ecdh(), TlsAuthFactory.anonymous(), TlsHashFactory.sha1(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_ECDH_ANON_WITH_AES_256_CBC_SHA = new TlsCipher(0xC019, TlsCipherEngineFactory.aes256(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.ecdh(), TlsAuthFactory.anonymous(), TlsHashFactory.sha1(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_ECDH_ANON_WITH_NULL_SHA = new TlsCipher(0xC015, TlsCipherEngineFactory.none(), TlsCipherModeFactory.none(), TlsKeyExchangeFactory.ecdh(), TlsAuthFactory.anonymous(), TlsHashFactory.sha1(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_ECDH_ANON_WITH_RC4_128_SHA = new TlsCipher(0xC016, TlsCipherEngineFactory.rc4_128(), TlsCipherModeFactory.ctr(), TlsKeyExchangeFactory.ecdh(), TlsAuthFactory.anonymous(), TlsHashFactory.sha1(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA = new TlsCipher(0xC003, TlsCipherEngineFactory.desEde(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.ecdh(), TlsAuthFactory.ecdsa(), TlsHashFactory.sha1(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA = new TlsCipher(0xC004, TlsCipherEngineFactory.aes128(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.ecdh(), TlsAuthFactory.ecdsa(), TlsHashFactory.sha1(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256 = new TlsCipher(0xC025, TlsCipherEngineFactory.aes128(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.ecdh(), TlsAuthFactory.ecdsa(), TlsHashFactory.sha256(), TLS_12, false);
    private static final TlsCipher TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256 = new TlsCipher(0xC02D, TlsCipherEngineFactory.aes128(), TlsCipherModeFactory.gcm(), TlsKeyExchangeFactory.ecdh(), TlsAuthFactory.ecdsa(), TlsHashFactory.sha256(), TLS_12, false);
    private static final TlsCipher TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA = new TlsCipher(0xC005, TlsCipherEngineFactory.aes256(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.ecdh(), TlsAuthFactory.ecdsa(), TlsHashFactory.sha1(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384 = new TlsCipher(0xC026, TlsCipherEngineFactory.aes256(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.ecdh(), TlsAuthFactory.ecdsa(), TlsHashFactory.sha384(), TLS_12, false);
    private static final TlsCipher TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384 = new TlsCipher(0xC02E, TlsCipherEngineFactory.aes256(), TlsCipherModeFactory.gcm(), TlsKeyExchangeFactory.ecdh(), TlsAuthFactory.ecdsa(), TlsHashFactory.sha384(), TLS_12, false);
    private static final TlsCipher TLS_ECDH_ECDSA_WITH_ARIA_128_CBC_SHA256 = new TlsCipher(0xC04A, TlsCipherEngineFactory.aria128(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.ecdh(), TlsAuthFactory.ecdsa(), TlsHashFactory.sha256(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_ECDH_ECDSA_WITH_ARIA_128_GCM_SHA256 = new TlsCipher(0xC05E, TlsCipherEngineFactory.aria128(), TlsCipherModeFactory.gcm(), TlsKeyExchangeFactory.ecdh(), TlsAuthFactory.ecdsa(), TlsHashFactory.sha256(), TLS_12, false);
    private static final TlsCipher TLS_ECDH_ECDSA_WITH_ARIA_256_CBC_SHA384 = new TlsCipher(0xC04B, TlsCipherEngineFactory.aria256(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.ecdh(), TlsAuthFactory.ecdsa(), TlsHashFactory.sha384(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_ECDH_ECDSA_WITH_ARIA_256_GCM_SHA384 = new TlsCipher(0xC05F, TlsCipherEngineFactory.aria256(), TlsCipherModeFactory.gcm(), TlsKeyExchangeFactory.ecdh(), TlsAuthFactory.ecdsa(), TlsHashFactory.sha384(), TLS_12, false);
    private static final TlsCipher TLS_ECDH_ECDSA_WITH_CAMELLIA_128_CBC_SHA256 = new TlsCipher(0xC074, TlsCipherEngineFactory.camellia128(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.ecdh(), TlsAuthFactory.ecdsa(), TlsHashFactory.sha256(), TLS_12, false);
    private static final TlsCipher TLS_ECDH_ECDSA_WITH_CAMELLIA_128_GCM_SHA256 = new TlsCipher(0xC088, TlsCipherEngineFactory.camellia128(), TlsCipherModeFactory.gcm(), TlsKeyExchangeFactory.ecdh(), TlsAuthFactory.ecdsa(), TlsHashFactory.sha256(), TLS_12, false);
    private static final TlsCipher TLS_ECDH_ECDSA_WITH_CAMELLIA_256_CBC_SHA384 = new TlsCipher(0xC075, TlsCipherEngineFactory.camellia256(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.ecdh(), TlsAuthFactory.ecdsa(), TlsHashFactory.sha384(), TLS_12, false);
    private static final TlsCipher TLS_ECDH_ECDSA_WITH_CAMELLIA_256_GCM_SHA384 = new TlsCipher(0xC089, TlsCipherEngineFactory.camellia256(), TlsCipherModeFactory.gcm(), TlsKeyExchangeFactory.ecdh(), TlsAuthFactory.ecdsa(), TlsHashFactory.sha384(), TLS_12, false);
    private static final TlsCipher TLS_ECDH_ECDSA_WITH_NULL_SHA = new TlsCipher(0xC001, TlsCipherEngineFactory.none(), TlsCipherModeFactory.none(), TlsKeyExchangeFactory.ecdh(), TlsAuthFactory.ecdsa(), TlsHashFactory.sha1(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_ECDH_ECDSA_WITH_RC4_128_SHA = new TlsCipher(0xC002, TlsCipherEngineFactory.rc4_128(), TlsCipherModeFactory.ctr(), TlsKeyExchangeFactory.ecdh(), TlsAuthFactory.ecdsa(), TlsHashFactory.sha1(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA = new TlsCipher(0xC008, TlsCipherEngineFactory.desEde(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.ecdhe(), TlsAuthFactory.ecdsa(), TlsHashFactory.sha1(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA = new TlsCipher(0xC009, TlsCipherEngineFactory.aes128(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.ecdhe(), TlsAuthFactory.ecdsa(), TlsHashFactory.sha1(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256 = new TlsCipher(0xC023, TlsCipherEngineFactory.aes128(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.ecdhe(), TlsAuthFactory.ecdsa(), TlsHashFactory.sha256(), TLS_12, false);
    private static final TlsCipher TLS_ECDHE_ECDSA_WITH_AES_128_CCM = new TlsCipher(0xC0AC, TlsCipherEngineFactory.aes128(), TlsCipherModeFactory.ccm(), TlsKeyExchangeFactory.ecdhe(), TlsAuthFactory.ecdsa(), TlsHashFactory.sha256(), TLS_12, true);
    private static final TlsCipher TLS_ECDHE_ECDSA_WITH_AES_128_CCM_8 = new TlsCipher(0xC0AE, TlsCipherEngineFactory.aes128(), TlsCipherModeFactory.ccm8(), TlsKeyExchangeFactory.ecdhe(), TlsAuthFactory.ecdsa(), TlsHashFactory.sha256(), TLS_12, true);
    private static final TlsCipher TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256 = new TlsCipher(0xC02B, TlsCipherEngineFactory.aes128(), TlsCipherModeFactory.gcm(), TlsKeyExchangeFactory.ecdhe(), TlsAuthFactory.ecdsa(), TlsHashFactory.sha256(), TLS_12, false);
    private static final TlsCipher TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA = new TlsCipher(0xC00A, TlsCipherEngineFactory.aes256(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.ecdhe(), TlsAuthFactory.ecdsa(), TlsHashFactory.sha1(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384 = new TlsCipher(0xC024, TlsCipherEngineFactory.aes256(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.ecdhe(), TlsAuthFactory.ecdsa(), TlsHashFactory.sha384(), TLS_12, false);
    private static final TlsCipher TLS_ECDHE_ECDSA_WITH_AES_256_CCM = new TlsCipher(0xC0AD, TlsCipherEngineFactory.aes256(), TlsCipherModeFactory.ccm(), TlsKeyExchangeFactory.ecdhe(), TlsAuthFactory.ecdsa(), TlsHashFactory.sha256(), TLS_12, true);
    private static final TlsCipher TLS_ECDHE_ECDSA_WITH_AES_256_CCM_8 = new TlsCipher(0xC0AF, TlsCipherEngineFactory.aes256(), TlsCipherModeFactory.ccm8(), TlsKeyExchangeFactory.ecdhe(), TlsAuthFactory.ecdsa(), TlsHashFactory.sha256(), TLS_12, true);
    private static final TlsCipher TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384 = new TlsCipher(0xC02C, TlsCipherEngineFactory.aes256(), TlsCipherModeFactory.gcm(), TlsKeyExchangeFactory.ecdhe(), TlsAuthFactory.ecdsa(), TlsHashFactory.sha384(), TLS_12, false);
    private static final TlsCipher TLS_ECDHE_ECDSA_WITH_ARIA_128_CBC_SHA256 = new TlsCipher(0xC048, TlsCipherEngineFactory.aria128(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.ecdhe(), TlsAuthFactory.ecdsa(), TlsHashFactory.sha256(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_ECDHE_ECDSA_WITH_ARIA_128_GCM_SHA256 = new TlsCipher(0xC05C, TlsCipherEngineFactory.aria128(), TlsCipherModeFactory.gcm(), TlsKeyExchangeFactory.ecdhe(), TlsAuthFactory.ecdsa(), TlsHashFactory.sha256(), TLS_12, false);
    private static final TlsCipher TLS_ECDHE_ECDSA_WITH_ARIA_256_CBC_SHA384 = new TlsCipher(0xC049, TlsCipherEngineFactory.aria256(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.ecdhe(), TlsAuthFactory.ecdsa(), TlsHashFactory.sha384(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_ECDHE_ECDSA_WITH_ARIA_256_GCM_SHA384 = new TlsCipher(0xC05D, TlsCipherEngineFactory.aria256(), TlsCipherModeFactory.gcm(), TlsKeyExchangeFactory.ecdhe(), TlsAuthFactory.ecdsa(), TlsHashFactory.sha384(), TLS_12, false);
    private static final TlsCipher TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_CBC_SHA256 = new TlsCipher(0xC072, TlsCipherEngineFactory.camellia128(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.ecdhe(), TlsAuthFactory.ecdsa(), TlsHashFactory.sha256(), TLS_12, false);
    private static final TlsCipher TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_GCM_SHA256 = new TlsCipher(0xC086, TlsCipherEngineFactory.camellia128(), TlsCipherModeFactory.gcm(), TlsKeyExchangeFactory.ecdhe(), TlsAuthFactory.ecdsa(), TlsHashFactory.sha256(), TLS_12, false);
    private static final TlsCipher TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_CBC_SHA384 = new TlsCipher(0xC073, TlsCipherEngineFactory.camellia256(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.ecdhe(), TlsAuthFactory.ecdsa(), TlsHashFactory.sha384(), TLS_12, false);
    private static final TlsCipher TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_GCM_SHA384 = new TlsCipher(0xC087, TlsCipherEngineFactory.camellia256(), TlsCipherModeFactory.gcm(), TlsKeyExchangeFactory.ecdhe(), TlsAuthFactory.ecdsa(), TlsHashFactory.sha384(), TLS_12, false);
    private static final TlsCipher TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256 = new TlsCipher(0xCCA9, TlsCipherEngineFactory.chaCha20(), TlsCipherModeFactory.poly1305(), TlsKeyExchangeFactory.ecdhe(), TlsAuthFactory.ecdsa(), TlsHashFactory.sha256(), TLS_12, false);
    private static final TlsCipher TLS_ECDHE_ECDSA_WITH_NULL_SHA = new TlsCipher(0xC006, TlsCipherEngineFactory.none(), TlsCipherModeFactory.none(), TlsKeyExchangeFactory.ecdhe(), TlsAuthFactory.ecdsa(), TlsHashFactory.sha1(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_ECDHE_ECDSA_WITH_RC4_128_SHA = new TlsCipher(0xC007, TlsCipherEngineFactory.rc4_128(), TlsCipherModeFactory.ctr(), TlsKeyExchangeFactory.ecdhe(), TlsAuthFactory.ecdsa(), TlsHashFactory.sha1(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_ECDHE_PSK_WITH_3DES_EDE_CBC_SHA = new TlsCipher(0xC034, TlsCipherEngineFactory.desEde(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.ecdhe(), TlsAuthFactory.psk(), TlsHashFactory.sha1(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA = new TlsCipher(0xC035, TlsCipherEngineFactory.aes128(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.ecdhe(), TlsAuthFactory.psk(), TlsHashFactory.sha1(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA256 = new TlsCipher(0xC037, TlsCipherEngineFactory.aes128(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.ecdhe(), TlsAuthFactory.psk(), TlsHashFactory.sha256(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_ECDHE_PSK_WITH_AES_128_CCM_8_SHA256 = new TlsCipher(0xD003, TlsCipherEngineFactory.aes128(), TlsCipherModeFactory.ccm8(), TlsKeyExchangeFactory.ecdhe(), TlsAuthFactory.psk(), TlsHashFactory.sha256(), TLS_12, true);
    private static final TlsCipher TLS_ECDHE_PSK_WITH_AES_128_CCM_SHA256 = new TlsCipher(0xD005, TlsCipherEngineFactory.aes128(), TlsCipherModeFactory.ccm(), TlsKeyExchangeFactory.ecdhe(), TlsAuthFactory.psk(), TlsHashFactory.sha256(), TLS_12, true);
    private static final TlsCipher TLS_ECDHE_PSK_WITH_AES_128_GCM_SHA256 = new TlsCipher(0xD001, TlsCipherEngineFactory.aes128(), TlsCipherModeFactory.gcm(), TlsKeyExchangeFactory.ecdhe(), TlsAuthFactory.psk(), TlsHashFactory.sha256(), TLS_12, false);
    private static final TlsCipher TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA = new TlsCipher(0xC036, TlsCipherEngineFactory.aes256(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.ecdhe(), TlsAuthFactory.psk(), TlsHashFactory.sha1(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA384 = new TlsCipher(0xC038, TlsCipherEngineFactory.aes256(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.ecdhe(), TlsAuthFactory.psk(), TlsHashFactory.sha384(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_ECDHE_PSK_WITH_AES_256_GCM_SHA384 = new TlsCipher(0xD002, TlsCipherEngineFactory.aes256(), TlsCipherModeFactory.gcm(), TlsKeyExchangeFactory.ecdhe(), TlsAuthFactory.psk(), TlsHashFactory.sha384(), TLS_12, false);
    private static final TlsCipher TLS_ECDHE_PSK_WITH_ARIA_128_CBC_SHA256 = new TlsCipher(0xC070, TlsCipherEngineFactory.aria128(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.ecdhe(), TlsAuthFactory.psk(), TlsHashFactory.sha256(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_ECDHE_PSK_WITH_ARIA_256_CBC_SHA384 = new TlsCipher(0xC071, TlsCipherEngineFactory.aria256(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.ecdhe(), TlsAuthFactory.psk(), TlsHashFactory.sha384(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_ECDHE_PSK_WITH_CAMELLIA_128_CBC_SHA256 = new TlsCipher(0xC09A, TlsCipherEngineFactory.camellia128(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.ecdhe(), TlsAuthFactory.psk(), TlsHashFactory.sha256(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_ECDHE_PSK_WITH_CAMELLIA_256_CBC_SHA384 = new TlsCipher(0xC09B, TlsCipherEngineFactory.camellia256(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.ecdhe(), TlsAuthFactory.psk(), TlsHashFactory.sha384(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_ECDHE_PSK_WITH_CHACHA20_POLY1305_SHA256 = new TlsCipher(0xCCAC, TlsCipherEngineFactory.chaCha20(), TlsCipherModeFactory.poly1305(), TlsKeyExchangeFactory.ecdhe(), TlsAuthFactory.psk(), TlsHashFactory.sha256(), TLS_12, false);
    private static final TlsCipher TLS_ECDHE_PSK_WITH_NULL_SHA = new TlsCipher(0xC039, TlsCipherEngineFactory.none(), TlsCipherModeFactory.none(), TlsKeyExchangeFactory.ecdhe(), TlsAuthFactory.psk(), TlsHashFactory.sha1(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_ECDHE_PSK_WITH_NULL_SHA256 = new TlsCipher(0xC03A, TlsCipherEngineFactory.none(), TlsCipherModeFactory.none(), TlsKeyExchangeFactory.ecdhe(), TlsAuthFactory.psk(), TlsHashFactory.sha256(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_ECDHE_PSK_WITH_NULL_SHA384 = new TlsCipher(0xC03B, TlsCipherEngineFactory.none(), TlsCipherModeFactory.none(), TlsKeyExchangeFactory.ecdhe(), TlsAuthFactory.psk(), TlsHashFactory.sha384(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_ECDHE_PSK_WITH_RC4_128_SHA = new TlsCipher(0xC033, TlsCipherEngineFactory.rc4_128(), TlsCipherModeFactory.ctr(), TlsKeyExchangeFactory.ecdhe(), TlsAuthFactory.psk(), TlsHashFactory.sha1(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA = new TlsCipher(0xC012, TlsCipherEngineFactory.desEde(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.ecdhe(), TlsAuthFactory.rsa(), TlsHashFactory.sha1(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA = new TlsCipher(0xC013, TlsCipherEngineFactory.aes128(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.ecdhe(), TlsAuthFactory.rsa(), TlsHashFactory.sha1(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256 = new TlsCipher(0xC027, TlsCipherEngineFactory.aes128(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.ecdhe(), TlsAuthFactory.rsa(), TlsHashFactory.sha256(), TLS_12, false);
    private static final TlsCipher TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 = new TlsCipher(0xC02F, TlsCipherEngineFactory.aes128(), TlsCipherModeFactory.gcm(), TlsKeyExchangeFactory.ecdhe(), TlsAuthFactory.rsa(), TlsHashFactory.sha256(), TLS_12, true);
    private static final TlsCipher TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA = new TlsCipher(0xC014, TlsCipherEngineFactory.aes256(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.ecdhe(), TlsAuthFactory.rsa(), TlsHashFactory.sha1(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384 = new TlsCipher(0xC028, TlsCipherEngineFactory.aes256(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.ecdhe(), TlsAuthFactory.rsa(), TlsHashFactory.sha384(), TLS_12, false);
    private static final TlsCipher TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384 = new TlsCipher(0xC030, TlsCipherEngineFactory.aes256(), TlsCipherModeFactory.gcm(), TlsKeyExchangeFactory.ecdhe(), TlsAuthFactory.rsa(), TlsHashFactory.sha384(), TLS_12, true);
    private static final TlsCipher TLS_ECDHE_RSA_WITH_ARIA_128_CBC_SHA256 = new TlsCipher(0xC04C, TlsCipherEngineFactory.aria128(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.ecdhe(), TlsAuthFactory.rsa(), TlsHashFactory.sha256(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_ECDHE_RSA_WITH_ARIA_128_GCM_SHA256 = new TlsCipher(0xC060, TlsCipherEngineFactory.aria128(), TlsCipherModeFactory.gcm(), TlsKeyExchangeFactory.ecdhe(), TlsAuthFactory.rsa(), TlsHashFactory.sha256(), TLS_12, true);
    private static final TlsCipher TLS_ECDHE_RSA_WITH_ARIA_256_CBC_SHA384 = new TlsCipher(0xC04D, TlsCipherEngineFactory.aria256(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.ecdhe(), TlsAuthFactory.rsa(), TlsHashFactory.sha384(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_ECDHE_RSA_WITH_ARIA_256_GCM_SHA384 = new TlsCipher(0xC061, TlsCipherEngineFactory.aria256(), TlsCipherModeFactory.gcm(), TlsKeyExchangeFactory.ecdhe(), TlsAuthFactory.rsa(), TlsHashFactory.sha384(), TLS_12, true);
    private static final TlsCipher TLS_ECDHE_RSA_WITH_CAMELLIA_128_CBC_SHA256 = new TlsCipher(0xC076, TlsCipherEngineFactory.camellia128(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.ecdhe(), TlsAuthFactory.rsa(), TlsHashFactory.sha256(), TLS_12, false);
    private static final TlsCipher TLS_ECDHE_RSA_WITH_CAMELLIA_128_GCM_SHA256 = new TlsCipher(0xC08A, TlsCipherEngineFactory.camellia128(), TlsCipherModeFactory.gcm(), TlsKeyExchangeFactory.ecdhe(), TlsAuthFactory.rsa(), TlsHashFactory.sha256(), TLS_12, true);
    private static final TlsCipher TLS_ECDHE_RSA_WITH_CAMELLIA_256_CBC_SHA384 = new TlsCipher(0xC077, TlsCipherEngineFactory.camellia256(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.ecdhe(), TlsAuthFactory.rsa(), TlsHashFactory.sha384(), TLS_12, false);
    private static final TlsCipher TLS_ECDHE_RSA_WITH_CAMELLIA_256_GCM_SHA384 = new TlsCipher(0xC08B, TlsCipherEngineFactory.camellia256(), TlsCipherModeFactory.gcm(), TlsKeyExchangeFactory.ecdhe(), TlsAuthFactory.rsa(), TlsHashFactory.sha384(), TLS_12, true);
    private static final TlsCipher TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256 = new TlsCipher(0xCCA8, TlsCipherEngineFactory.chaCha20(), TlsCipherModeFactory.poly1305(), TlsKeyExchangeFactory.ecdhe(), TlsAuthFactory.rsa(), TlsHashFactory.sha256(), TLS_12, true);
    private static final TlsCipher TLS_ECDHE_RSA_WITH_NULL_SHA = new TlsCipher(0xC010, TlsCipherEngineFactory.none(), TlsCipherModeFactory.none(), TlsKeyExchangeFactory.ecdhe(), TlsAuthFactory.rsa(), TlsHashFactory.sha1(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_ECDHE_RSA_WITH_RC4_128_SHA = new TlsCipher(0xC011, TlsCipherEngineFactory.rc4_128(), TlsCipherModeFactory.ctr(), TlsKeyExchangeFactory.ecdhe(), TlsAuthFactory.rsa(), TlsHashFactory.sha1(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA = new TlsCipher(0xC00D, TlsCipherEngineFactory.desEde(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.ecdh(), TlsAuthFactory.rsa(), TlsHashFactory.sha1(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_ECDH_RSA_WITH_AES_128_CBC_SHA = new TlsCipher(0xC00E, TlsCipherEngineFactory.aes128(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.ecdh(), TlsAuthFactory.rsa(), TlsHashFactory.sha1(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256 = new TlsCipher(0xC029, TlsCipherEngineFactory.aes128(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.ecdh(), TlsAuthFactory.rsa(), TlsHashFactory.sha256(), TLS_12, false);
    private static final TlsCipher TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256 = new TlsCipher(0xC031, TlsCipherEngineFactory.aes128(), TlsCipherModeFactory.gcm(), TlsKeyExchangeFactory.ecdh(), TlsAuthFactory.rsa(), TlsHashFactory.sha256(), TLS_12, false);
    private static final TlsCipher TLS_ECDH_RSA_WITH_AES_256_CBC_SHA = new TlsCipher(0xC00F, TlsCipherEngineFactory.aes256(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.ecdh(), TlsAuthFactory.rsa(), TlsHashFactory.sha1(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384 = new TlsCipher(0xC02A, TlsCipherEngineFactory.aes256(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.ecdh(), TlsAuthFactory.rsa(), TlsHashFactory.sha384(), TLS_12, false);
    private static final TlsCipher TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384 = new TlsCipher(0xC032, TlsCipherEngineFactory.aes256(), TlsCipherModeFactory.gcm(), TlsKeyExchangeFactory.ecdh(), TlsAuthFactory.rsa(), TlsHashFactory.sha384(), TLS_12, false);
    private static final TlsCipher TLS_ECDH_RSA_WITH_ARIA_128_CBC_SHA256 = new TlsCipher(0xC04E, TlsCipherEngineFactory.aria128(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.ecdh(), TlsAuthFactory.rsa(), TlsHashFactory.sha256(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_ECDH_RSA_WITH_ARIA_128_GCM_SHA256 = new TlsCipher(0xC062, TlsCipherEngineFactory.aria128(), TlsCipherModeFactory.gcm(), TlsKeyExchangeFactory.ecdh(), TlsAuthFactory.rsa(), TlsHashFactory.sha256(), TLS_12, false);
    private static final TlsCipher TLS_ECDH_RSA_WITH_ARIA_256_CBC_SHA384 = new TlsCipher(0xC04F, TlsCipherEngineFactory.aria256(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.ecdh(), TlsAuthFactory.rsa(), TlsHashFactory.sha384(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_ECDH_RSA_WITH_ARIA_256_GCM_SHA384 = new TlsCipher(0xC063, TlsCipherEngineFactory.aria256(), TlsCipherModeFactory.gcm(), TlsKeyExchangeFactory.ecdh(), TlsAuthFactory.rsa(), TlsHashFactory.sha384(), TLS_12, false);
    private static final TlsCipher TLS_ECDH_RSA_WITH_CAMELLIA_128_CBC_SHA256 = new TlsCipher(0xC078, TlsCipherEngineFactory.camellia128(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.ecdh(), TlsAuthFactory.rsa(), TlsHashFactory.sha256(), TLS_12, false);
    private static final TlsCipher TLS_ECDH_RSA_WITH_CAMELLIA_128_GCM_SHA256 = new TlsCipher(0xC08C, TlsCipherEngineFactory.camellia128(), TlsCipherModeFactory.gcm(), TlsKeyExchangeFactory.ecdh(), TlsAuthFactory.rsa(), TlsHashFactory.sha256(), TLS_12, false);
    private static final TlsCipher TLS_ECDH_RSA_WITH_CAMELLIA_256_CBC_SHA384 = new TlsCipher(0xC079, TlsCipherEngineFactory.camellia256(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.ecdh(), TlsAuthFactory.rsa(), TlsHashFactory.sha384(), TLS_12, false);
    private static final TlsCipher TLS_ECDH_RSA_WITH_CAMELLIA_256_GCM_SHA384 = new TlsCipher(0xC08D, TlsCipherEngineFactory.camellia256(), TlsCipherModeFactory.gcm(), TlsKeyExchangeFactory.ecdh(), TlsAuthFactory.rsa(), TlsHashFactory.sha384(), TLS_12, false);
    private static final TlsCipher TLS_ECDH_RSA_WITH_NULL_SHA = new TlsCipher(0xC00B, TlsCipherEngineFactory.none(), TlsCipherModeFactory.none(), TlsKeyExchangeFactory.ecdh(), TlsAuthFactory.rsa(), TlsHashFactory.sha1(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_ECDH_RSA_WITH_RC4_128_SHA = new TlsCipher(0xC00C, TlsCipherEngineFactory.rc4_128(), TlsCipherModeFactory.ctr(), TlsKeyExchangeFactory.ecdh(), TlsAuthFactory.rsa(), TlsHashFactory.sha1(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_GOSTR341112_256_WITH_28147_CNT_IMIT = new TlsCipher(0xC102, TlsCipherEngineFactory.kuznyechik(), TlsCipherModeFactory.cntImit(), TlsKeyExchangeFactory.gostr256(), TlsAuthFactory.gostr256(), TlsHashFactory.gostr341112_256(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_GOSTR341112_256_WITH_KUZNYECHIK_CTR_OMAC = new TlsCipher(0xC100, TlsCipherEngineFactory.kuznyechik(), TlsCipherModeFactory.ctrOmac(), TlsKeyExchangeFactory.gostr256(), TlsAuthFactory.gostr256(), TlsHashFactory.gostr341112_256(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_GOSTR341112_256_WITH_KUZNYECHIK_MGM_L = new TlsCipher(0xC103, TlsCipherEngineFactory.kuznyechik(), TlsCipherModeFactory.mgmLight(), TlsKeyExchangeFactory.ecdh(), TlsAuthFactory.contextual(), TlsHashFactory.none(), TLS_12, false);
    private static final TlsCipher TLS_GOSTR341112_256_WITH_KUZNYECHIK_MGM_S = new TlsCipher(0xC105, TlsCipherEngineFactory.kuznyechik(), TlsCipherModeFactory.mgmStrong(), TlsKeyExchangeFactory.ecdh(), TlsAuthFactory.contextual(), TlsHashFactory.none(), TLS_12, false);
    private static final TlsCipher TLS_GOSTR341112_256_WITH_MAGMA_CTR_OMAC = new TlsCipher(0xC101, TlsCipherEngineFactory.magma(), TlsCipherModeFactory.ctrOmac(), TlsKeyExchangeFactory.gostr256(), TlsAuthFactory.gostr256(), TlsHashFactory.gostr341112_256(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_GOSTR341112_256_WITH_MAGMA_MGM_L = new TlsCipher(0xC104, TlsCipherEngineFactory.magma(), TlsCipherModeFactory.mgmLight(), TlsKeyExchangeFactory.ecdh(), TlsAuthFactory.contextual(), TlsHashFactory.none(), TLS_12, false);
    private static final TlsCipher TLS_GOSTR341112_256_WITH_MAGMA_MGM_S = new TlsCipher(0xC106, TlsCipherEngineFactory.magma(), TlsCipherModeFactory.mgmStrong(), TlsKeyExchangeFactory.ecdh(), TlsAuthFactory.contextual(), TlsHashFactory.none(), TLS_12, false);
    private static final TlsCipher TLS_KRB5_EXPORT_WITH_DES_CBC_40_MD5 = new TlsCipher(0x0029, TlsCipherEngineFactory.des40(), TlsCipherModeFactory.cbcExport(), TlsKeyExchangeFactory.krb5(), TlsAuthFactory.krb5(), TlsHashFactory.md5(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_KRB5_EXPORT_WITH_DES_CBC_40_SHA = new TlsCipher(0x0026, TlsCipherEngineFactory.des40(), TlsCipherModeFactory.cbcExport(), TlsKeyExchangeFactory.krb5(), TlsAuthFactory.krb5(), TlsHashFactory.sha1(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_KRB5_EXPORT_WITH_RC2_CBC_40_MD5 = new TlsCipher(0x002A, TlsCipherEngineFactory.rc2_40(), TlsCipherModeFactory.cbcExport(), TlsKeyExchangeFactory.krb5(), TlsAuthFactory.krb5(), TlsHashFactory.md5(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_KRB5_EXPORT_WITH_RC2_CBC_40_SHA = new TlsCipher(0x0027, TlsCipherEngineFactory.rc2_40(), TlsCipherModeFactory.cbcExport(), TlsKeyExchangeFactory.krb5(), TlsAuthFactory.krb5(), TlsHashFactory.sha1(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_KRB5_EXPORT_WITH_RC4_40_MD5 = new TlsCipher(0x002B, TlsCipherEngineFactory.rc4_40(), TlsCipherModeFactory.ctr(), TlsKeyExchangeFactory.krb5(), TlsAuthFactory.krb5(), TlsHashFactory.md5(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_KRB5_EXPORT_WITH_RC4_40_SHA = new TlsCipher(0x0028, TlsCipherEngineFactory.rc4_40(), TlsCipherModeFactory.ctr(), TlsKeyExchangeFactory.krb5(), TlsAuthFactory.krb5(), TlsHashFactory.sha1(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_KRB5_WITH_3DES_EDE_CBC_MD5 = new TlsCipher(0x0023, TlsCipherEngineFactory.desEde(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.krb5(), TlsAuthFactory.krb5(), TlsHashFactory.md5(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_KRB5_WITH_3DES_EDE_CBC_SHA = new TlsCipher(0x001F, TlsCipherEngineFactory.desEde(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.krb5(), TlsAuthFactory.krb5(), TlsHashFactory.sha1(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_KRB5_WITH_DES_CBC_MD5 = new TlsCipher(0x0022, TlsCipherEngineFactory.des40(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.krb5(), TlsAuthFactory.krb5(), TlsHashFactory.md5(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_KRB5_WITH_DES_CBC_SHA = new TlsCipher(0x001E, TlsCipherEngineFactory.des40(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.krb5(), TlsAuthFactory.krb5(), TlsHashFactory.sha1(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_KRB5_WITH_IDEA_CBC_MD5 = new TlsCipher(0x0025, TlsCipherEngineFactory.idea(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.krb5(), TlsAuthFactory.krb5(), TlsHashFactory.md5(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_KRB5_WITH_IDEA_CBC_SHA = new TlsCipher(0x0021, TlsCipherEngineFactory.idea(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.krb5(), TlsAuthFactory.krb5(), TlsHashFactory.sha1(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_KRB5_WITH_RC4_128_MD5 = new TlsCipher(0x0024, TlsCipherEngineFactory.rc4_128(), TlsCipherModeFactory.ctr(), TlsKeyExchangeFactory.krb5(), TlsAuthFactory.krb5(), TlsHashFactory.md5(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_KRB5_WITH_RC4_128_SHA = new TlsCipher(0x0020, TlsCipherEngineFactory.rc4_128(), TlsCipherModeFactory.ctr(), TlsKeyExchangeFactory.krb5(), TlsAuthFactory.krb5(), TlsHashFactory.sha1(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_NULL_WITH_NULL_NULL = new TlsCipher(0x0000, TlsCipherEngineFactory.none(), TlsCipherModeFactory.none(), TlsKeyExchangeFactory.contextual(), TlsAuthFactory.contextual(), TlsHashFactory.none(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_PSK_DHE_WITH_AES_128_CCM_8 = new TlsCipher(0xC0AA, TlsCipherEngineFactory.aes128(), TlsCipherModeFactory.ccm8(), TlsKeyExchangeFactory.dhe(), TlsAuthFactory.psk(), TlsHashFactory.sha256(), TLS_12, false);
    private static final TlsCipher TLS_PSK_DHE_WITH_AES_256_CCM_8 = new TlsCipher(0xC0AB, TlsCipherEngineFactory.aes256(), TlsCipherModeFactory.ccm8(), TlsKeyExchangeFactory.dhe(), TlsAuthFactory.psk(), TlsHashFactory.sha256(), TLS_12, false);
    private static final TlsCipher TLS_PSK_WITH_3DES_EDE_CBC_SHA = new TlsCipher(0x008B, TlsCipherEngineFactory.desEde(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.psk(), TlsAuthFactory.psk(), TlsHashFactory.sha1(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_PSK_WITH_AES_128_CBC_SHA = new TlsCipher(0x008C, TlsCipherEngineFactory.aes128(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.psk(), TlsAuthFactory.psk(), TlsHashFactory.sha1(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_PSK_WITH_AES_128_CBC_SHA256 = new TlsCipher(0x00AE, TlsCipherEngineFactory.aes128(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.psk(), TlsAuthFactory.psk(), TlsHashFactory.sha256(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_PSK_WITH_AES_128_CCM = new TlsCipher(0xC0A4, TlsCipherEngineFactory.aes128(), TlsCipherModeFactory.ccm(), TlsKeyExchangeFactory.psk(), TlsAuthFactory.psk(), TlsHashFactory.sha256(), TLS_12, false);
    private static final TlsCipher TLS_PSK_WITH_AES_128_CCM_8 = new TlsCipher(0xC0A8, TlsCipherEngineFactory.aes128(), TlsCipherModeFactory.ccm8(), TlsKeyExchangeFactory.psk(), TlsAuthFactory.psk(), TlsHashFactory.sha256(), TLS_12, false);
    private static final TlsCipher TLS_PSK_WITH_AES_128_GCM_SHA256 = new TlsCipher(0x00A8, TlsCipherEngineFactory.aes128(), TlsCipherModeFactory.gcm(), TlsKeyExchangeFactory.psk(), TlsAuthFactory.psk(), TlsHashFactory.sha256(), TLS_12, false);
    private static final TlsCipher TLS_PSK_WITH_AES_256_CBC_SHA = new TlsCipher(0x008D, TlsCipherEngineFactory.aes256(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.psk(), TlsAuthFactory.psk(), TlsHashFactory.sha1(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_PSK_WITH_AES_256_CBC_SHA384 = new TlsCipher(0x00AF, TlsCipherEngineFactory.aes256(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.psk(), TlsAuthFactory.psk(), TlsHashFactory.sha384(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_PSK_WITH_AES_256_CCM = new TlsCipher(0xC0A5, TlsCipherEngineFactory.aes256(), TlsCipherModeFactory.ccm(), TlsKeyExchangeFactory.psk(), TlsAuthFactory.psk(), TlsHashFactory.sha256(), TLS_12, false);
    private static final TlsCipher TLS_PSK_WITH_AES_256_CCM_8 = new TlsCipher(0xC0A9, TlsCipherEngineFactory.aes256(), TlsCipherModeFactory.ccm8(), TlsKeyExchangeFactory.psk(), TlsAuthFactory.psk(), TlsHashFactory.sha256(), TLS_12, false);
    private static final TlsCipher TLS_PSK_WITH_AES_256_GCM_SHA384 = new TlsCipher(0x00A9, TlsCipherEngineFactory.aes256(), TlsCipherModeFactory.gcm(), TlsKeyExchangeFactory.psk(), TlsAuthFactory.psk(), TlsHashFactory.sha384(), TLS_12, false);
    private static final TlsCipher TLS_PSK_WITH_ARIA_128_CBC_SHA256 = new TlsCipher(0xC064, TlsCipherEngineFactory.aria128(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.psk(), TlsAuthFactory.psk(), TlsHashFactory.sha256(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_PSK_WITH_ARIA_128_GCM_SHA256 = new TlsCipher(0xC06A, TlsCipherEngineFactory.aria128(), TlsCipherModeFactory.gcm(), TlsKeyExchangeFactory.psk(), TlsAuthFactory.psk(), TlsHashFactory.sha256(), TLS_12, false);
    private static final TlsCipher TLS_PSK_WITH_ARIA_256_CBC_SHA384 = new TlsCipher(0xC065, TlsCipherEngineFactory.aria256(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.psk(), TlsAuthFactory.psk(), TlsHashFactory.sha384(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_PSK_WITH_ARIA_256_GCM_SHA384 = new TlsCipher(0xC06B, TlsCipherEngineFactory.aria256(), TlsCipherModeFactory.gcm(), TlsKeyExchangeFactory.psk(), TlsAuthFactory.psk(), TlsHashFactory.sha384(), TLS_12, false);
    private static final TlsCipher TLS_PSK_WITH_CAMELLIA_128_CBC_SHA256 = new TlsCipher(0xC094, TlsCipherEngineFactory.camellia128(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.psk(), TlsAuthFactory.psk(), TlsHashFactory.sha256(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_PSK_WITH_CAMELLIA_128_GCM_SHA256 = new TlsCipher(0xC08E, TlsCipherEngineFactory.camellia128(), TlsCipherModeFactory.gcm(), TlsKeyExchangeFactory.psk(), TlsAuthFactory.psk(), TlsHashFactory.sha256(), TLS_12, false);
    private static final TlsCipher TLS_PSK_WITH_CAMELLIA_256_CBC_SHA384 = new TlsCipher(0xC095, TlsCipherEngineFactory.camellia256(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.psk(), TlsAuthFactory.psk(), TlsHashFactory.sha384(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_PSK_WITH_CAMELLIA_256_GCM_SHA384 = new TlsCipher(0xC08F, TlsCipherEngineFactory.camellia256(), TlsCipherModeFactory.gcm(), TlsKeyExchangeFactory.psk(), TlsAuthFactory.psk(), TlsHashFactory.sha384(), TLS_12, false);
    private static final TlsCipher TLS_PSK_WITH_CHACHA20_POLY1305_SHA256 = new TlsCipher(0xCCAB, TlsCipherEngineFactory.chaCha20(), TlsCipherModeFactory.poly1305(), TlsKeyExchangeFactory.psk(), TlsAuthFactory.psk(), TlsHashFactory.sha256(), TLS_12, false);
    private static final TlsCipher TLS_PSK_WITH_NULL_SHA = new TlsCipher(0x002C, TlsCipherEngineFactory.none(), TlsCipherModeFactory.none(), TlsKeyExchangeFactory.psk(), TlsAuthFactory.psk(), TlsHashFactory.sha1(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_PSK_WITH_NULL_SHA256 = new TlsCipher(0x00B0, TlsCipherEngineFactory.none(), TlsCipherModeFactory.none(), TlsKeyExchangeFactory.psk(), TlsAuthFactory.psk(), TlsHashFactory.sha256(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_PSK_WITH_NULL_SHA384 = new TlsCipher(0x00B1, TlsCipherEngineFactory.none(), TlsCipherModeFactory.none(), TlsKeyExchangeFactory.psk(), TlsAuthFactory.psk(), TlsHashFactory.sha384(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_PSK_WITH_RC4_128_SHA = new TlsCipher(0x008A, TlsCipherEngineFactory.rc4_128(), TlsCipherModeFactory.ctr(), TlsKeyExchangeFactory.psk(), TlsAuthFactory.psk(), TlsHashFactory.sha1(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_RSA_EXPORT_WITH_DES40_CBC_SHA = new TlsCipher(0x0008, TlsCipherEngineFactory.des40(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.rsa(), TlsAuthFactory.rsa(), TlsHashFactory.sha1(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_RSA_EXPORT_WITH_RC2_CBC_40_MD5 = new TlsCipher(0x0006, TlsCipherEngineFactory.rc2_40(), TlsCipherModeFactory.cbcExport(), TlsKeyExchangeFactory.rsa(), TlsAuthFactory.rsa(), TlsHashFactory.md5(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_RSA_EXPORT_WITH_RC4_40_MD5 = new TlsCipher(0x0003, TlsCipherEngineFactory.rc4_40(), TlsCipherModeFactory.ctr(), TlsKeyExchangeFactory.rsa(), TlsAuthFactory.rsa(), TlsHashFactory.md5(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_RSA_PSK_WITH_3DES_EDE_CBC_SHA = new TlsCipher(0x0093, TlsCipherEngineFactory.desEde(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.rsa(), TlsAuthFactory.psk(), TlsHashFactory.sha1(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_RSA_PSK_WITH_AES_128_CBC_SHA = new TlsCipher(0x0094, TlsCipherEngineFactory.aes128(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.rsa(), TlsAuthFactory.psk(), TlsHashFactory.sha1(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_RSA_PSK_WITH_AES_128_CBC_SHA256 = new TlsCipher(0x00B6, TlsCipherEngineFactory.aes128(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.rsa(), TlsAuthFactory.psk(), TlsHashFactory.sha256(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_RSA_PSK_WITH_AES_128_GCM_SHA256 = new TlsCipher(0x00AC, TlsCipherEngineFactory.aes128(), TlsCipherModeFactory.gcm(), TlsKeyExchangeFactory.rsa(), TlsAuthFactory.psk(), TlsHashFactory.sha256(), TLS_12, false);
    private static final TlsCipher TLS_RSA_PSK_WITH_AES_256_CBC_SHA = new TlsCipher(0x0095, TlsCipherEngineFactory.aes256(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.rsa(), TlsAuthFactory.psk(), TlsHashFactory.sha1(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_RSA_PSK_WITH_AES_256_CBC_SHA384 = new TlsCipher(0x00B7, TlsCipherEngineFactory.aes256(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.rsa(), TlsAuthFactory.psk(), TlsHashFactory.sha384(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_RSA_PSK_WITH_AES_256_GCM_SHA384 = new TlsCipher(0x00AD, TlsCipherEngineFactory.aes256(), TlsCipherModeFactory.gcm(), TlsKeyExchangeFactory.rsa(), TlsAuthFactory.psk(), TlsHashFactory.sha384(), TLS_12, false);
    private static final TlsCipher TLS_RSA_PSK_WITH_ARIA_128_CBC_SHA256 = new TlsCipher(0xC068, TlsCipherEngineFactory.aria128(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.rsa(), TlsAuthFactory.psk(), TlsHashFactory.sha256(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_RSA_PSK_WITH_ARIA_128_GCM_SHA256 = new TlsCipher(0xC06E, TlsCipherEngineFactory.aria128(), TlsCipherModeFactory.gcm(), TlsKeyExchangeFactory.rsa(), TlsAuthFactory.psk(), TlsHashFactory.sha256(), TLS_12, false);
    private static final TlsCipher TLS_RSA_PSK_WITH_ARIA_256_CBC_SHA384 = new TlsCipher(0xC069, TlsCipherEngineFactory.aria256(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.rsa(), TlsAuthFactory.psk(), TlsHashFactory.sha384(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_RSA_PSK_WITH_ARIA_256_GCM_SHA384 = new TlsCipher(0xC06F, TlsCipherEngineFactory.aria256(), TlsCipherModeFactory.gcm(), TlsKeyExchangeFactory.rsa(), TlsAuthFactory.psk(), TlsHashFactory.sha384(), TLS_12, false);
    private static final TlsCipher TLS_RSA_PSK_WITH_CAMELLIA_128_CBC_SHA256 = new TlsCipher(0xC098, TlsCipherEngineFactory.camellia128(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.rsa(), TlsAuthFactory.psk(), TlsHashFactory.sha256(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_RSA_PSK_WITH_CAMELLIA_128_GCM_SHA256 = new TlsCipher(0xC092, TlsCipherEngineFactory.camellia128(), TlsCipherModeFactory.gcm(), TlsKeyExchangeFactory.rsa(), TlsAuthFactory.psk(), TlsHashFactory.sha256(), TLS_12, false);
    private static final TlsCipher TLS_RSA_PSK_WITH_CAMELLIA_256_CBC_SHA384 = new TlsCipher(0xC099, TlsCipherEngineFactory.camellia256(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.rsa(), TlsAuthFactory.psk(), TlsHashFactory.sha384(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_RSA_PSK_WITH_CAMELLIA_256_GCM_SHA384 = new TlsCipher(0xC093, TlsCipherEngineFactory.camellia256(), TlsCipherModeFactory.gcm(), TlsKeyExchangeFactory.rsa(), TlsAuthFactory.psk(), TlsHashFactory.sha384(), TLS_12, false);
    private static final TlsCipher TLS_RSA_PSK_WITH_CHACHA20_POLY1305_SHA256 = new TlsCipher(0xCCAE, TlsCipherEngineFactory.chaCha20(), TlsCipherModeFactory.poly1305(), TlsKeyExchangeFactory.rsa(), TlsAuthFactory.psk(), TlsHashFactory.sha256(), TLS_12, false);
    private static final TlsCipher TLS_RSA_PSK_WITH_NULL_SHA = new TlsCipher(0x002E, TlsCipherEngineFactory.none(), TlsCipherModeFactory.none(), TlsKeyExchangeFactory.rsa(), TlsAuthFactory.psk(), TlsHashFactory.sha1(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_RSA_PSK_WITH_NULL_SHA256 = new TlsCipher(0x00B8, TlsCipherEngineFactory.none(), TlsCipherModeFactory.none(), TlsKeyExchangeFactory.rsa(), TlsAuthFactory.psk(), TlsHashFactory.sha256(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_RSA_PSK_WITH_NULL_SHA384 = new TlsCipher(0x00B9, TlsCipherEngineFactory.none(), TlsCipherModeFactory.none(), TlsKeyExchangeFactory.rsa(), TlsAuthFactory.psk(), TlsHashFactory.sha384(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_RSA_PSK_WITH_RC4_128_SHA = new TlsCipher(0x0092, TlsCipherEngineFactory.rc4_128(), TlsCipherModeFactory.ctr(), TlsKeyExchangeFactory.rsa(), TlsAuthFactory.psk(), TlsHashFactory.sha1(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_RSA_WITH_3DES_EDE_CBC_SHA = new TlsCipher(0x000A, TlsCipherEngineFactory.desEde(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.rsa(), TlsAuthFactory.rsa(), TlsHashFactory.sha1(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_RSA_WITH_AES_128_CBC_SHA = new TlsCipher(0x002F, TlsCipherEngineFactory.aes128(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.rsa(), TlsAuthFactory.rsa(), TlsHashFactory.sha1(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_RSA_WITH_AES_128_CBC_SHA256 = new TlsCipher(0x003C, TlsCipherEngineFactory.aes128(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.rsa(), TlsAuthFactory.rsa(), TlsHashFactory.sha256(), TLS_12, false);
    private static final TlsCipher TLS_RSA_WITH_AES_128_CCM = new TlsCipher(0xC09C, TlsCipherEngineFactory.aes128(), TlsCipherModeFactory.ccm(), TlsKeyExchangeFactory.rsa(), TlsAuthFactory.rsa(), TlsHashFactory.sha256(), TLS_12, false);
    private static final TlsCipher TLS_RSA_WITH_AES_128_CCM_8 = new TlsCipher(0xC0A0, TlsCipherEngineFactory.aes128(), TlsCipherModeFactory.ccm8(), TlsKeyExchangeFactory.rsa(), TlsAuthFactory.rsa(), TlsHashFactory.sha256(), TLS_12, false);
    private static final TlsCipher TLS_RSA_WITH_AES_128_GCM_SHA256 = new TlsCipher(0x009C, TlsCipherEngineFactory.aes128(), TlsCipherModeFactory.gcm(), TlsKeyExchangeFactory.rsa(), TlsAuthFactory.rsa(), TlsHashFactory.sha256(), TLS_12, false);
    private static final TlsCipher TLS_RSA_WITH_AES_256_CBC_SHA = new TlsCipher(0x0035, TlsCipherEngineFactory.aes256(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.rsa(), TlsAuthFactory.rsa(), TlsHashFactory.sha1(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_RSA_WITH_AES_256_CBC_SHA256 = new TlsCipher(0x003D, TlsCipherEngineFactory.aes256(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.rsa(), TlsAuthFactory.rsa(), TlsHashFactory.sha256(), TLS_12, false);
    private static final TlsCipher TLS_RSA_WITH_AES_256_CCM = new TlsCipher(0xC09D, TlsCipherEngineFactory.aes256(), TlsCipherModeFactory.ccm(), TlsKeyExchangeFactory.rsa(), TlsAuthFactory.rsa(), TlsHashFactory.sha256(), TLS_12, false);
    private static final TlsCipher TLS_RSA_WITH_AES_256_CCM_8 = new TlsCipher(0xC0A1, TlsCipherEngineFactory.aes256(), TlsCipherModeFactory.ccm8(), TlsKeyExchangeFactory.rsa(), TlsAuthFactory.rsa(), TlsHashFactory.sha256(), TLS_12, false);
    private static final TlsCipher TLS_RSA_WITH_AES_256_GCM_SHA384 = new TlsCipher(0x009D, TlsCipherEngineFactory.aes256(), TlsCipherModeFactory.gcm(), TlsKeyExchangeFactory.rsa(), TlsAuthFactory.rsa(), TlsHashFactory.sha384(), TLS_12, false);
    private static final TlsCipher TLS_RSA_WITH_ARIA_128_CBC_SHA256 = new TlsCipher(0xC03C, TlsCipherEngineFactory.aria128(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.rsa(), TlsAuthFactory.rsa(), TlsHashFactory.sha256(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_RSA_WITH_ARIA_128_GCM_SHA256 = new TlsCipher(0xC050, TlsCipherEngineFactory.aria128(), TlsCipherModeFactory.gcm(), TlsKeyExchangeFactory.rsa(), TlsAuthFactory.rsa(), TlsHashFactory.sha256(), TLS_12, false);
    private static final TlsCipher TLS_RSA_WITH_ARIA_256_CBC_SHA384 = new TlsCipher(0xC03D, TlsCipherEngineFactory.aria256(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.rsa(), TlsAuthFactory.rsa(), TlsHashFactory.sha384(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_RSA_WITH_ARIA_256_GCM_SHA384 = new TlsCipher(0xC051, TlsCipherEngineFactory.aria256(), TlsCipherModeFactory.gcm(), TlsKeyExchangeFactory.rsa(), TlsAuthFactory.rsa(), TlsHashFactory.sha384(), TLS_12, false);
    private static final TlsCipher TLS_RSA_WITH_CAMELLIA_128_CBC_SHA = new TlsCipher(0x0041, TlsCipherEngineFactory.camellia128(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.rsa(), TlsAuthFactory.rsa(), TlsHashFactory.sha1(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_RSA_WITH_CAMELLIA_128_CBC_SHA256 = new TlsCipher(0x00BA, TlsCipherEngineFactory.camellia128(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.rsa(), TlsAuthFactory.rsa(), TlsHashFactory.sha256(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_RSA_WITH_CAMELLIA_128_GCM_SHA256 = new TlsCipher(0xC07A, TlsCipherEngineFactory.camellia128(), TlsCipherModeFactory.gcm(), TlsKeyExchangeFactory.rsa(), TlsAuthFactory.rsa(), TlsHashFactory.sha256(), TLS_12, false);
    private static final TlsCipher TLS_RSA_WITH_CAMELLIA_256_CBC_SHA = new TlsCipher(0x0084, TlsCipherEngineFactory.camellia256(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.rsa(), TlsAuthFactory.rsa(), TlsHashFactory.sha1(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_RSA_WITH_CAMELLIA_256_CBC_SHA256 = new TlsCipher(0x00C0, TlsCipherEngineFactory.camellia256(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.rsa(), TlsAuthFactory.rsa(), TlsHashFactory.sha256(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_RSA_WITH_CAMELLIA_256_GCM_SHA384 = new TlsCipher(0xC07B, TlsCipherEngineFactory.camellia256(), TlsCipherModeFactory.gcm(), TlsKeyExchangeFactory.rsa(), TlsAuthFactory.rsa(), TlsHashFactory.sha384(), TLS_12, false);
    private static final TlsCipher TLS_RSA_WITH_DES_CBC_SHA = new TlsCipher(0x0009, TlsCipherEngineFactory.des40(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.rsa(), TlsAuthFactory.rsa(), TlsHashFactory.sha1(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_RSA_WITH_IDEA_CBC_SHA = new TlsCipher(0x0007, TlsCipherEngineFactory.idea(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.rsa(), TlsAuthFactory.rsa(), TlsHashFactory.sha1(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_RSA_WITH_NULL_MD5 = new TlsCipher(0x0001, TlsCipherEngineFactory.none(), TlsCipherModeFactory.none(), TlsKeyExchangeFactory.rsa(), TlsAuthFactory.rsa(), TlsHashFactory.md5(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_RSA_WITH_NULL_SHA = new TlsCipher(0x0002, TlsCipherEngineFactory.none(), TlsCipherModeFactory.none(), TlsKeyExchangeFactory.rsa(), TlsAuthFactory.rsa(), TlsHashFactory.sha1(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_RSA_WITH_NULL_SHA256 = new TlsCipher(0x003B, TlsCipherEngineFactory.none(), TlsCipherModeFactory.none(), TlsKeyExchangeFactory.rsa(), TlsAuthFactory.rsa(), TlsHashFactory.sha256(), TLS_12, false);
    private static final TlsCipher TLS_RSA_WITH_RC4_128_MD5 = new TlsCipher(0x0004, TlsCipherEngineFactory.rc4_128(), TlsCipherModeFactory.ctr(), TlsKeyExchangeFactory.rsa(), TlsAuthFactory.rsa(), TlsHashFactory.md5(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_RSA_WITH_RC4_128_SHA = new TlsCipher(0x0005, TlsCipherEngineFactory.rc4_128(), TlsCipherModeFactory.ctr(), TlsKeyExchangeFactory.rsa(), TlsAuthFactory.rsa(), TlsHashFactory.sha1(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_RSA_WITH_SEED_CBC_SHA = new TlsCipher(0x0096, TlsCipherEngineFactory.seed(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.rsa(), TlsAuthFactory.rsa(), TlsHashFactory.sha1(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_SRP_SHA_DSS_WITH_3DES_EDE_CBC_SHA = new TlsCipher(0xC01C, TlsCipherEngineFactory.desEde(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.srp(), TlsAuthFactory.shaDss(), TlsHashFactory.sha1(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_SRP_SHA_DSS_WITH_AES_128_CBC_SHA = new TlsCipher(0xC01F, TlsCipherEngineFactory.aes128(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.srp(), TlsAuthFactory.shaDss(), TlsHashFactory.sha1(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_SRP_SHA_DSS_WITH_AES_256_CBC_SHA = new TlsCipher(0xC022, TlsCipherEngineFactory.aes256(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.srp(), TlsAuthFactory.shaDss(), TlsHashFactory.sha1(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_SRP_SHA_RSA_WITH_3DES_EDE_CBC_SHA = new TlsCipher(0xC01B, TlsCipherEngineFactory.desEde(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.srp(), TlsAuthFactory.shaRsa(), TlsHashFactory.sha1(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_SRP_SHA_RSA_WITH_AES_128_CBC_SHA = new TlsCipher(0xC01E, TlsCipherEngineFactory.aes128(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.srp(), TlsAuthFactory.shaRsa(), TlsHashFactory.sha1(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_SRP_SHA_RSA_WITH_AES_256_CBC_SHA = new TlsCipher(0xC021, TlsCipherEngineFactory.aes256(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.srp(), TlsAuthFactory.shaRsa(), TlsHashFactory.sha1(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_SRP_SHA_WITH_3DES_EDE_CBC_SHA = new TlsCipher(0xC01A, TlsCipherEngineFactory.desEde(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.srp(), TlsAuthFactory.sha(), TlsHashFactory.sha1(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_SRP_SHA_WITH_AES_128_CBC_SHA = new TlsCipher(0xC01D, TlsCipherEngineFactory.aes128(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.srp(), TlsAuthFactory.sha(), TlsHashFactory.sha1(), TLS_10_TO_12, false);
    private static final TlsCipher TLS_SRP_SHA_WITH_AES_256_CBC_SHA = new TlsCipher(0xC020, TlsCipherEngineFactory.aes256(), TlsCipherModeFactory.cbc(), TlsKeyExchangeFactory.srp(), TlsAuthFactory.sha(), TlsHashFactory.sha1(), TLS_10_TO_12, false);
    private final static List<TlsCipher> RECOMMENDED = List.of(
            TLS_AES_128_CCM_8_SHA256,
            TLS_AES_128_CCM_SHA256,
            TLS_ECCPWD_WITH_AES_128_CCM_SHA256,
            TLS_ECCPWD_WITH_AES_256_CCM_SHA384,
            TLS_ECDHE_ECDSA_WITH_AES_128_CCM,
            TLS_ECDHE_ECDSA_WITH_AES_128_CCM_8,
            TLS_ECDHE_ECDSA_WITH_AES_256_CCM,
            TLS_ECDHE_ECDSA_WITH_AES_256_CCM_8,
            TLS_ECDHE_PSK_WITH_AES_128_CCM_8_SHA256,
            TLS_ECDHE_PSK_WITH_AES_128_CCM_SHA256,
            TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,
            TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,
            TLS_ECDHE_RSA_WITH_ARIA_128_GCM_SHA256,
            TLS_ECDHE_RSA_WITH_ARIA_256_GCM_SHA384,
            TLS_ECDHE_RSA_WITH_CAMELLIA_128_GCM_SHA256,
            TLS_ECDHE_RSA_WITH_CAMELLIA_256_GCM_SHA384,
            TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
    );
    private static final List<TlsCipher> ALL = List.of(
            TLS_AES_128_CCM_8_SHA256,
            TLS_AES_128_CCM_SHA256,
            TLS_AES_128_GCM_SHA256,
            TLS_AES_256_GCM_SHA384,
            TLS_CHACHA20_POLY1305_SHA256,
            TLS_DH_ANON_EXPORT_WITH_DES40_CBC_SHA,
            TLS_DH_ANON_EXPORT_WITH_RC4_40_MD5,
            TLS_DH_ANON_WITH_3DES_EDE_CBC_SHA,
            TLS_DH_ANON_WITH_AES_128_CBC_SHA,
            TLS_DH_ANON_WITH_AES_128_CBC_SHA256,
            TLS_DH_ANON_WITH_AES_128_GCM_SHA256,
            TLS_DH_ANON_WITH_AES_256_CBC_SHA,
            TLS_DH_ANON_WITH_AES_256_CBC_SHA256,
            TLS_DH_ANON_WITH_AES_256_GCM_SHA384,
            TLS_DH_ANON_WITH_ARIA_128_CBC_SHA256,
            TLS_DH_ANON_WITH_ARIA_128_GCM_SHA256,
            TLS_DH_ANON_WITH_ARIA_256_CBC_SHA384,
            TLS_DH_ANON_WITH_ARIA_256_GCM_SHA384,
            TLS_DH_ANON_WITH_CAMELLIA_128_CBC_SHA,
            TLS_DH_ANON_WITH_CAMELLIA_128_CBC_SHA256,
            TLS_DH_ANON_WITH_CAMELLIA_128_GCM_SHA256,
            TLS_DH_ANON_WITH_CAMELLIA_256_CBC_SHA,
            TLS_DH_ANON_WITH_CAMELLIA_256_CBC_SHA256,
            TLS_DH_ANON_WITH_CAMELLIA_256_GCM_SHA384,
            TLS_DH_ANON_WITH_DES_CBC_SHA,
            TLS_DH_ANON_WITH_RC4_128_MD5,
            TLS_DH_ANON_WITH_SEED_CBC_SHA,
            TLS_DH_DSS_EXPORT_WITH_DES40_CBC_SHA,
            TLS_DH_DSS_WITH_3DES_EDE_CBC_SHA,
            TLS_DH_DSS_WITH_AES_128_CBC_SHA,
            TLS_DH_DSS_WITH_AES_128_CBC_SHA256,
            TLS_DH_DSS_WITH_AES_128_GCM_SHA256,
            TLS_DH_DSS_WITH_AES_256_CBC_SHA,
            TLS_DH_DSS_WITH_AES_256_CBC_SHA256,
            TLS_DH_DSS_WITH_AES_256_GCM_SHA384,
            TLS_DH_DSS_WITH_ARIA_128_CBC_SHA256,
            TLS_DH_DSS_WITH_ARIA_128_GCM_SHA256,
            TLS_DH_DSS_WITH_ARIA_256_CBC_SHA384,
            TLS_DH_DSS_WITH_ARIA_256_GCM_SHA384,
            TLS_DH_DSS_WITH_CAMELLIA_128_CBC_SHA,
            TLS_DH_DSS_WITH_CAMELLIA_128_CBC_SHA256,
            TLS_DH_DSS_WITH_CAMELLIA_128_GCM_SHA256,
            TLS_DH_DSS_WITH_CAMELLIA_256_CBC_SHA,
            TLS_DH_DSS_WITH_CAMELLIA_256_CBC_SHA256,
            TLS_DH_DSS_WITH_CAMELLIA_256_GCM_SHA384,
            TLS_DH_DSS_WITH_DES_CBC_SHA,
            TLS_DH_DSS_WITH_SEED_CBC_SHA,
            TLS_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA,
            TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA,
            TLS_DHE_DSS_WITH_AES_128_CBC_SHA,
            TLS_DHE_DSS_WITH_AES_128_CBC_SHA256,
            TLS_DHE_DSS_WITH_AES_128_GCM_SHA256,
            TLS_DHE_DSS_WITH_AES_256_CBC_SHA,
            TLS_DHE_DSS_WITH_AES_256_CBC_SHA256,
            TLS_DHE_DSS_WITH_AES_256_GCM_SHA384,
            TLS_DHE_DSS_WITH_ARIA_128_CBC_SHA256,
            TLS_DHE_DSS_WITH_ARIA_128_GCM_SHA256,
            TLS_DHE_DSS_WITH_ARIA_256_CBC_SHA384,
            TLS_DHE_DSS_WITH_ARIA_256_GCM_SHA384,
            TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA,
            TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA256,
            TLS_DHE_DSS_WITH_CAMELLIA_128_GCM_SHA256,
            TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA,
            TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA256,
            TLS_DHE_DSS_WITH_CAMELLIA_256_GCM_SHA384,
            TLS_DHE_DSS_WITH_DES_CBC_SHA,
            TLS_DHE_DSS_WITH_SEED_CBC_SHA,
            TLS_DHE_PSK_WITH_3DES_EDE_CBC_SHA,
            TLS_DHE_PSK_WITH_AES_128_CBC_SHA,
            TLS_DHE_PSK_WITH_AES_128_CBC_SHA256,
            TLS_DHE_PSK_WITH_AES_128_CCM,
            TLS_DHE_PSK_WITH_AES_128_GCM_SHA256,
            TLS_DHE_PSK_WITH_AES_256_CBC_SHA,
            TLS_DHE_PSK_WITH_AES_256_CBC_SHA384,
            TLS_DHE_PSK_WITH_AES_256_CCM,
            TLS_DHE_PSK_WITH_AES_256_GCM_SHA384,
            TLS_DHE_PSK_WITH_ARIA_128_CBC_SHA256,
            TLS_DHE_PSK_WITH_ARIA_128_GCM_SHA256,
            TLS_DHE_PSK_WITH_ARIA_256_CBC_SHA384,
            TLS_DHE_PSK_WITH_ARIA_256_GCM_SHA384,
            TLS_DHE_PSK_WITH_CAMELLIA_128_CBC_SHA256,
            TLS_DHE_PSK_WITH_CAMELLIA_128_GCM_SHA256,
            TLS_DHE_PSK_WITH_CAMELLIA_256_CBC_SHA384,
            TLS_DHE_PSK_WITH_CAMELLIA_256_GCM_SHA384,
            TLS_DHE_PSK_WITH_CHACHA20_POLY1305_SHA256,
            TLS_DHE_PSK_WITH_NULL_SHA,
            TLS_DHE_PSK_WITH_NULL_SHA256,
            TLS_DHE_PSK_WITH_NULL_SHA384,
            TLS_DHE_PSK_WITH_RC4_128_SHA,
            TLS_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA,
            TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA,
            TLS_DHE_RSA_WITH_AES_128_CBC_SHA,
            TLS_DHE_RSA_WITH_AES_128_CBC_SHA256,
            TLS_DHE_RSA_WITH_AES_128_CCM,
            TLS_DHE_RSA_WITH_AES_128_CCM_8,
            TLS_DHE_RSA_WITH_AES_128_GCM_SHA256,
            TLS_DHE_RSA_WITH_AES_256_CBC_SHA,
            TLS_DHE_RSA_WITH_AES_256_CBC_SHA256,
            TLS_DHE_RSA_WITH_AES_256_CCM,
            TLS_DHE_RSA_WITH_AES_256_CCM_8,
            TLS_DHE_RSA_WITH_AES_256_GCM_SHA384,
            TLS_DHE_RSA_WITH_ARIA_128_CBC_SHA256,
            TLS_DHE_RSA_WITH_ARIA_128_GCM_SHA256,
            TLS_DHE_RSA_WITH_ARIA_256_CBC_SHA384,
            TLS_DHE_RSA_WITH_ARIA_256_GCM_SHA384,
            TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA,
            TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA256,
            TLS_DHE_RSA_WITH_CAMELLIA_128_GCM_SHA256,
            TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA,
            TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA256,
            TLS_DHE_RSA_WITH_CAMELLIA_256_GCM_SHA384,
            TLS_DHE_RSA_WITH_CHACHA20_POLY1305_SHA256,
            TLS_DHE_RSA_WITH_DES_CBC_SHA,
            TLS_DHE_RSA_WITH_SEED_CBC_SHA,
            TLS_DH_RSA_EXPORT_WITH_DES40_CBC_SHA,
            TLS_DH_RSA_WITH_3DES_EDE_CBC_SHA,
            TLS_DH_RSA_WITH_AES_128_CBC_SHA,
            TLS_DH_RSA_WITH_AES_128_CBC_SHA256,
            TLS_DH_RSA_WITH_AES_128_GCM_SHA256,
            TLS_DH_RSA_WITH_AES_256_CBC_SHA,
            TLS_DH_RSA_WITH_AES_256_CBC_SHA256,
            TLS_DH_RSA_WITH_AES_256_GCM_SHA384,
            TLS_DH_RSA_WITH_ARIA_128_CBC_SHA256,
            TLS_DH_RSA_WITH_ARIA_128_GCM_SHA256,
            TLS_DH_RSA_WITH_ARIA_256_CBC_SHA384,
            TLS_DH_RSA_WITH_ARIA_256_GCM_SHA384,
            TLS_DH_RSA_WITH_CAMELLIA_128_CBC_SHA,
            TLS_DH_RSA_WITH_CAMELLIA_128_CBC_SHA256,
            TLS_DH_RSA_WITH_CAMELLIA_128_GCM_SHA256,
            TLS_DH_RSA_WITH_CAMELLIA_256_CBC_SHA,
            TLS_DH_RSA_WITH_CAMELLIA_256_CBC_SHA256,
            TLS_DH_RSA_WITH_CAMELLIA_256_GCM_SHA384,
            TLS_DH_RSA_WITH_DES_CBC_SHA,
            TLS_DH_RSA_WITH_SEED_CBC_SHA,
            TLS_ECCPWD_WITH_AES_128_CCM_SHA256,
            TLS_ECCPWD_WITH_AES_128_GCM_SHA256,
            TLS_ECCPWD_WITH_AES_256_CCM_SHA384,
            TLS_ECCPWD_WITH_AES_256_GCM_SHA384,
            TLS_ECDH_ANON_WITH_3DES_EDE_CBC_SHA,
            TLS_ECDH_ANON_WITH_AES_128_CBC_SHA,
            TLS_ECDH_ANON_WITH_AES_256_CBC_SHA,
            TLS_ECDH_ANON_WITH_NULL_SHA,
            TLS_ECDH_ANON_WITH_RC4_128_SHA,
            TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA,
            TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA,
            TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256,
            TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256,
            TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA,
            TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384,
            TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384,
            TLS_ECDH_ECDSA_WITH_ARIA_128_CBC_SHA256,
            TLS_ECDH_ECDSA_WITH_ARIA_128_GCM_SHA256,
            TLS_ECDH_ECDSA_WITH_ARIA_256_CBC_SHA384,
            TLS_ECDH_ECDSA_WITH_ARIA_256_GCM_SHA384,
            TLS_ECDH_ECDSA_WITH_CAMELLIA_128_CBC_SHA256,
            TLS_ECDH_ECDSA_WITH_CAMELLIA_128_GCM_SHA256,
            TLS_ECDH_ECDSA_WITH_CAMELLIA_256_CBC_SHA384,
            TLS_ECDH_ECDSA_WITH_CAMELLIA_256_GCM_SHA384,
            TLS_ECDH_ECDSA_WITH_NULL_SHA,
            TLS_ECDH_ECDSA_WITH_RC4_128_SHA,
            TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA,
            TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,
            TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,
            TLS_ECDHE_ECDSA_WITH_AES_128_CCM,
            TLS_ECDHE_ECDSA_WITH_AES_128_CCM_8,
            TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,
            TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,
            TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384,
            TLS_ECDHE_ECDSA_WITH_AES_256_CCM,
            TLS_ECDHE_ECDSA_WITH_AES_256_CCM_8,
            TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,
            TLS_ECDHE_ECDSA_WITH_ARIA_128_CBC_SHA256,
            TLS_ECDHE_ECDSA_WITH_ARIA_128_GCM_SHA256,
            TLS_ECDHE_ECDSA_WITH_ARIA_256_CBC_SHA384,
            TLS_ECDHE_ECDSA_WITH_ARIA_256_GCM_SHA384,
            TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_CBC_SHA256,
            TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_GCM_SHA256,
            TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_CBC_SHA384,
            TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_GCM_SHA384,
            TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,
            TLS_ECDHE_ECDSA_WITH_NULL_SHA,
            TLS_ECDHE_ECDSA_WITH_RC4_128_SHA,
            TLS_ECDHE_PSK_WITH_3DES_EDE_CBC_SHA,
            TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA,
            TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA256,
            TLS_ECDHE_PSK_WITH_AES_128_CCM_8_SHA256,
            TLS_ECDHE_PSK_WITH_AES_128_CCM_SHA256,
            TLS_ECDHE_PSK_WITH_AES_128_GCM_SHA256,
            TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA,
            TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA384,
            TLS_ECDHE_PSK_WITH_AES_256_GCM_SHA384,
            TLS_ECDHE_PSK_WITH_ARIA_128_CBC_SHA256,
            TLS_ECDHE_PSK_WITH_ARIA_256_CBC_SHA384,
            TLS_ECDHE_PSK_WITH_CAMELLIA_128_CBC_SHA256,
            TLS_ECDHE_PSK_WITH_CAMELLIA_256_CBC_SHA384,
            TLS_ECDHE_PSK_WITH_CHACHA20_POLY1305_SHA256,
            TLS_ECDHE_PSK_WITH_NULL_SHA,
            TLS_ECDHE_PSK_WITH_NULL_SHA256,
            TLS_ECDHE_PSK_WITH_NULL_SHA384,
            TLS_ECDHE_PSK_WITH_RC4_128_SHA,
            TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA,
            TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,
            TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256,
            TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,
            TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,
            TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384,
            TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,
            TLS_ECDHE_RSA_WITH_ARIA_128_CBC_SHA256,
            TLS_ECDHE_RSA_WITH_ARIA_128_GCM_SHA256,
            TLS_ECDHE_RSA_WITH_ARIA_256_CBC_SHA384,
            TLS_ECDHE_RSA_WITH_ARIA_256_GCM_SHA384,
            TLS_ECDHE_RSA_WITH_CAMELLIA_128_CBC_SHA256,
            TLS_ECDHE_RSA_WITH_CAMELLIA_128_GCM_SHA256,
            TLS_ECDHE_RSA_WITH_CAMELLIA_256_CBC_SHA384,
            TLS_ECDHE_RSA_WITH_CAMELLIA_256_GCM_SHA384,
            TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256,
            TLS_ECDHE_RSA_WITH_NULL_SHA,
            TLS_ECDHE_RSA_WITH_RC4_128_SHA,
            TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA,
            TLS_ECDH_RSA_WITH_AES_128_CBC_SHA,
            TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256,
            TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256,
            TLS_ECDH_RSA_WITH_AES_256_CBC_SHA,
            TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384,
            TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384,
            TLS_ECDH_RSA_WITH_ARIA_128_CBC_SHA256,
            TLS_ECDH_RSA_WITH_ARIA_128_GCM_SHA256,
            TLS_ECDH_RSA_WITH_ARIA_256_CBC_SHA384,
            TLS_ECDH_RSA_WITH_ARIA_256_GCM_SHA384,
            TLS_ECDH_RSA_WITH_CAMELLIA_128_CBC_SHA256,
            TLS_ECDH_RSA_WITH_CAMELLIA_128_GCM_SHA256,
            TLS_ECDH_RSA_WITH_CAMELLIA_256_CBC_SHA384,
            TLS_ECDH_RSA_WITH_CAMELLIA_256_GCM_SHA384,
            TLS_ECDH_RSA_WITH_NULL_SHA,
            TLS_ECDH_RSA_WITH_RC4_128_SHA,
            TLS_GOSTR341112_256_WITH_28147_CNT_IMIT,
            TLS_GOSTR341112_256_WITH_KUZNYECHIK_CTR_OMAC,
            TLS_GOSTR341112_256_WITH_KUZNYECHIK_MGM_L,
            TLS_GOSTR341112_256_WITH_KUZNYECHIK_MGM_S,
            TLS_GOSTR341112_256_WITH_MAGMA_CTR_OMAC,
            TLS_GOSTR341112_256_WITH_MAGMA_MGM_L,
            TLS_GOSTR341112_256_WITH_MAGMA_MGM_S,
            TLS_KRB5_EXPORT_WITH_DES_CBC_40_MD5,
            TLS_KRB5_EXPORT_WITH_DES_CBC_40_SHA,
            TLS_KRB5_EXPORT_WITH_RC2_CBC_40_MD5,
            TLS_KRB5_EXPORT_WITH_RC2_CBC_40_SHA,
            TLS_KRB5_EXPORT_WITH_RC4_40_MD5,
            TLS_KRB5_EXPORT_WITH_RC4_40_SHA,
            TLS_KRB5_WITH_3DES_EDE_CBC_MD5,
            TLS_KRB5_WITH_3DES_EDE_CBC_SHA,
            TLS_KRB5_WITH_DES_CBC_MD5,
            TLS_KRB5_WITH_DES_CBC_SHA,
            TLS_KRB5_WITH_IDEA_CBC_MD5,
            TLS_KRB5_WITH_IDEA_CBC_SHA,
            TLS_KRB5_WITH_RC4_128_MD5,
            TLS_KRB5_WITH_RC4_128_SHA,
            TLS_NULL_WITH_NULL_NULL,
            TLS_PSK_DHE_WITH_AES_128_CCM_8,
            TLS_PSK_DHE_WITH_AES_256_CCM_8,
            TLS_PSK_WITH_3DES_EDE_CBC_SHA,
            TLS_PSK_WITH_AES_128_CBC_SHA,
            TLS_PSK_WITH_AES_128_CBC_SHA256,
            TLS_PSK_WITH_AES_128_CCM,
            TLS_PSK_WITH_AES_128_CCM_8,
            TLS_PSK_WITH_AES_128_GCM_SHA256,
            TLS_PSK_WITH_AES_256_CBC_SHA,
            TLS_PSK_WITH_AES_256_CBC_SHA384,
            TLS_PSK_WITH_AES_256_CCM,
            TLS_PSK_WITH_AES_256_CCM_8,
            TLS_PSK_WITH_AES_256_GCM_SHA384,
            TLS_PSK_WITH_ARIA_128_CBC_SHA256,
            TLS_PSK_WITH_ARIA_128_GCM_SHA256,
            TLS_PSK_WITH_ARIA_256_CBC_SHA384,
            TLS_PSK_WITH_ARIA_256_GCM_SHA384,
            TLS_PSK_WITH_CAMELLIA_128_CBC_SHA256,
            TLS_PSK_WITH_CAMELLIA_128_GCM_SHA256,
            TLS_PSK_WITH_CAMELLIA_256_CBC_SHA384,
            TLS_PSK_WITH_CAMELLIA_256_GCM_SHA384,
            TLS_PSK_WITH_CHACHA20_POLY1305_SHA256,
            TLS_PSK_WITH_NULL_SHA,
            TLS_PSK_WITH_NULL_SHA256,
            TLS_PSK_WITH_NULL_SHA384,
            TLS_PSK_WITH_RC4_128_SHA,
            TLS_RSA_EXPORT_WITH_DES40_CBC_SHA,
            TLS_RSA_EXPORT_WITH_RC2_CBC_40_MD5,
            TLS_RSA_EXPORT_WITH_RC4_40_MD5,
            TLS_RSA_PSK_WITH_3DES_EDE_CBC_SHA,
            TLS_RSA_PSK_WITH_AES_128_CBC_SHA,
            TLS_RSA_PSK_WITH_AES_128_CBC_SHA256,
            TLS_RSA_PSK_WITH_AES_128_GCM_SHA256,
            TLS_RSA_PSK_WITH_AES_256_CBC_SHA,
            TLS_RSA_PSK_WITH_AES_256_CBC_SHA384,
            TLS_RSA_PSK_WITH_AES_256_GCM_SHA384,
            TLS_RSA_PSK_WITH_ARIA_128_CBC_SHA256,
            TLS_RSA_PSK_WITH_ARIA_128_GCM_SHA256,
            TLS_RSA_PSK_WITH_ARIA_256_CBC_SHA384,
            TLS_RSA_PSK_WITH_ARIA_256_GCM_SHA384,
            TLS_RSA_PSK_WITH_CAMELLIA_128_CBC_SHA256,
            TLS_RSA_PSK_WITH_CAMELLIA_128_GCM_SHA256,
            TLS_RSA_PSK_WITH_CAMELLIA_256_CBC_SHA384,
            TLS_RSA_PSK_WITH_CAMELLIA_256_GCM_SHA384,
            TLS_RSA_PSK_WITH_CHACHA20_POLY1305_SHA256,
            TLS_RSA_PSK_WITH_NULL_SHA,
            TLS_RSA_PSK_WITH_NULL_SHA256,
            TLS_RSA_PSK_WITH_NULL_SHA384,
            TLS_RSA_PSK_WITH_RC4_128_SHA,
            TLS_RSA_WITH_3DES_EDE_CBC_SHA,
            TLS_RSA_WITH_AES_128_CBC_SHA,
            TLS_RSA_WITH_AES_128_CBC_SHA256,
            TLS_RSA_WITH_AES_128_CCM,
            TLS_RSA_WITH_AES_128_CCM_8,
            TLS_RSA_WITH_AES_128_GCM_SHA256,
            TLS_RSA_WITH_AES_256_CBC_SHA,
            TLS_RSA_WITH_AES_256_CBC_SHA256,
            TLS_RSA_WITH_AES_256_CCM,
            TLS_RSA_WITH_AES_256_CCM_8,
            TLS_RSA_WITH_AES_256_GCM_SHA384,
            TLS_RSA_WITH_ARIA_128_CBC_SHA256,
            TLS_RSA_WITH_ARIA_128_GCM_SHA256,
            TLS_RSA_WITH_ARIA_256_CBC_SHA384,
            TLS_RSA_WITH_ARIA_256_GCM_SHA384,
            TLS_RSA_WITH_CAMELLIA_128_CBC_SHA,
            TLS_RSA_WITH_CAMELLIA_128_CBC_SHA256,
            TLS_RSA_WITH_CAMELLIA_128_GCM_SHA256,
            TLS_RSA_WITH_CAMELLIA_256_CBC_SHA,
            TLS_RSA_WITH_CAMELLIA_256_CBC_SHA256,
            TLS_RSA_WITH_CAMELLIA_256_GCM_SHA384,
            TLS_RSA_WITH_DES_CBC_SHA,
            TLS_RSA_WITH_IDEA_CBC_SHA,
            TLS_RSA_WITH_NULL_MD5,
            TLS_RSA_WITH_NULL_SHA,
            TLS_RSA_WITH_NULL_SHA256,
            TLS_RSA_WITH_RC4_128_MD5,
            TLS_RSA_WITH_RC4_128_SHA,
            TLS_RSA_WITH_SEED_CBC_SHA,
            TLS_SHA256_SHA256,
            TLS_SHA384_SHA384,
            TLS_SM4_CCM_SM3,
            TLS_SM4_GCM_SM3,
            TLS_SRP_SHA_DSS_WITH_3DES_EDE_CBC_SHA,
            TLS_SRP_SHA_DSS_WITH_AES_128_CBC_SHA,
            TLS_SRP_SHA_DSS_WITH_AES_256_CBC_SHA,
            TLS_SRP_SHA_RSA_WITH_3DES_EDE_CBC_SHA,
            TLS_SRP_SHA_RSA_WITH_AES_128_CBC_SHA,
            TLS_SRP_SHA_RSA_WITH_AES_256_CBC_SHA,
            TLS_SRP_SHA_WITH_3DES_EDE_CBC_SHA,
            TLS_SRP_SHA_WITH_AES_128_CBC_SHA,
            TLS_SRP_SHA_WITH_AES_256_CBC_SHA
    );
    //</editor-fold>

    //<editor-fold desc="Static Accessors">
    public static TlsCipher aes128Ccm8Sha256() {
        return TLS_AES_128_CCM_8_SHA256;
    }

    public static TlsCipher aes128CcmSha256() {
        return TLS_AES_128_CCM_SHA256;
    }

    public static TlsCipher aes128GcmSha256() {
        return TLS_AES_128_GCM_SHA256;
    }

    public static TlsCipher aes256GcmSha384() {
        return TLS_AES_256_GCM_SHA384;
    }

    public static TlsCipher chacha20Poly1305Sha256() {
        return TLS_CHACHA20_POLY1305_SHA256;
    }

    public static TlsCipher dhAnonExportWithDes40CbcSha() {
        return TLS_DH_ANON_EXPORT_WITH_DES40_CBC_SHA;
    }

    public static TlsCipher dhAnonExportWithRc440Md5() {
        return TLS_DH_ANON_EXPORT_WITH_RC4_40_MD5;
    }

    public static TlsCipher dhAnonWithdesEdeCbcSha() {
        return TLS_DH_ANON_WITH_3DES_EDE_CBC_SHA;
    }

    public static TlsCipher dhAnonWithAes128CbcSha() {
        return TLS_DH_ANON_WITH_AES_128_CBC_SHA;
    }

    public static TlsCipher dhAnonWithAes128CbcSha256() {
        return TLS_DH_ANON_WITH_AES_128_CBC_SHA256;
    }

    public static TlsCipher dhAnonWithAes128GcmSha256() {
        return TLS_DH_ANON_WITH_AES_128_GCM_SHA256;
    }

    public static TlsCipher dhAnonWithAes256CbcSha() {
        return TLS_DH_ANON_WITH_AES_256_CBC_SHA;
    }

    public static TlsCipher dhAnonWithAes256CbcSha256() {
        return TLS_DH_ANON_WITH_AES_256_CBC_SHA256;
    }

    public static TlsCipher dhAnonWithAes256GcmSha384() {
        return TLS_DH_ANON_WITH_AES_256_GCM_SHA384;
    }

    public static TlsCipher dhAnonWithAria128CbcSha256() {
        return TLS_DH_ANON_WITH_ARIA_128_CBC_SHA256;
    }

    public static TlsCipher dhAnonWithAria128GcmSha256() {
        return TLS_DH_ANON_WITH_ARIA_128_GCM_SHA256;
    }

    public static TlsCipher dhAnonWithAria256CbcSha384() {
        return TLS_DH_ANON_WITH_ARIA_256_CBC_SHA384;
    }

    public static TlsCipher dhAnonWithAria256GcmSha384() {
        return TLS_DH_ANON_WITH_ARIA_256_GCM_SHA384;
    }

    public static TlsCipher dhAnonWithCamellia128CbcSha() {
        return TLS_DH_ANON_WITH_CAMELLIA_128_CBC_SHA;
    }

    public static TlsCipher dhAnonWithCamellia128CbcSha256() {
        return TLS_DH_ANON_WITH_CAMELLIA_128_CBC_SHA256;
    }

    public static TlsCipher dhAnonWithCamellia128GcmSha256() {
        return TLS_DH_ANON_WITH_CAMELLIA_128_GCM_SHA256;
    }

    public static TlsCipher dhAnonWithCamellia256CbcSha() {
        return TLS_DH_ANON_WITH_CAMELLIA_256_CBC_SHA;
    }

    public static TlsCipher dhAnonWithCamellia256CbcSha256() {
        return TLS_DH_ANON_WITH_CAMELLIA_256_CBC_SHA256;
    }

    public static TlsCipher dhAnonWithCamellia256GcmSha384() {
        return TLS_DH_ANON_WITH_CAMELLIA_256_GCM_SHA384;
    }

    public static TlsCipher dhAnonWithDesCbcSha() {
        return TLS_DH_ANON_WITH_DES_CBC_SHA;
    }

    public static TlsCipher dhAnonWithRc4128Md5() {
        return TLS_DH_ANON_WITH_RC4_128_MD5;
    }

    public static TlsCipher dhAnonWithSeedCbcSha() {
        return TLS_DH_ANON_WITH_SEED_CBC_SHA;
    }

    public static TlsCipher dhDssExportWithDes40CbcSha() {
        return TLS_DH_DSS_EXPORT_WITH_DES40_CBC_SHA;
    }

    public static TlsCipher dhDssWithdesEdeCbcSha() {
        return TLS_DH_DSS_WITH_3DES_EDE_CBC_SHA;
    }

    public static TlsCipher dhDssWithAes128CbcSha() {
        return TLS_DH_DSS_WITH_AES_128_CBC_SHA;
    }

    public static TlsCipher dhDssWithAes128CbcSha256() {
        return TLS_DH_DSS_WITH_AES_128_CBC_SHA256;
    }

    public static TlsCipher dhDssWithAes128GcmSha256() {
        return TLS_DH_DSS_WITH_AES_128_GCM_SHA256;
    }

    public static TlsCipher dhDssWithAes256CbcSha() {
        return TLS_DH_DSS_WITH_AES_256_CBC_SHA;
    }

    public static TlsCipher dhDssWithAes256CbcSha256() {
        return TLS_DH_DSS_WITH_AES_256_CBC_SHA256;
    }

    public static TlsCipher dhDssWithAes256GcmSha384() {
        return TLS_DH_DSS_WITH_AES_256_GCM_SHA384;
    }

    public static TlsCipher dhDssWithAria128CbcSha256() {
        return TLS_DH_DSS_WITH_ARIA_128_CBC_SHA256;
    }

    public static TlsCipher dhDssWithAria128GcmSha256() {
        return TLS_DH_DSS_WITH_ARIA_128_GCM_SHA256;
    }

    public static TlsCipher dhDssWithAria256CbcSha384() {
        return TLS_DH_DSS_WITH_ARIA_256_CBC_SHA384;
    }

    public static TlsCipher dhDssWithAria256GcmSha384() {
        return TLS_DH_DSS_WITH_ARIA_256_GCM_SHA384;
    }

    public static TlsCipher dhDssWithCamellia128CbcSha() {
        return TLS_DH_DSS_WITH_CAMELLIA_128_CBC_SHA;
    }

    public static TlsCipher dhDssWithCamellia128CbcSha256() {
        return TLS_DH_DSS_WITH_CAMELLIA_128_CBC_SHA256;
    }

    public static TlsCipher dhDssWithCamellia128GcmSha256() {
        return TLS_DH_DSS_WITH_CAMELLIA_128_GCM_SHA256;
    }

    public static TlsCipher dhDssWithCamellia256CbcSha() {
        return TLS_DH_DSS_WITH_CAMELLIA_256_CBC_SHA;
    }

    public static TlsCipher dhDssWithCamellia256CbcSha256() {
        return TLS_DH_DSS_WITH_CAMELLIA_256_CBC_SHA256;
    }

    public static TlsCipher dhDssWithCamellia256GcmSha384() {
        return TLS_DH_DSS_WITH_CAMELLIA_256_GCM_SHA384;
    }

    public static TlsCipher dhDssWithDesCbcSha() {
        return TLS_DH_DSS_WITH_DES_CBC_SHA;
    }

    public static TlsCipher dhDssWithSeedCbcSha() {
        return TLS_DH_DSS_WITH_SEED_CBC_SHA;
    }

    public static TlsCipher dheDssExportWithDes40CbcSha() {
        return TLS_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA;
    }

    public static TlsCipher dheDssWithdesEdeCbcSha() {
        return TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA;
    }

    public static TlsCipher dheDssWithAes128CbcSha() {
        return TLS_DHE_DSS_WITH_AES_128_CBC_SHA;
    }

    public static TlsCipher dheDssWithAes128CbcSha256() {
        return TLS_DHE_DSS_WITH_AES_128_CBC_SHA256;
    }

    public static TlsCipher dheDssWithAes128GcmSha256() {
        return TLS_DHE_DSS_WITH_AES_128_GCM_SHA256;
    }

    public static TlsCipher dheDssWithAes256CbcSha() {
        return TLS_DHE_DSS_WITH_AES_256_CBC_SHA;
    }

    public static TlsCipher dheDssWithAes256CbcSha256() {
        return TLS_DHE_DSS_WITH_AES_256_CBC_SHA256;
    }

    public static TlsCipher dheDssWithAes256GcmSha384() {
        return TLS_DHE_DSS_WITH_AES_256_GCM_SHA384;
    }

    public static TlsCipher dheDssWithAria128CbcSha256() {
        return TLS_DHE_DSS_WITH_ARIA_128_CBC_SHA256;
    }

    public static TlsCipher dheDssWithAria128GcmSha256() {
        return TLS_DHE_DSS_WITH_ARIA_128_GCM_SHA256;
    }

    public static TlsCipher dheDssWithAria256CbcSha384() {
        return TLS_DHE_DSS_WITH_ARIA_256_CBC_SHA384;
    }

    public static TlsCipher dheDssWithAria256GcmSha384() {
        return TLS_DHE_DSS_WITH_ARIA_256_GCM_SHA384;
    }

    public static TlsCipher dheDssWithCamellia128CbcSha() {
        return TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA;
    }

    public static TlsCipher dheDssWithCamellia128CbcSha256() {
        return TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA256;
    }

    public static TlsCipher dheDssWithCamellia128GcmSha256() {
        return TLS_DHE_DSS_WITH_CAMELLIA_128_GCM_SHA256;
    }

    public static TlsCipher dheDssWithCamellia256CbcSha() {
        return TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA;
    }

    public static TlsCipher dheDssWithCamellia256CbcSha256() {
        return TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA256;
    }

    public static TlsCipher dheDssWithCamellia256GcmSha384() {
        return TLS_DHE_DSS_WITH_CAMELLIA_256_GCM_SHA384;
    }

    public static TlsCipher dheDssWithDesCbcSha() {
        return TLS_DHE_DSS_WITH_DES_CBC_SHA;
    }

    public static TlsCipher dheDssWithSeedCbcSha() {
        return TLS_DHE_DSS_WITH_SEED_CBC_SHA;
    }

    public static TlsCipher dhePskWithdesEdeCbcSha() {
        return TLS_DHE_PSK_WITH_3DES_EDE_CBC_SHA;
    }

    public static TlsCipher dhePskWithAes128CbcSha() {
        return TLS_DHE_PSK_WITH_AES_128_CBC_SHA;
    }

    public static TlsCipher dhePskWithAes128CbcSha256() {
        return TLS_DHE_PSK_WITH_AES_128_CBC_SHA256;
    }

    public static TlsCipher dhePskWithAes128Ccm() {
        return TLS_DHE_PSK_WITH_AES_128_CCM;
    }

    public static TlsCipher dhePskWithAes128GcmSha256() {
        return TLS_DHE_PSK_WITH_AES_128_GCM_SHA256;
    }

    public static TlsCipher dhePskWithAes256CbcSha() {
        return TLS_DHE_PSK_WITH_AES_256_CBC_SHA;
    }

    public static TlsCipher dhePskWithAes256CbcSha384() {
        return TLS_DHE_PSK_WITH_AES_256_CBC_SHA384;
    }

    public static TlsCipher dhePskWithAes256Ccm() {
        return TLS_DHE_PSK_WITH_AES_256_CCM;
    }

    public static TlsCipher dhePskWithAes256GcmSha384() {
        return TLS_DHE_PSK_WITH_AES_256_GCM_SHA384;
    }

    public static TlsCipher dhePskWithAria128CbcSha256() {
        return TLS_DHE_PSK_WITH_ARIA_128_CBC_SHA256;
    }

    public static TlsCipher dhePskWithAria128GcmSha256() {
        return TLS_DHE_PSK_WITH_ARIA_128_GCM_SHA256;
    }

    public static TlsCipher dhePskWithAria256CbcSha384() {
        return TLS_DHE_PSK_WITH_ARIA_256_CBC_SHA384;
    }

    public static TlsCipher dhePskWithAria256GcmSha384() {
        return TLS_DHE_PSK_WITH_ARIA_256_GCM_SHA384;
    }

    public static TlsCipher dhePskWithCamellia128CbcSha256() {
        return TLS_DHE_PSK_WITH_CAMELLIA_128_CBC_SHA256;
    }

    public static TlsCipher dhePskWithCamellia128GcmSha256() {
        return TLS_DHE_PSK_WITH_CAMELLIA_128_GCM_SHA256;
    }

    public static TlsCipher dhePskWithCamellia256CbcSha384() {
        return TLS_DHE_PSK_WITH_CAMELLIA_256_CBC_SHA384;
    }

    public static TlsCipher dhePskWithCamellia256GcmSha384() {
        return TLS_DHE_PSK_WITH_CAMELLIA_256_GCM_SHA384;
    }

    public static TlsCipher dhePskWithChacha20Poly1305Sha256() {
        return TLS_DHE_PSK_WITH_CHACHA20_POLY1305_SHA256;
    }

    public static TlsCipher dhePskWithNoneSha() {
        return TLS_DHE_PSK_WITH_NULL_SHA;
    }

    public static TlsCipher dhePskWithNoneSha256() {
        return TLS_DHE_PSK_WITH_NULL_SHA256;
    }

    public static TlsCipher dhePskWithNoneSha384() {
        return TLS_DHE_PSK_WITH_NULL_SHA384;
    }

    public static TlsCipher dhePskWithRc4128Sha() {
        return TLS_DHE_PSK_WITH_RC4_128_SHA;
    }

    public static TlsCipher dheRsaExportWithDes40CbcSha() {
        return TLS_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA;
    }

    public static TlsCipher dheRsaWithdesEdeCbcSha() {
        return TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA;
    }

    public static TlsCipher dheRsaWithAes128CbcSha() {
        return TLS_DHE_RSA_WITH_AES_128_CBC_SHA;
    }

    public static TlsCipher dheRsaWithAes128CbcSha256() {
        return TLS_DHE_RSA_WITH_AES_128_CBC_SHA256;
    }

    public static TlsCipher dheRsaWithAes128Ccm() {
        return TLS_DHE_RSA_WITH_AES_128_CCM;
    }

    public static TlsCipher dheRsaWithAes128Ccm8() {
        return TLS_DHE_RSA_WITH_AES_128_CCM_8;
    }

    public static TlsCipher dheRsaWithAes128GcmSha256() {
        return TLS_DHE_RSA_WITH_AES_128_GCM_SHA256;
    }

    public static TlsCipher dheRsaWithAes256CbcSha() {
        return TLS_DHE_RSA_WITH_AES_256_CBC_SHA;
    }

    public static TlsCipher dheRsaWithAes256CbcSha256() {
        return TLS_DHE_RSA_WITH_AES_256_CBC_SHA256;
    }

    public static TlsCipher dheRsaWithAes256Ccm() {
        return TLS_DHE_RSA_WITH_AES_256_CCM;
    }

    public static TlsCipher dheRsaWithAes256Ccm8() {
        return TLS_DHE_RSA_WITH_AES_256_CCM_8;
    }

    public static TlsCipher dheRsaWithAes256GcmSha384() {
        return TLS_DHE_RSA_WITH_AES_256_GCM_SHA384;
    }

    public static TlsCipher dheRsaWithAria128CbcSha256() {
        return TLS_DHE_RSA_WITH_ARIA_128_CBC_SHA256;
    }

    public static TlsCipher dheRsaWithAria128GcmSha256() {
        return TLS_DHE_RSA_WITH_ARIA_128_GCM_SHA256;
    }

    public static TlsCipher dheRsaWithAria256CbcSha384() {
        return TLS_DHE_RSA_WITH_ARIA_256_CBC_SHA384;
    }

    public static TlsCipher dheRsaWithAria256GcmSha384() {
        return TLS_DHE_RSA_WITH_ARIA_256_GCM_SHA384;
    }

    public static TlsCipher dheRsaWithCamellia128CbcSha() {
        return TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA;
    }

    public static TlsCipher dheRsaWithCamellia128CbcSha256() {
        return TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA256;
    }

    public static TlsCipher dheRsaWithCamellia128GcmSha256() {
        return TLS_DHE_RSA_WITH_CAMELLIA_128_GCM_SHA256;
    }

    public static TlsCipher dheRsaWithCamellia256CbcSha() {
        return TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA;
    }

    public static TlsCipher dheRsaWithCamellia256CbcSha256() {
        return TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA256;
    }

    public static TlsCipher dheRsaWithCamellia256GcmSha384() {
        return TLS_DHE_RSA_WITH_CAMELLIA_256_GCM_SHA384;
    }

    public static TlsCipher dheRsaWithChacha20Poly1305Sha256() {
        return TLS_DHE_RSA_WITH_CHACHA20_POLY1305_SHA256;
    }

    public static TlsCipher dheRsaWithDesCbcSha() {
        return TLS_DHE_RSA_WITH_DES_CBC_SHA;
    }

    public static TlsCipher dheRsaWithSeedCbcSha() {
        return TLS_DHE_RSA_WITH_SEED_CBC_SHA;
    }

    public static TlsCipher dhRsaExportWithDes40CbcSha() {
        return TLS_DH_RSA_EXPORT_WITH_DES40_CBC_SHA;
    }

    public static TlsCipher dhRsaWithdesEdeCbcSha() {
        return TLS_DH_RSA_WITH_3DES_EDE_CBC_SHA;
    }

    public static TlsCipher dhRsaWithAes128CbcSha() {
        return TLS_DH_RSA_WITH_AES_128_CBC_SHA;
    }

    public static TlsCipher dhRsaWithAes128CbcSha256() {
        return TLS_DH_RSA_WITH_AES_128_CBC_SHA256;
    }

    public static TlsCipher dhRsaWithAes128GcmSha256() {
        return TLS_DH_RSA_WITH_AES_128_GCM_SHA256;
    }

    public static TlsCipher dhRsaWithAes256CbcSha() {
        return TLS_DH_RSA_WITH_AES_256_CBC_SHA;
    }

    public static TlsCipher dhRsaWithAes256CbcSha256() {
        return TLS_DH_RSA_WITH_AES_256_CBC_SHA256;
    }

    public static TlsCipher dhRsaWithAes256GcmSha384() {
        return TLS_DH_RSA_WITH_AES_256_GCM_SHA384;
    }

    public static TlsCipher dhRsaWithAria128CbcSha256() {
        return TLS_DH_RSA_WITH_ARIA_128_CBC_SHA256;
    }

    public static TlsCipher dhRsaWithAria128GcmSha256() {
        return TLS_DH_RSA_WITH_ARIA_128_GCM_SHA256;
    }

    public static TlsCipher dhRsaWithAria256CbcSha384() {
        return TLS_DH_RSA_WITH_ARIA_256_CBC_SHA384;
    }

    public static TlsCipher dhRsaWithAria256GcmSha384() {
        return TLS_DH_RSA_WITH_ARIA_256_GCM_SHA384;
    }

    public static TlsCipher dhRsaWithCamellia128CbcSha() {
        return TLS_DH_RSA_WITH_CAMELLIA_128_CBC_SHA;
    }

    public static TlsCipher dhRsaWithCamellia128CbcSha256() {
        return TLS_DH_RSA_WITH_CAMELLIA_128_CBC_SHA256;
    }

    public static TlsCipher dhRsaWithCamellia128GcmSha256() {
        return TLS_DH_RSA_WITH_CAMELLIA_128_GCM_SHA256;
    }

    public static TlsCipher dhRsaWithCamellia256CbcSha() {
        return TLS_DH_RSA_WITH_CAMELLIA_256_CBC_SHA;
    }

    public static TlsCipher dhRsaWithCamellia256CbcSha256() {
        return TLS_DH_RSA_WITH_CAMELLIA_256_CBC_SHA256;
    }

    public static TlsCipher dhRsaWithCamellia256GcmSha384() {
        return TLS_DH_RSA_WITH_CAMELLIA_256_GCM_SHA384;
    }

    public static TlsCipher dhRsaWithDesCbcSha() {
        return TLS_DH_RSA_WITH_DES_CBC_SHA;
    }

    public static TlsCipher dhRsaWithSeedCbcSha() {
        return TLS_DH_RSA_WITH_SEED_CBC_SHA;
    }

    public static TlsCipher eccpwdWithAes128CcmSha256() {
        return TLS_ECCPWD_WITH_AES_128_CCM_SHA256;
    }

    public static TlsCipher eccpwdWithAes128GcmSha256() {
        return TLS_ECCPWD_WITH_AES_128_GCM_SHA256;
    }

    public static TlsCipher eccpwdWithAes256CcmSha384() {
        return TLS_ECCPWD_WITH_AES_256_CCM_SHA384;
    }

    public static TlsCipher eccpwdWithAes256GcmSha384() {
        return TLS_ECCPWD_WITH_AES_256_GCM_SHA384;
    }

    public static TlsCipher ecdhAnonWithdesEdeCbcSha() {
        return TLS_ECDH_ANON_WITH_3DES_EDE_CBC_SHA;
    }

    public static TlsCipher ecdhAnonWithAes128CbcSha() {
        return TLS_ECDH_ANON_WITH_AES_128_CBC_SHA;
    }

    public static TlsCipher ecdhAnonWithAes256CbcSha() {
        return TLS_ECDH_ANON_WITH_AES_256_CBC_SHA;
    }

    public static TlsCipher ecdhAnonWithNoneSha() {
        return TLS_ECDH_ANON_WITH_NULL_SHA;
    }

    public static TlsCipher ecdhAnonWithRc4128Sha() {
        return TLS_ECDH_ANON_WITH_RC4_128_SHA;
    }

    public static TlsCipher ecdhEcdsaWithdesEdeCbcSha() {
        return TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA;
    }

    public static TlsCipher ecdhEcdsaWithAes128CbcSha() {
        return TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA;
    }

    public static TlsCipher ecdhEcdsaWithAes128CbcSha256() {
        return TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256;
    }

    public static TlsCipher ecdhEcdsaWithAes128GcmSha256() {
        return TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256;
    }

    public static TlsCipher ecdhEcdsaWithAes256CbcSha() {
        return TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA;
    }

    public static TlsCipher ecdhEcdsaWithAes256CbcSha384() {
        return TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384;
    }

    public static TlsCipher ecdhEcdsaWithAes256GcmSha384() {
        return TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384;
    }

    public static TlsCipher ecdhEcdsaWithAria128CbcSha256() {
        return TLS_ECDH_ECDSA_WITH_ARIA_128_CBC_SHA256;
    }

    public static TlsCipher ecdhEcdsaWithAria128GcmSha256() {
        return TLS_ECDH_ECDSA_WITH_ARIA_128_GCM_SHA256;
    }

    public static TlsCipher ecdhEcdsaWithAria256CbcSha384() {
        return TLS_ECDH_ECDSA_WITH_ARIA_256_CBC_SHA384;
    }

    public static TlsCipher ecdhEcdsaWithAria256GcmSha384() {
        return TLS_ECDH_ECDSA_WITH_ARIA_256_GCM_SHA384;
    }

    public static TlsCipher ecdhEcdsaWithCamellia128CbcSha256() {
        return TLS_ECDH_ECDSA_WITH_CAMELLIA_128_CBC_SHA256;
    }

    public static TlsCipher ecdhEcdsaWithCamellia128GcmSha256() {
        return TLS_ECDH_ECDSA_WITH_CAMELLIA_128_GCM_SHA256;
    }

    public static TlsCipher ecdhEcdsaWithCamellia256CbcSha384() {
        return TLS_ECDH_ECDSA_WITH_CAMELLIA_256_CBC_SHA384;
    }

    public static TlsCipher ecdhEcdsaWithCamellia256GcmSha384() {
        return TLS_ECDH_ECDSA_WITH_CAMELLIA_256_GCM_SHA384;
    }

    public static TlsCipher ecdhEcdsaWithNoneSha() {
        return TLS_ECDH_ECDSA_WITH_NULL_SHA;
    }

    public static TlsCipher ecdhEcdsaWithRc4128Sha() {
        return TLS_ECDH_ECDSA_WITH_RC4_128_SHA;
    }

    public static TlsCipher ecdheEcdsaWithdesEdeCbcSha() {
        return TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA;
    }

    public static TlsCipher ecdheEcdsaWithAes128CbcSha() {
        return TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA;
    }

    public static TlsCipher ecdheEcdsaWithAes128CbcSha256() {
        return TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256;
    }

    public static TlsCipher ecdheEcdsaWithAes128Ccm() {
        return TLS_ECDHE_ECDSA_WITH_AES_128_CCM;
    }

    public static TlsCipher ecdheEcdsaWithAes128Ccm8() {
        return TLS_ECDHE_ECDSA_WITH_AES_128_CCM_8;
    }

    public static TlsCipher ecdheEcdsaWithAes128GcmSha256() {
        return TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256;
    }

    public static TlsCipher ecdheEcdsaWithAes256CbcSha() {
        return TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA;
    }

    public static TlsCipher ecdheEcdsaWithAes256CbcSha384() {
        return TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384;
    }

    public static TlsCipher ecdheEcdsaWithAes256Ccm() {
        return TLS_ECDHE_ECDSA_WITH_AES_256_CCM;
    }

    public static TlsCipher ecdheEcdsaWithAes256Ccm8() {
        return TLS_ECDHE_ECDSA_WITH_AES_256_CCM_8;
    }

    public static TlsCipher ecdheEcdsaWithAes256GcmSha384() {
        return TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384;
    }

    public static TlsCipher ecdheEcdsaWithAria128CbcSha256() {
        return TLS_ECDHE_ECDSA_WITH_ARIA_128_CBC_SHA256;
    }

    public static TlsCipher ecdheEcdsaWithAria128GcmSha256() {
        return TLS_ECDHE_ECDSA_WITH_ARIA_128_GCM_SHA256;
    }

    public static TlsCipher ecdheEcdsaWithAria256CbcSha384() {
        return TLS_ECDHE_ECDSA_WITH_ARIA_256_CBC_SHA384;
    }

    public static TlsCipher ecdheEcdsaWithAria256GcmSha384() {
        return TLS_ECDHE_ECDSA_WITH_ARIA_256_GCM_SHA384;
    }

    public static TlsCipher ecdheEcdsaWithCamellia128CbcSha256() {
        return TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_CBC_SHA256;
    }

    public static TlsCipher ecdheEcdsaWithCamellia128GcmSha256() {
        return TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_GCM_SHA256;
    }

    public static TlsCipher ecdheEcdsaWithCamellia256CbcSha384() {
        return TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_CBC_SHA384;
    }

    public static TlsCipher ecdheEcdsaWithCamellia256GcmSha384() {
        return TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_GCM_SHA384;
    }

    public static TlsCipher ecdheEcdsaWithChacha20Poly1305Sha256() {
        return TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256;
    }

    public static TlsCipher ecdheEcdsaWithNoneSha() {
        return TLS_ECDHE_ECDSA_WITH_NULL_SHA;
    }

    public static TlsCipher ecdheEcdsaWithRc4128Sha() {
        return TLS_ECDHE_ECDSA_WITH_RC4_128_SHA;
    }

    public static TlsCipher ecdhePskWithdesEdeCbcSha() {
        return TLS_ECDHE_PSK_WITH_3DES_EDE_CBC_SHA;
    }

    public static TlsCipher ecdhePskWithAes128CbcSha() {
        return TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA;
    }

    public static TlsCipher ecdhePskWithAes128CbcSha256() {
        return TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA256;
    }

    public static TlsCipher ecdhePskWithAes128Ccm8Sha256() {
        return TLS_ECDHE_PSK_WITH_AES_128_CCM_8_SHA256;
    }

    public static TlsCipher ecdhePskWithAes128CcmSha256() {
        return TLS_ECDHE_PSK_WITH_AES_128_CCM_SHA256;
    }

    public static TlsCipher ecdhePskWithAes128GcmSha256() {
        return TLS_ECDHE_PSK_WITH_AES_128_GCM_SHA256;
    }

    public static TlsCipher ecdhePskWithAes256CbcSha() {
        return TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA;
    }

    public static TlsCipher ecdhePskWithAes256CbcSha384() {
        return TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA384;
    }

    public static TlsCipher ecdhePskWithAes256GcmSha384() {
        return TLS_ECDHE_PSK_WITH_AES_256_GCM_SHA384;
    }

    public static TlsCipher ecdhePskWithAria128CbcSha256() {
        return TLS_ECDHE_PSK_WITH_ARIA_128_CBC_SHA256;
    }

    public static TlsCipher ecdhePskWithAria256CbcSha384() {
        return TLS_ECDHE_PSK_WITH_ARIA_256_CBC_SHA384;
    }

    public static TlsCipher ecdhePskWithCamellia128CbcSha256() {
        return TLS_ECDHE_PSK_WITH_CAMELLIA_128_CBC_SHA256;
    }

    public static TlsCipher ecdhePskWithCamellia256CbcSha384() {
        return TLS_ECDHE_PSK_WITH_CAMELLIA_256_CBC_SHA384;
    }

    public static TlsCipher ecdhePskWithChacha20Poly1305Sha256() {
        return TLS_ECDHE_PSK_WITH_CHACHA20_POLY1305_SHA256;
    }

    public static TlsCipher ecdhePskWithNoneSha() {
        return TLS_ECDHE_PSK_WITH_NULL_SHA;
    }

    public static TlsCipher ecdhePskWithNoneSha256() {
        return TLS_ECDHE_PSK_WITH_NULL_SHA256;
    }

    public static TlsCipher ecdhePskWithNoneSha384() {
        return TLS_ECDHE_PSK_WITH_NULL_SHA384;
    }

    public static TlsCipher ecdhePskWithRc4128Sha() {
        return TLS_ECDHE_PSK_WITH_RC4_128_SHA;
    }

    public static TlsCipher ecdheRsaWithdesEdeCbcSha() {
        return TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA;
    }

    public static TlsCipher ecdheRsaWithAes128CbcSha() {
        return TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA;
    }

    public static TlsCipher ecdheRsaWithAes128CbcSha256() {
        return TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256;
    }

    public static TlsCipher ecdheRsaWithAes128GcmSha256() {
        return TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256;
    }

    public static TlsCipher ecdheRsaWithAes256CbcSha() {
        return TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA;
    }

    public static TlsCipher ecdheRsaWithAes256CbcSha384() {
        return TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384;
    }

    public static TlsCipher ecdheRsaWithAes256GcmSha384() {
        return TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384;
    }

    public static TlsCipher ecdheRsaWithAria128CbcSha256() {
        return TLS_ECDHE_RSA_WITH_ARIA_128_CBC_SHA256;
    }

    public static TlsCipher ecdheRsaWithAria128GcmSha256() {
        return TLS_ECDHE_RSA_WITH_ARIA_128_GCM_SHA256;
    }

    public static TlsCipher ecdheRsaWithAria256CbcSha384() {
        return TLS_ECDHE_RSA_WITH_ARIA_256_CBC_SHA384;
    }

    public static TlsCipher ecdheRsaWithAria256GcmSha384() {
        return TLS_ECDHE_RSA_WITH_ARIA_256_GCM_SHA384;
    }

    public static TlsCipher ecdheRsaWithCamellia128CbcSha256() {
        return TLS_ECDHE_RSA_WITH_CAMELLIA_128_CBC_SHA256;
    }

    public static TlsCipher ecdheRsaWithCamellia128GcmSha256() {
        return TLS_ECDHE_RSA_WITH_CAMELLIA_128_GCM_SHA256;
    }

    public static TlsCipher ecdheRsaWithCamellia256CbcSha384() {
        return TLS_ECDHE_RSA_WITH_CAMELLIA_256_CBC_SHA384;
    }

    public static TlsCipher ecdheRsaWithCamellia256GcmSha384() {
        return TLS_ECDHE_RSA_WITH_CAMELLIA_256_GCM_SHA384;
    }

    public static TlsCipher ecdheRsaWithChacha20Poly1305Sha256() {
        return TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256;
    }

    public static TlsCipher ecdheRsaWithNoneSha() {
        return TLS_ECDHE_RSA_WITH_NULL_SHA;
    }

    public static TlsCipher ecdheRsaWithRc4128Sha() {
        return TLS_ECDHE_RSA_WITH_RC4_128_SHA;
    }

    public static TlsCipher ecdhRsaWithdesEdeCbcSha() {
        return TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA;
    }

    public static TlsCipher ecdhRsaWithAes128CbcSha() {
        return TLS_ECDH_RSA_WITH_AES_128_CBC_SHA;
    }

    public static TlsCipher ecdhRsaWithAes128CbcSha256() {
        return TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256;
    }

    public static TlsCipher ecdhRsaWithAes128GcmSha256() {
        return TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256;
    }

    public static TlsCipher ecdhRsaWithAes256CbcSha() {
        return TLS_ECDH_RSA_WITH_AES_256_CBC_SHA;
    }

    public static TlsCipher ecdhRsaWithAes256CbcSha384() {
        return TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384;
    }

    public static TlsCipher ecdhRsaWithAes256GcmSha384() {
        return TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384;
    }

    public static TlsCipher ecdhRsaWithAria128CbcSha256() {
        return TLS_ECDH_RSA_WITH_ARIA_128_CBC_SHA256;
    }

    public static TlsCipher ecdhRsaWithAria128GcmSha256() {
        return TLS_ECDH_RSA_WITH_ARIA_128_GCM_SHA256;
    }

    public static TlsCipher ecdhRsaWithAria256CbcSha384() {
        return TLS_ECDH_RSA_WITH_ARIA_256_CBC_SHA384;
    }

    public static TlsCipher ecdhRsaWithAria256GcmSha384() {
        return TLS_ECDH_RSA_WITH_ARIA_256_GCM_SHA384;
    }

    public static TlsCipher ecdhRsaWithCamellia128CbcSha256() {
        return TLS_ECDH_RSA_WITH_CAMELLIA_128_CBC_SHA256;
    }

    public static TlsCipher ecdhRsaWithCamellia128GcmSha256() {
        return TLS_ECDH_RSA_WITH_CAMELLIA_128_GCM_SHA256;
    }

    public static TlsCipher ecdhRsaWithCamellia256CbcSha384() {
        return TLS_ECDH_RSA_WITH_CAMELLIA_256_CBC_SHA384;
    }

    public static TlsCipher ecdhRsaWithCamellia256GcmSha384() {
        return TLS_ECDH_RSA_WITH_CAMELLIA_256_GCM_SHA384;
    }

    public static TlsCipher ecdhRsaWithNoneSha() {
        return TLS_ECDH_RSA_WITH_NULL_SHA;
    }

    public static TlsCipher ecdhRsaWithRc4128Sha() {
        return TLS_ECDH_RSA_WITH_RC4_128_SHA;
    }

    public static TlsCipher gostr256256With28147CntImit() {
        return TLS_GOSTR341112_256_WITH_28147_CNT_IMIT;
    }

    public static TlsCipher gostr256256WithKuznyechikCtrOmac() {
        return TLS_GOSTR341112_256_WITH_KUZNYECHIK_CTR_OMAC;
    }

    public static TlsCipher gostr256256WithKuznyechikMgmL() {
        return TLS_GOSTR341112_256_WITH_KUZNYECHIK_MGM_L;
    }

    public static TlsCipher gostr256256WithKuznyechikMgmS() {
        return TLS_GOSTR341112_256_WITH_KUZNYECHIK_MGM_S;
    }

    public static TlsCipher gostr256256WithMagmaCtrOmac() {
        return TLS_GOSTR341112_256_WITH_MAGMA_CTR_OMAC;
    }

    public static TlsCipher gostr256256WithMagmaMgmL() {
        return TLS_GOSTR341112_256_WITH_MAGMA_MGM_L;
    }

    public static TlsCipher gostr256256WithMagmaMgmS() {
        return TLS_GOSTR341112_256_WITH_MAGMA_MGM_S;
    }

    public static TlsCipher krb5ExportWithDesCbc40Md5() {
        return TLS_KRB5_EXPORT_WITH_DES_CBC_40_MD5;
    }

    public static TlsCipher krb5ExportWithDesCbc40Sha() {
        return TLS_KRB5_EXPORT_WITH_DES_CBC_40_SHA;
    }

    public static TlsCipher krb5ExportWithRc2Cbc40Md5() {
        return TLS_KRB5_EXPORT_WITH_RC2_CBC_40_MD5;
    }

    public static TlsCipher krb5ExportWithRc2Cbc40Sha() {
        return TLS_KRB5_EXPORT_WITH_RC2_CBC_40_SHA;
    }

    public static TlsCipher krb5ExportWithRc440Md5() {
        return TLS_KRB5_EXPORT_WITH_RC4_40_MD5;
    }

    public static TlsCipher krb5ExportWithRc440Sha() {
        return TLS_KRB5_EXPORT_WITH_RC4_40_SHA;
    }

    public static TlsCipher krb5WithdesEdeCbcMd5() {
        return TLS_KRB5_WITH_3DES_EDE_CBC_MD5;
    }

    public static TlsCipher krb5WithdesEdeCbcSha() {
        return TLS_KRB5_WITH_3DES_EDE_CBC_SHA;
    }

    public static TlsCipher krb5WithDesCbcMd5() {
        return TLS_KRB5_WITH_DES_CBC_MD5;
    }

    public static TlsCipher krb5WithDesCbcSha() {
        return TLS_KRB5_WITH_DES_CBC_SHA;
    }

    public static TlsCipher krb5WithIdeaCbcMd5() {
        return TLS_KRB5_WITH_IDEA_CBC_MD5;
    }

    public static TlsCipher krb5WithIdeaCbcSha() {
        return TLS_KRB5_WITH_IDEA_CBC_SHA;
    }

    public static TlsCipher krb5WithRc4128Md5() {
        return TLS_KRB5_WITH_RC4_128_MD5;
    }

    public static TlsCipher krb5WithRc4128Sha() {
        return TLS_KRB5_WITH_RC4_128_SHA;
    }

    public static TlsCipher noneWithNoneNone() {
        return TLS_NULL_WITH_NULL_NULL;
    }

    public static TlsCipher pskDheWithAes128Ccm8() {
        return TLS_PSK_DHE_WITH_AES_128_CCM_8;
    }

    public static TlsCipher pskDheWithAes256Ccm8() {
        return TLS_PSK_DHE_WITH_AES_256_CCM_8;
    }

    public static TlsCipher pskWithdesEdeCbcSha() {
        return TLS_PSK_WITH_3DES_EDE_CBC_SHA;
    }

    public static TlsCipher pskWithAes128CbcSha() {
        return TLS_PSK_WITH_AES_128_CBC_SHA;
    }

    public static TlsCipher pskWithAes128CbcSha256() {
        return TLS_PSK_WITH_AES_128_CBC_SHA256;
    }

    public static TlsCipher pskWithAes128Ccm() {
        return TLS_PSK_WITH_AES_128_CCM;
    }

    public static TlsCipher pskWithAes128Ccm8() {
        return TLS_PSK_WITH_AES_128_CCM_8;
    }

    public static TlsCipher pskWithAes128GcmSha256() {
        return TLS_PSK_WITH_AES_128_GCM_SHA256;
    }

    public static TlsCipher pskWithAes256CbcSha() {
        return TLS_PSK_WITH_AES_256_CBC_SHA;
    }

    public static TlsCipher pskWithAes256CbcSha384() {
        return TLS_PSK_WITH_AES_256_CBC_SHA384;
    }

    public static TlsCipher pskWithAes256Ccm() {
        return TLS_PSK_WITH_AES_256_CCM;
    }

    public static TlsCipher pskWithAes256Ccm8() {
        return TLS_PSK_WITH_AES_256_CCM_8;
    }

    public static TlsCipher pskWithAes256GcmSha384() {
        return TLS_PSK_WITH_AES_256_GCM_SHA384;
    }

    public static TlsCipher pskWithAria128CbcSha256() {
        return TLS_PSK_WITH_ARIA_128_CBC_SHA256;
    }

    public static TlsCipher pskWithAria128GcmSha256() {
        return TLS_PSK_WITH_ARIA_128_GCM_SHA256;
    }

    public static TlsCipher pskWithAria256CbcSha384() {
        return TLS_PSK_WITH_ARIA_256_CBC_SHA384;
    }

    public static TlsCipher pskWithAria256GcmSha384() {
        return TLS_PSK_WITH_ARIA_256_GCM_SHA384;
    }

    public static TlsCipher pskWithCamellia128CbcSha256() {
        return TLS_PSK_WITH_CAMELLIA_128_CBC_SHA256;
    }

    public static TlsCipher pskWithCamellia128GcmSha256() {
        return TLS_PSK_WITH_CAMELLIA_128_GCM_SHA256;
    }

    public static TlsCipher pskWithCamellia256CbcSha384() {
        return TLS_PSK_WITH_CAMELLIA_256_CBC_SHA384;
    }

    public static TlsCipher pskWithCamellia256GcmSha384() {
        return TLS_PSK_WITH_CAMELLIA_256_GCM_SHA384;
    }

    public static TlsCipher pskWithChacha20Poly1305Sha256() {
        return TLS_PSK_WITH_CHACHA20_POLY1305_SHA256;
    }

    public static TlsCipher pskWithNoneSha() {
        return TLS_PSK_WITH_NULL_SHA;
    }

    public static TlsCipher pskWithNoneSha256() {
        return TLS_PSK_WITH_NULL_SHA256;
    }

    public static TlsCipher pskWithNoneSha384() {
        return TLS_PSK_WITH_NULL_SHA384;
    }

    public static TlsCipher pskWithRc4128Sha() {
        return TLS_PSK_WITH_RC4_128_SHA;
    }

    public static TlsCipher rsaExportWithDes40CbcSha() {
        return TLS_RSA_EXPORT_WITH_DES40_CBC_SHA;
    }

    public static TlsCipher rsaExportWithRc2Cbc40Md5() {
        return TLS_RSA_EXPORT_WITH_RC2_CBC_40_MD5;
    }

    public static TlsCipher rsaExportWithRc440Md5() {
        return TLS_RSA_EXPORT_WITH_RC4_40_MD5;
    }

    public static TlsCipher rsaPskWithdesEdeCbcSha() {
        return TLS_RSA_PSK_WITH_3DES_EDE_CBC_SHA;
    }

    public static TlsCipher rsaPskWithAes128CbcSha() {
        return TLS_RSA_PSK_WITH_AES_128_CBC_SHA;
    }

    public static TlsCipher rsaPskWithAes128CbcSha256() {
        return TLS_RSA_PSK_WITH_AES_128_CBC_SHA256;
    }

    public static TlsCipher rsaPskWithAes128GcmSha256() {
        return TLS_RSA_PSK_WITH_AES_128_GCM_SHA256;
    }

    public static TlsCipher rsaPskWithAes256CbcSha() {
        return TLS_RSA_PSK_WITH_AES_256_CBC_SHA;
    }

    public static TlsCipher rsaPskWithAes256CbcSha384() {
        return TLS_RSA_PSK_WITH_AES_256_CBC_SHA384;
    }

    public static TlsCipher rsaPskWithAes256GcmSha384() {
        return TLS_RSA_PSK_WITH_AES_256_GCM_SHA384;
    }

    public static TlsCipher rsaPskWithAria128CbcSha256() {
        return TLS_RSA_PSK_WITH_ARIA_128_CBC_SHA256;
    }

    public static TlsCipher rsaPskWithAria128GcmSha256() {
        return TLS_RSA_PSK_WITH_ARIA_128_GCM_SHA256;
    }

    public static TlsCipher rsaPskWithAria256CbcSha384() {
        return TLS_RSA_PSK_WITH_ARIA_256_CBC_SHA384;
    }

    public static TlsCipher rsaPskWithAria256GcmSha384() {
        return TLS_RSA_PSK_WITH_ARIA_256_GCM_SHA384;
    }

    public static TlsCipher rsaPskWithCamellia128CbcSha256() {
        return TLS_RSA_PSK_WITH_CAMELLIA_128_CBC_SHA256;
    }

    public static TlsCipher rsaPskWithCamellia128GcmSha256() {
        return TLS_RSA_PSK_WITH_CAMELLIA_128_GCM_SHA256;
    }

    public static TlsCipher rsaPskWithCamellia256CbcSha384() {
        return TLS_RSA_PSK_WITH_CAMELLIA_256_CBC_SHA384;
    }

    public static TlsCipher rsaPskWithCamellia256GcmSha384() {
        return TLS_RSA_PSK_WITH_CAMELLIA_256_GCM_SHA384;
    }

    public static TlsCipher rsaPskWithChacha20Poly1305Sha256() {
        return TLS_RSA_PSK_WITH_CHACHA20_POLY1305_SHA256;
    }

    public static TlsCipher rsaPskWithNoneSha() {
        return TLS_RSA_PSK_WITH_NULL_SHA;
    }

    public static TlsCipher rsaPskWithNoneSha256() {
        return TLS_RSA_PSK_WITH_NULL_SHA256;
    }

    public static TlsCipher rsaPskWithNoneSha384() {
        return TLS_RSA_PSK_WITH_NULL_SHA384;
    }

    public static TlsCipher rsaPskWithRc4128Sha() {
        return TLS_RSA_PSK_WITH_RC4_128_SHA;
    }

    public static TlsCipher rsaWithdesEdeCbcSha() {
        return TLS_RSA_WITH_3DES_EDE_CBC_SHA;
    }

    public static TlsCipher rsaWithAes128CbcSha() {
        return TLS_RSA_WITH_AES_128_CBC_SHA;
    }

    public static TlsCipher rsaWithAes128CbcSha256() {
        return TLS_RSA_WITH_AES_128_CBC_SHA256;
    }

    public static TlsCipher rsaWithAes128Ccm() {
        return TLS_RSA_WITH_AES_128_CCM;
    }

    public static TlsCipher rsaWithAes128Ccm8() {
        return TLS_RSA_WITH_AES_128_CCM_8;
    }

    public static TlsCipher rsaWithAes128GcmSha256() {
        return TLS_RSA_WITH_AES_128_GCM_SHA256;
    }

    public static TlsCipher rsaWithAes256CbcSha() {
        return TLS_RSA_WITH_AES_256_CBC_SHA;
    }

    public static TlsCipher rsaWithAes256CbcSha256() {
        return TLS_RSA_WITH_AES_256_CBC_SHA256;
    }

    public static TlsCipher rsaWithAes256Ccm() {
        return TLS_RSA_WITH_AES_256_CCM;
    }

    public static TlsCipher rsaWithAes256Ccm8() {
        return TLS_RSA_WITH_AES_256_CCM_8;
    }

    public static TlsCipher rsaWithAes256GcmSha384() {
        return TLS_RSA_WITH_AES_256_GCM_SHA384;
    }

    public static TlsCipher rsaWithAria128CbcSha256() {
        return TLS_RSA_WITH_ARIA_128_CBC_SHA256;
    }

    public static TlsCipher rsaWithAria128GcmSha256() {
        return TLS_RSA_WITH_ARIA_128_GCM_SHA256;
    }

    public static TlsCipher rsaWithAria256CbcSha384() {
        return TLS_RSA_WITH_ARIA_256_CBC_SHA384;
    }

    public static TlsCipher rsaWithAria256GcmSha384() {
        return TLS_RSA_WITH_ARIA_256_GCM_SHA384;
    }

    public static TlsCipher rsaWithCamellia128CbcSha() {
        return TLS_RSA_WITH_CAMELLIA_128_CBC_SHA;
    }

    public static TlsCipher rsaWithCamellia128CbcSha256() {
        return TLS_RSA_WITH_CAMELLIA_128_CBC_SHA256;
    }

    public static TlsCipher rsaWithCamellia128GcmSha256() {
        return TLS_RSA_WITH_CAMELLIA_128_GCM_SHA256;
    }

    public static TlsCipher rsaWithCamellia256CbcSha() {
        return TLS_RSA_WITH_CAMELLIA_256_CBC_SHA;
    }

    public static TlsCipher rsaWithCamellia256CbcSha256() {
        return TLS_RSA_WITH_CAMELLIA_256_CBC_SHA256;
    }

    public static TlsCipher rsaWithCamellia256GcmSha384() {
        return TLS_RSA_WITH_CAMELLIA_256_GCM_SHA384;
    }

    public static TlsCipher rsaWithDesCbcSha() {
        return TLS_RSA_WITH_DES_CBC_SHA;
    }

    public static TlsCipher rsaWithIdeaCbcSha() {
        return TLS_RSA_WITH_IDEA_CBC_SHA;
    }

    public static TlsCipher rsaWithNoneMd5() {
        return TLS_RSA_WITH_NULL_MD5;
    }

    public static TlsCipher rsaWithNoneSha() {
        return TLS_RSA_WITH_NULL_SHA;
    }

    public static TlsCipher rsaWithNoneSha256() {
        return TLS_RSA_WITH_NULL_SHA256;
    }

    public static TlsCipher rsaWithRc4128Md5() {
        return TLS_RSA_WITH_RC4_128_MD5;
    }

    public static TlsCipher rsaWithRc4128Sha() {
        return TLS_RSA_WITH_RC4_128_SHA;
    }

    public static TlsCipher rsaWithSeedCbcSha() {
        return TLS_RSA_WITH_SEED_CBC_SHA;
    }

    public static TlsCipher sha256Sha256() {
        return TLS_SHA256_SHA256;
    }

    public static TlsCipher sha384Sha384() {
        return TLS_SHA384_SHA384;
    }

    public static TlsCipher sm4CcmSm3() {
        return TLS_SM4_CCM_SM3;
    }

    public static TlsCipher sm4GcmSm3() {
        return TLS_SM4_GCM_SM3;
    }

    public static TlsCipher srpShaDssWithdesEdeCbcSha() {
        return TLS_SRP_SHA_DSS_WITH_3DES_EDE_CBC_SHA;
    }

    public static TlsCipher srpShaDssWithAes128CbcSha() {
        return TLS_SRP_SHA_DSS_WITH_AES_128_CBC_SHA;
    }

    public static TlsCipher srpShaDssWithAes256CbcSha() {
        return TLS_SRP_SHA_DSS_WITH_AES_256_CBC_SHA;
    }

    public static TlsCipher srpShaRsaWithdesEdeCbcSha() {
        return TLS_SRP_SHA_RSA_WITH_3DES_EDE_CBC_SHA;
    }

    public static TlsCipher srpShaRsaWithAes128CbcSha() {
        return TLS_SRP_SHA_RSA_WITH_AES_128_CBC_SHA;
    }

    public static TlsCipher srpShaRsaWithAes256CbcSha() {
        return TLS_SRP_SHA_RSA_WITH_AES_256_CBC_SHA;
    }

    public static TlsCipher srpShaWithdesEdeCbcSha() {
        return TLS_SRP_SHA_WITH_3DES_EDE_CBC_SHA;
    }

    public static TlsCipher srpShaWithAes128CbcSha() {
        return TLS_SRP_SHA_WITH_AES_128_CBC_SHA;
    }

    public static TlsCipher srpShaWithAes256CbcSha() {
        return TLS_SRP_SHA_WITH_AES_256_CBC_SHA;
    }

    public static List<TlsCipher> recommended() {
        return RECOMMENDED;
    }

    public static List<TlsCipher> values() {
        return ALL;
    }

    public static TlsCipher reservedForPrivateUse(
            int id,
            TlsCipherEngineFactory cipherEngine,
            TlsCipherModeFactory cipherMode,
            TlsKeyExchangeFactory clientKeyExchange,
            TlsAuthFactory auth,
            TlsHashFactory hash,
            List<TlsVersion> versions,
            boolean secure
    ) {
        if(id >>> 8 != 0xFF) {
            throw new TlsException(
                    "Only values from 0xFF00-0xFFFF inclusive are reserved for Private Use",
                    URI.create("https://www.iana.org/assignments/tls-parameters/tls-parameters-4.csv")
            );
        }

        return new TlsCipher(id, cipherEngine, cipherMode, clientKeyExchange, auth, hash, versions, secure);
    }
    //</editor-fold>

    private final int id;
    private final TlsKeyExchangeFactory keyExchange;
    private final TlsAuthFactory auth;
    private final TlsCipherEngineFactory cipherEngine;
    private final TlsCipherModeFactory cipherMode;
    private final TlsHashFactory hash;
    private final List<TlsVersion> versions;
    private final boolean secure;
    TlsCipher(
            int id,
            TlsCipherEngineFactory cipherEngine,
            TlsCipherModeFactory cipherMode,
            TlsKeyExchangeFactory keyExchange,
            TlsAuthFactory auth,
            TlsHashFactory hash,
            List<TlsVersion> versions,
            boolean secure
    ) {
        this.id = id;
        this.keyExchange = keyExchange;
        this.auth = auth;
        this.cipherEngine = cipherEngine;
        this.cipherMode = cipherMode;
        this.hash = hash;
        this.versions = versions;
        this.secure = secure;
    }

    @Override
    public Integer id() {
        return id;
    }

    public TlsKeyExchangeFactory keyExchangeFactory() {
        return keyExchange;
    }

    public TlsAuthFactory authFactory() {
        return auth;
    }

    public TlsCipherEngineFactory engineFactory() {
        return cipherEngine;
    }

    public TlsCipherModeFactory modeFactory() {
        return cipherMode;
    }

    public TlsHashFactory hashFactory() {
        return hash;
    }

    public List<TlsVersion> versions() {
        return versions;
    }

    public boolean secure() {
        return secure;
    }

    @Override
    public boolean equals(Object obj) {
        return obj == this || obj instanceof TlsCipher that && this.id == that.id;
    }

    @Override
    public int hashCode() {
        return Objects.hash(id);
    }

    @Override
    public String toString() {
        return "TlsCipher[id=" + id + ']';
    }
}
